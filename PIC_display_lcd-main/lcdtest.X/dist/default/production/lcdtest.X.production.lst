

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon May 08 15:49:27 2023

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     	FNCALL	_main,___awdiv
   556                           	FNCALL	_main,___wmul
   557                           	FNCALL	_main,__le_teclado
   558                           	FNCALL	_main,_escreve
   559                           	FNCALL	_main,_lcd_init
   560                           	FNCALL	_main,_limpa
   561                           	FNCALL	_main,_sprintf
   562                           	FNCALL	_main,_usa_caractere
   563                           	FNCALL	_usa_caractere,_byte
   564                           	FNCALL	_sprintf,___lwdiv
   565                           	FNCALL	_sprintf,___lwmod
   566                           	FNCALL	_limpa,_byte
   567                           	FNCALL	_lcd_init,_byte
   568                           	FNCALL	_lcd_init,_enable
   569                           	FNCALL	_lcd_init,_nibble
   570                           	FNCALL	_escreve,_byte
   571                           	FNCALL	_byte,_enable
   572                           	FNCALL	_byte,_muda_pin
   573                           	FNCALL	_byte,_nibble
   574                           	FNCALL	_nibble,_muda_pin
   575                           	FNCALL	_enable,_muda_pin
   576                           	FNCALL	__le_teclado,__muda_linha
   577                           	FNROOT	_main
   578                           	global	_tecla
   579                           	global	_lcd_pins
   580                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   581                           global __pidataBANK0
   582                           __pidataBANK0:
   583  0FA3                     	file	"lcdtest.c"
   584                           	line	39
   585                           
   586                           ;initializer for _tecla
   587                           	retlw	05Fh
   588  0FA3  345F               	line	129
   589                           
   590                           ;initializer for _lcd_pins
   591                           	retlw	low(7)
   592  0FA4  3407               	retlw	high(7)
   593  0FA5  3400               
   594                           	retlw	low(0)
   595  0FA6  3400               	retlw	low(7)
   596  0FA7  3407               	retlw	high(7)
   597  0FA8  3400               
   598                           	retlw	01h
   599  0FA9  3401               	retlw	low(7)
   600  0FAA  3407               	retlw	high(7)
   601  0FAB  3400               
   602                           	retlw	02h
   603  0FAC  3402               	retlw	03h
   604  0FAD  3403               	retlw	04h
   605  0FAE  3404               	retlw	05h
   606  0FAF  3405               	global	_dpowers
   607                           psect	strings,class=STRING,delta=2,noexec
   608                           global __pstrings
   609                           __pstrings:
   610  0003                     stringtab:
   611  0003                     	global    __stringtab
   612                           __stringtab:
   613  0003                     ;	String table - string pointers are 1 byte each
   614                           	btfsc	(btemp+1),7
   615  0003  1BFF               	ljmp	stringcode
   616  0004  280D               	bcf	status,7
   617  0005  1383               	btfsc	(btemp+1),0
   618  0006  187F               	bsf	status,7
   619  0007  1783               	movf	indf,w
   620  0008  0800               	incf fsr
   621  0009  0A84               skipnz
   622  000A  1903               incf btemp+1
   623  000B  0AFF               	return
   624  000C  0008               stringcode:stringdir:
   625  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   626  000D  3000               movwf pclath
   627  000E  008A               movf fsr,w
   628  000F  0804               incf fsr
   629  0010  0A84               	addwf pc
   630  0011  0782               	global __stringbase
   631                           __stringbase:
   632  0012                     	retlw	0
   633  0012  3400               psect	strings
   634                           	global    __end_of__stringtab
   635                           __end_of__stringtab:
   636  0013                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   637                           	line	358
   638                           _dpowers:
   639  0013                     	retlw	01h
   640  0013  3401               	retlw	0
   641  0014  3400               
   642                           	retlw	0Ah
   643  0015  340A               	retlw	0
   644  0016  3400               
   645                           	retlw	064h
   646  0017  3464               	retlw	0
   647  0018  3400               
   648                           	retlw	0E8h
   649  0019  34E8               	retlw	03h
   650  001A  3403               
   651                           	retlw	010h
   652  001B  3410               	retlw	027h
   653  001C  3427               
   654                           	global __end_of_dpowers
   655                           __end_of_dpowers:
   656  001D                     	global	_dpowers
   657                           	global	_operacao
   658                           	global	_numero_c
   659                           	global	_linha_atual
   660                           	global	_coluna_atual
   661                           	global	_numero_b
   662                           	global	_numero_a
   663                           	global	_buffer
   664                           	global	_port_data
   665                           psect	nvBANK0,class=BANK0,space=1,noexec
   666                           global __pnvBANK0
   667                           __pnvBANK0:
   668  0020                     _port_data:
   669  0020                            ds      2
   670  0020                     
   671                           	global	_port_en
   672                           _port_en:
   673  0022                            ds      2
   674  0022                     
   675                           	global	_port_rs
   676                           _port_rs:
   677  0024                            ds      2
   678  0024                     
   679                           	global	_D7
   680                           _D7:
   681  0026                            ds      2
   682  0026                     
   683                           	global	_D6
   684                           _D6:
   685  0028                            ds      2
   686  0028                     
   687                           	global	_D5
   688                           _D5:
   689  002A                            ds      2
   690  002A                     
   691                           	global	_D4
   692                           _D4:
   693  002C                            ds      2
   694  002C                     
   695                           	global	_EN
   696                           _EN:
   697  002E                            ds      2
   698  002E                     
   699                           	global	_RS
   700                           _RS:
   701  0030                            ds      2
   702  0030                     
   703                           	global	_PORTD
   704                           _PORTD	set	0x8
   705  0008                     	global	_PORTC
   706                           _PORTC	set	0x7
   707  0007                     	global	_RD7
   708                           _RD7	set	0x47
   709  0047                     	global	_RD6
   710                           _RD6	set	0x46
   711  0046                     	global	_RD5
   712                           _RD5	set	0x45
   713  0045                     	global	_RD4
   714                           _RD4	set	0x44
   715  0044                     	global	_RD3
   716                           _RD3	set	0x43
   717  0043                     	global	_RD2
   718                           _RD2	set	0x42
   719  0042                     	global	_RD1
   720                           _RD1	set	0x41
   721  0041                     	global	_RD0
   722                           _RD0	set	0x40
   723  0040                     	global	_TRISD
   724                           _TRISD	set	0x88
   725  0088                     	global	_TRISC
   726                           _TRISC	set	0x87
   727  0087                     	global	_ANSELH
   728                           _ANSELH	set	0x189
   729  0189                     	global	_ANSEL
   730                           _ANSEL	set	0x188
   731  0188                     psect	strings
   732                           	
   733                           STR_1:	
   734  001D                     	retlw	86	;'V'
   735  001D  3456               	retlw	124	;'|'
   736  001E  347C               	retlw	84	;'T'
   737  001F  3454               	retlw	48	;'0'
   738  0020  3430               	retlw	82	;'R'
   739  0021  3452               	retlw	0
   740  0022  3400               psect	strings
   741                           	
   742                           STR_2:	
   743  0023                     	retlw	37	;'%'
   744  0023  3425               	retlw	105	;'i'
   745  0024  3469               	retlw	0
   746  0025  3400               psect	strings
   747                           ; #config settings
   748                           global __CFG_FOSC$INTRC_NOCLKOUT
   749                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   750  0000                     global __CFG_WDTE$OFF
   751                           __CFG_WDTE$OFF equ 0x0
   752  0000                     	file	"C:\Users\22102679\AppData\Local\Temp\s1to."
   753                           	line	#
   754                           psect cinit,class=CODE,delta=2
   755                           global start_initialization
   756                           start_initialization:
   757  07DE                     
   758                           global __initialization
   759                           __initialization:
   760  07DE                     psect	bssBANK0,class=BANK0,space=1,noexec
   761                           global __pbssBANK0
   762                           __pbssBANK0:
   763  0042                     _operacao:
   764  0042                            ds      2
   765  0042                     
   766                           _numero_c:
   767  0044                            ds      2
   768  0044                     
   769                           _sequencia:
   770  0046                            ds      2
   771  0046                     
   772                           _linha_atual:
   773  0048                            ds      2
   774  0048                     
   775                           _coluna_atual:
   776  004A                            ds      1
   777  004A                     
   778                           _numero_b:
   779  004B                            ds      2
   780  004B                     
   781                           _numero_a:
   782  004D                            ds      2
   783  004D                     
   784                           psect	dataBANK0,class=BANK0,space=1,noexec
   785                           global __pdataBANK0
   786                           __pdataBANK0:
   787  004F                     	file	"lcdtest.c"
   788                           	line	39
   789                           _tecla:
   790  004F                            ds      1
   791  004F                     
   792                           psect	dataBANK0
   793                           	file	"lcdtest.c"
   794                           	line	129
   795                           _lcd_pins:
   796  0050                            ds      12
   797  0050                     
   798                           psect	bssBANK1,class=BANK1,space=1,noexec
   799                           global __pbssBANK1
   800                           __pbssBANK1:
   801  00A0                     _buffer:
   802  00A0                            ds      75
   803  00A0                     
   804                           	file	"C:\Users\22102679\AppData\Local\Temp\s1to."
   805                           	line	#
   806                           global btemp
   807                           psect inittext,class=CODE,delta=2
   808                           global init_fetch0,btemp
   809                           ;	Called with low address in FSR and high address in W
   810                           init_fetch0:
   811  0FB0                     	movf btemp,w
   812  0FB0  087E               	movwf pclath
   813  0FB1  008A               	movf btemp+1,w
   814  0FB2  087F               	movwf pc
   815  0FB3  0082               global init_ram0
   816                           ;Called with:
   817                           ;	high address of idata address in btemp 
   818                           ;	low address of idata address in btemp+1 
   819                           ;	low address of data in FSR
   820                           ;	high address + 1 of data in btemp-1
   821                           init_ram0:
   822  0FB4                     	fcall init_fetch0
   823  0FB4  120A  158A  27B0  120A  158A  	movwf indf,f
   824  0FB9  0080               	incf fsr,f
   825  0FBA  0A84               	movf fsr,w
   826  0FBB  0804               	xorwf btemp-1,w
   827  0FBC  067D               	btfsc status,2
   828  0FBD  1903               	retlw 0
   829  0FBE  3400               	incf btemp+1,f
   830  0FBF  0AFF               	btfsc status,2
   831  0FC0  1903               	incf btemp,f
   832  0FC1  0AFE               	goto init_ram0
   833  0FC2  2FB4               ; Initialize objects allocated to BANK0
   834                           psect cinit,class=CODE,delta=2,merge=1
   835                           global init_ram0, __pidataBANK0
   836                           	bcf	status, 7	;select IRP bank0
   837  07DE  1383               	movlw low(__pdataBANK0+13)
   838  07DF  305C               	movwf btemp-1,f
   839  07E0  00FD               	movlw high(__pidataBANK0)
   840  07E1  300F               	movwf btemp,f
   841  07E2  00FE               	movlw low(__pidataBANK0)
   842  07E3  30A3               	movwf btemp+1,f
   843  07E4  00FF               	movlw low(__pdataBANK0)
   844  07E5  304F               	movwf fsr,f
   845  07E6  0084               	fcall init_ram0
   846  07E7  120A  158A  27B4  120A  118A  	line	#
   847                           psect clrtext,class=CODE,delta=2
   848                           global clear_ram0
   849                           ;	Called with FSR containing the base address, and
   850                           ;	W with the last address+1
   851                           clear_ram0:
   852  0F9B                     	clrwdt			;clear the watchdog before getting into this loop
   853  0F9B  0064               clrloop0:
   854  0F9C                     	clrf	indf		;clear RAM location pointed to by FSR
   855  0F9C  0180               	incf	fsr,f		;increment pointer
   856  0F9D  0A84               	xorwf	fsr,w		;XOR with final address
   857  0F9E  0604               	btfsc	status,2	;have we reached the end yet?
   858  0F9F  1903               	retlw	0		;all done for this memory range, return
   859  0FA0  3400               	xorwf	fsr,w		;XOR again to restore value
   860  0FA1  0604               	goto	clrloop0		;do the next byte
   861  0FA2  2F9C               
   862                           ; Clear objects allocated to BANK1
   863                           psect cinit,class=CODE,delta=2,merge=1
   864                           	movlw	low(__pbssBANK1)
   865  07EC  30A0               	movwf	fsr
   866  07ED  0084               	movlw	low((__pbssBANK1)+04Bh)
   867  07EE  30EB               	fcall	clear_ram0
   868  07EF  120A  158A  279B  120A  118A  ; Clear objects allocated to BANK0
   869                           psect cinit,class=CODE,delta=2,merge=1
   870                           	movlw	low(__pbssBANK0)
   871  07F4  3042               	movwf	fsr
   872  07F5  0084               	movlw	low((__pbssBANK0)+0Dh)
   873  07F6  304F               	fcall	clear_ram0
   874  07F7  120A  158A  279B  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   875                           global end_of_initialization,__end_of__initialization
   876                           
   877                           ;End of C runtime variable initialization code
   878                           
   879                           end_of_initialization:
   880  07FC                     __end_of__initialization:
   881  07FC                     clrf status
   882  07FC  0183               ljmp _main	;jump to C main() function
   883  07FD  120A  118A  2DAF   psect	cstackCOMMON,class=COMMON,space=1,noexec
   884                           global __pcstackCOMMON
   885                           __pcstackCOMMON:
   886  0070                     ?_lcd_init:	; 1 bytes @ 0x0
   887  0070                     ?_limpa:	; 1 bytes @ 0x0
   888  0070                     ?__muda_linha:	; 1 bytes @ 0x0
   889  0070                     ??__muda_linha:	; 1 bytes @ 0x0
   890  0070                     ?__le_teclado:	; 1 bytes @ 0x0
   891  0070                     ??__le_teclado:	; 1 bytes @ 0x0
   892  0070                     ?_main:	; 1 bytes @ 0x0
   893  0070                     ?_muda_pin:	; 1 bytes @ 0x0
   894  0070                     ?_enable:	; 1 bytes @ 0x0
   895  0070                     	global	?___wmul
   896                           ?___wmul:	; 2 bytes @ 0x0
   897  0070                     	global	?___awdiv
   898                           ?___awdiv:	; 2 bytes @ 0x0
   899  0070                     	global	?___lwdiv
   900                           ?___lwdiv:	; 2 bytes @ 0x0
   901  0070                     	global	muda_pin@_port
   902                           muda_pin@_port:	; 2 bytes @ 0x0
   903  0070                     	global	___wmul@multiplier
   904                           ___wmul@multiplier:	; 2 bytes @ 0x0
   905  0070                     	global	___awdiv@divisor
   906                           ___awdiv@divisor:	; 2 bytes @ 0x0
   907  0070                     	global	___lwdiv@divisor
   908                           ___lwdiv@divisor:	; 2 bytes @ 0x0
   909  0070                     	ds	2
   910  0070                     	global	muda_pin@_pin
   911                           muda_pin@_pin:	; 2 bytes @ 0x2
   912  0072                     	global	___wmul@multiplicand
   913                           ___wmul@multiplicand:	; 2 bytes @ 0x2
   914  0072                     	global	___awdiv@dividend
   915                           ___awdiv@dividend:	; 2 bytes @ 0x2
   916  0072                     	global	___lwdiv@dividend
   917                           ___lwdiv@dividend:	; 2 bytes @ 0x2
   918  0072                     	ds	2
   919  0072                     ??___wmul:	; 1 bytes @ 0x4
   920  0074                     ??___awdiv:	; 1 bytes @ 0x4
   921  0074                     ??___lwdiv:	; 1 bytes @ 0x4
   922  0074                     	global	muda_pin@_val
   923                           muda_pin@_val:	; 2 bytes @ 0x4
   924  0074                     	global	___wmul@product
   925                           ___wmul@product:	; 2 bytes @ 0x4
   926  0074                     	ds	1
   927  0074                     	global	___awdiv@counter
   928                           ___awdiv@counter:	; 1 bytes @ 0x5
   929  0075                     	global	___lwdiv@quotient
   930                           ___lwdiv@quotient:	; 2 bytes @ 0x5
   931  0075                     	ds	1
   932  0075                     ??_muda_pin:	; 1 bytes @ 0x6
   933  0076                     	global	___awdiv@sign
   934                           ___awdiv@sign:	; 1 bytes @ 0x6
   935  0076                     	ds	1
   936  0076                     	global	___lwdiv@counter
   937                           ___lwdiv@counter:	; 1 bytes @ 0x7
   938  0077                     	global	___awdiv@quotient
   939                           ___awdiv@quotient:	; 2 bytes @ 0x7
   940  0077                     	ds	1
   941  0077                     ??_enable:	; 1 bytes @ 0x8
   942  0078                     ?_nibble:	; 1 bytes @ 0x8
   943  0078                     	global	?___lwmod
   944                           ?___lwmod:	; 2 bytes @ 0x8
   945  0078                     	global	nibble@dado
   946                           nibble@dado:	; 2 bytes @ 0x8
   947  0078                     	global	___lwmod@divisor
   948                           ___lwmod@divisor:	; 2 bytes @ 0x8
   949  0078                     	ds	2
   950  0078                     ??_nibble:	; 1 bytes @ 0xA
   951  007A                     	global	___lwmod@dividend
   952                           ___lwmod@dividend:	; 2 bytes @ 0xA
   953  007A                     	ds	2
   954  007A                     ??_lcd_init:	; 1 bytes @ 0xC
   955  007C                     ??_escreve:	; 1 bytes @ 0xC
   956  007C                     ??_limpa:	; 1 bytes @ 0xC
   957  007C                     ?_usa_caractere:	; 1 bytes @ 0xC
   958  007C                     ??___lwmod:	; 1 bytes @ 0xC
   959  007C                     	global	usa_caractere@col
   960                           usa_caractere@col:	; 1 bytes @ 0xC
   961  007C                     	ds	1
   962  007C                     	global	escreve@lin
   963                           escreve@lin:	; 1 bytes @ 0xD
   964  007D                     	global	usa_caractere@caractere
   965                           usa_caractere@caractere:	; 1 bytes @ 0xD
   966  007D                     	global	___lwmod@counter
   967                           ___lwmod@counter:	; 1 bytes @ 0xD
   968  007D                     	ds	1
   969  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
   970                           global __pcstackBANK0
   971                           __pcstackBANK0:
   972  0032                     ?_byte:	; 1 bytes @ 0x0
   973  0032                     	global	?_sprintf
   974                           ?_sprintf:	; 2 bytes @ 0x0
   975  0032                     	global	sprintf@f
   976                           sprintf@f:	; 1 bytes @ 0x0
   977  0032                     	global	byte@escreve
   978                           byte@escreve:	; 2 bytes @ 0x0
   979  0032                     	ds	2
   980  0032                     	global	byte@dado
   981                           byte@dado:	; 1 bytes @ 0x2
   982  0034                     	ds	1
   983  0034                     ??_sprintf:	; 1 bytes @ 0x3
   984  0035                     ??_byte:	; 1 bytes @ 0x3
   985  0035                     	ds	3
   986  0035                     ?_escreve:	; 1 bytes @ 0x6
   987  0038                     ??_usa_caractere:	; 1 bytes @ 0x6
   988  0038                     	global	lcd_init@lcd_pins
   989                           lcd_init@lcd_pins:	; 1 bytes @ 0x6
   990  0038                     	global	escreve@col
   991                           escreve@col:	; 1 bytes @ 0x6
   992  0038                     	global	sprintf@ap
   993                           sprintf@ap:	; 1 bytes @ 0x6
   994  0038                     	ds	1
   995  0038                     	global	usa_caractere@lin
   996                           usa_caractere@lin:	; 1 bytes @ 0x7
   997  0039                     	global	sprintf@flag
   998                           sprintf@flag:	; 1 bytes @ 0x7
   999  0039                     	global	escreve@str
  1000                           escreve@str:	; 2 bytes @ 0x7
  1001  0039                     	ds	1
  1002  0039                     	global	sprintf@prec
  1003                           sprintf@prec:	; 1 bytes @ 0x8
  1004  003A                     	ds	1
  1005  003A                     	global	sprintf@val
  1006                           sprintf@val:	; 2 bytes @ 0x9
  1007  003B                     	ds	2
  1008  003B                     	global	sprintf@sp
  1009                           sprintf@sp:	; 1 bytes @ 0xB
  1010  003D                     	ds	1
  1011  003D                     	global	sprintf@c
  1012                           sprintf@c:	; 1 bytes @ 0xC
  1013  003E                     	ds	1
  1014  003E                     ??_main:	; 1 bytes @ 0xD
  1015  003F                     	ds	3
  1016  003F                     ;!
  1017                           ;!Data Sizes:
  1018                           ;!    Strings     9
  1019                           ;!    Constant    10
  1020                           ;!    Data        13
  1021                           ;!    BSS         88
  1022                           ;!    Persistent  18
  1023                           ;!    Stack       0
  1024                           ;!
  1025                           ;!Auto Spaces:
  1026                           ;!    Space          Size  Autos    Used
  1027                           ;!    COMMON           14     14      14
  1028                           ;!    BANK0            80     16      60
  1029                           ;!    BANK1            80      0      75
  1030                           ;!    BANK3            96      0       0
  1031                           ;!    BANK2            96      0       0
  1032                           
  1033                           ;!
  1034                           ;!Pointer List with Targets:
  1035                           ;!
  1036                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1037                           ;!		 -> STR_2(CODE[3]), 
  1038                           ;!
  1039                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 75
  1040                           ;!		 -> buffer(BANK1[75]), 
  1041                           ;!
  1042                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1043                           ;!		 -> ?_sprintf(BANK0[2]), 
  1044                           ;!
  1045                           ;!    escreve@str	PTR unsigned char  size(2) Largest target is 75
  1046                           ;!		 -> buffer(BANK1[75]), STR_1(CODE[6]), 
  1047                           ;!
  1048                           ;!    lcd_init@lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 
                                 1
  1049                           ;!		 -> PORTC(SFR0[1]), 
  1050                           ;!
  1051                           ;!    lcd_init@lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1

  1052                           ;!		 -> PORTC(SFR0[1]), 
  1053                           ;!
  1054                           ;!    lcd_init@lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1

  1055                           ;!		 -> PORTC(SFR0[1]), 
  1056                           ;!
  1057                           ;!    lcd_init@lcd_pins	PTR struct . size(1) Largest target is 12
  1058                           ;!		 -> lcd_pins(BANK0[12]), 
  1059                           ;!
  1060                           ;!    port_rs	PTR volatile unsigned char  size(2) Largest target is 1
  1061                           ;!		 -> NULL(NULL[0]), PORTC(SFR0[1]), 
  1062                           ;!
  1063                           ;!    port_data	PTR volatile unsigned char  size(2) Largest target is 1
  1064                           ;!		 -> NULL(NULL[0]), PORTC(SFR0[1]), 
  1065                           ;!
  1066                           ;!    port_en	PTR volatile unsigned char  size(2) Largest target is 1
  1067                           ;!		 -> NULL(NULL[0]), PORTC(SFR0[1]), 
  1068                           ;!
  1069                           ;!    muda_pin@_port	PTR volatile unsigned char  size(2) Largest target is 1
  1070                           ;!		 -> NULL(NULL[0]), PORTC(SFR0[1]), 
  1071                           ;!
  1072                           ;!    S36$port_data	PTR volatile unsigned char  size(2) Largest target is 1
  1073                           ;!		 -> PORTC(SFR0[1]), 
  1074                           ;!
  1075                           ;!    lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
  1076                           ;!		 -> PORTC(SFR0[1]), 
  1077                           ;!
  1078                           ;!    S36$port_en	PTR volatile unsigned char  size(2) Largest target is 1
  1079                           ;!		 -> PORTC(SFR0[1]), 
  1080                           ;!
  1081                           ;!    lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
  1082                           ;!		 -> PORTC(SFR0[1]), 
  1083                           ;!
  1084                           ;!    S36$port_rs	PTR volatile unsigned char  size(2) Largest target is 1
  1085                           ;!		 -> PORTC(SFR0[1]), 
  1086                           ;!
  1087                           ;!    lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
  1088                           ;!		 -> PORTC(SFR0[1]), 
  1089                           ;!
  1090                           
  1091                           
  1092                           ;!
  1093                           ;!Critical Paths under _main in COMMON
  1094                           ;!
  1095                           ;!    _main->_escreve
  1096                           ;!    _main->_lcd_init
  1097                           ;!    _main->_limpa
  1098                           ;!    _main->_usa_caractere
  1099                           ;!    _sprintf->___lwmod
  1100                           ;!    ___lwmod->___lwdiv
  1101                           ;!    _lcd_init->_nibble
  1102                           ;!    _byte->_nibble
  1103                           ;!    _nibble->_muda_pin
  1104                           ;!    _enable->_muda_pin
  1105                           ;!
  1106                           ;!Critical Paths under _main in BANK0
  1107                           ;!
  1108                           ;!    _main->_sprintf
  1109                           ;!    _usa_caractere->_byte
  1110                           ;!    _limpa->_byte
  1111                           ;!    _lcd_init->_byte
  1112                           ;!    _escreve->_byte
  1113                           ;!
  1114                           ;!Critical Paths under _main in BANK1
  1115                           ;!
  1116                           ;!    None.
  1117                           ;!
  1118                           ;!Critical Paths under _main in BANK3
  1119                           ;!
  1120                           ;!    None.
  1121                           ;!
  1122                           ;!Critical Paths under _main in BANK2
  1123                           ;!
  1124                           ;!    None.
  1125                           
  1126 ;;
  1127 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1128 ;;
  1129                           
  1130                           ;!
  1131                           ;!Call Graph Tables:
  1132                           ;!
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1135                           ;! ---------------------------------------------------------------------------------
  1136                           ;! (0) _main                                                 3     3      0   38705
  1137                           ;!                                             13 BANK0      3     3      0
  1138                           ;!                            ___awdiv
  1139                           ;!                             ___wmul
  1140                           ;!                        __le_teclado
  1141                           ;!                            _escreve
  1142                           ;!                           _lcd_init
  1143                           ;!                              _limpa
  1144                           ;!                            _sprintf
  1145                           ;!                      _usa_caractere
  1146                           ;! ---------------------------------------------------------------------------------
  1147                           ;! (1) _usa_caractere                                        4     2      2    9236
  1148                           ;!                                             12 COMMON     2     0      2
  1149                           ;!                                              6 BANK0      2     2      0
  1150                           ;!                               _byte
  1151                           ;! ---------------------------------------------------------------------------------
  1152                           ;! (1) _sprintf                                             21    18      3    1211
  1153                           ;!                                              0 BANK0     13    10      3
  1154                           ;!                            ___lwdiv
  1155                           ;!                            ___lwmod
  1156                           ;! ---------------------------------------------------------------------------------
  1157                           ;! (2) ___lwmod                                              6     2      4     311
  1158                           ;!                                              8 COMMON     6     2      4
  1159                           ;!                            ___lwdiv (ARG)
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;! (2) ___lwdiv                                              8     4      4     314
  1162                           ;!                                              0 COMMON     8     4      4
  1163                           ;! ---------------------------------------------------------------------------------
  1164                           ;! (1) _limpa                                                2     2      0    7628
  1165                           ;!                                             12 COMMON     2     2      0
  1166                           ;!                               _byte
  1167                           ;! ---------------------------------------------------------------------------------
  1168                           ;! (1) _lcd_init                                             3     3      0   11587
  1169                           ;!                                             12 COMMON     2     2      0
  1170                           ;!                                              6 BANK0      1     1      0
  1171                           ;!                               _byte
  1172                           ;!                             _enable
  1173                           ;!                             _nibble
  1174                           ;! ---------------------------------------------------------------------------------
  1175                           ;! (1) _escreve                                              5     2      3    8043
  1176                           ;!                                             12 COMMON     2     2      0
  1177                           ;!                                              6 BANK0      3     0      3
  1178                           ;!                               _byte
  1179                           ;! ---------------------------------------------------------------------------------
  1180                           ;! (2) _byte                                                 6     3      3    7628
  1181                           ;!                                              0 BANK0      6     3      3
  1182                           ;!                             _enable
  1183                           ;!                           _muda_pin
  1184                           ;!                             _nibble
  1185                           ;! ---------------------------------------------------------------------------------
  1186                           ;! (3) _nibble                                               4     2      2    2022
  1187                           ;!                                              8 COMMON     4     2      2
  1188                           ;!                           _muda_pin
  1189                           ;! ---------------------------------------------------------------------------------
  1190                           ;! (3) _enable                                               2     2      0    1706
  1191                           ;!                                              8 COMMON     2     2      0
  1192                           ;!                           _muda_pin
  1193                           ;! ---------------------------------------------------------------------------------
  1194                           ;! (4) _muda_pin                                             8     2      6    1706
  1195                           ;!                                              0 COMMON     8     2      6
  1196                           ;! ---------------------------------------------------------------------------------
  1197                           ;! (1) __le_teclado                                          2     2      0       0
  1198                           ;!                                              0 COMMON     2     2      0
  1199                           ;!                        __muda_linha
  1200                           ;! ---------------------------------------------------------------------------------
  1201                           ;! (2) __muda_linha                                          0     0      0       0
  1202                           ;! ---------------------------------------------------------------------------------
  1203                           ;! (1) ___wmul                                               6     2      4     548
  1204                           ;!                                              0 COMMON     6     2      4
  1205                           ;! ---------------------------------------------------------------------------------
  1206                           ;! (1) ___awdiv                                              9     5      4     452
  1207                           ;!                                              0 COMMON     9     5      4
  1208                           ;! ---------------------------------------------------------------------------------
  1209                           ;! Estimated maximum stack depth 4
  1210                           ;! ---------------------------------------------------------------------------------
  1211                           ;!
  1212                           ;! Call Graph Graphs:
  1213                           ;!
  1214                           ;! _main (ROOT)
  1215                           ;!   ___awdiv
  1216                           ;!   ___wmul
  1217                           ;!   __le_teclado
  1218                           ;!     __muda_linha
  1219                           ;!   _escreve
  1220                           ;!     _byte
  1221                           ;!       _enable
  1222                           ;!         _muda_pin
  1223                           ;!       _muda_pin
  1224                           ;!       _nibble
  1225                           ;!         _muda_pin
  1226                           ;!   _lcd_init
  1227                           ;!     _byte
  1228                           ;!       _enable
  1229                           ;!         _muda_pin
  1230                           ;!       _muda_pin
  1231                           ;!       _nibble
  1232                           ;!         _muda_pin
  1233                           ;!     _enable
  1234                           ;!       _muda_pin
  1235                           ;!     _nibble
  1236                           ;!       _muda_pin
  1237                           ;!   _limpa
  1238                           ;!     _byte
  1239                           ;!       _enable
  1240                           ;!         _muda_pin
  1241                           ;!       _muda_pin
  1242                           ;!       _nibble
  1243                           ;!         _muda_pin
  1244                           ;!   _sprintf
  1245                           ;!     ___lwdiv
  1246                           ;!     ___lwmod
  1247                           ;!       ___lwdiv (ARG)
  1248                           ;!   _usa_caractere
  1249                           ;!     _byte
  1250                           ;!       _enable
  1251                           ;!         _muda_pin
  1252                           ;!       _muda_pin
  1253                           ;!       _nibble
  1254                           ;!         _muda_pin
  1255                           ;!
  1256                           
  1257                           ;! Address spaces:
  1258                           
  1259                           ;!Name               Size   Autos  Total    Cost      Usage
  1260                           ;!BANK3               60      0       0       9        0.0%
  1261                           ;!BITBANK3            60      0       0       8        0.0%
  1262                           ;!SFR3                 0      0       0       4        0.0%
  1263                           ;!BITSFR3              0      0       0       4        0.0%
  1264                           ;!BANK2               60      0       0      11        0.0%
  1265                           ;!BITBANK2            60      0       0      10        0.0%
  1266                           ;!SFR2                 0      0       0       5        0.0%
  1267                           ;!BITSFR2              0      0       0       5        0.0%
  1268                           ;!BANK1               50      0      4B       7       93.8%
  1269                           ;!BITBANK1            50      0       0       6        0.0%
  1270                           ;!SFR1                 0      0       0       2        0.0%
  1271                           ;!BITSFR1              0      0       0       2        0.0%
  1272                           ;!BANK0               50     10      3C       5       75.0%
  1273                           ;!BITBANK0            50      0       0       4        0.0%
  1274                           ;!SFR0                 0      0       0       1        0.0%
  1275                           ;!BITSFR0              0      0       0       1        0.0%
  1276                           ;!COMMON               E      E       E       1      100.0%
  1277                           ;!BITCOMMON            E      0       0       0        0.0%
  1278                           ;!CODE                 0      0       0       0        0.0%
  1279                           ;!DATA                 0      0      95      12        0.0%
  1280                           ;!ABS                  0      0      95       3        0.0%
  1281                           ;!NULL                 0      0       0       0        0.0%
  1282                           ;!STACK                0      0       0       2        0.0%
  1283                           ;!EEDATA             100      0       0       0        0.0%
  1284                           
  1285                           	global	_main
  1286                           
  1287 ;; *************** function _main *****************
  1288 ;; Defined at:
  1289 ;;		line 143 in file "lcdtest.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : B00/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0
  1305 ;;      Temps:          0       3       0       0       0
  1306 ;;      Totals:         0       3       0       0       0
  1307 ;;Total ram usage:        3 bytes
  1308 ;; Hardware stack levels required when called:    4
  1309 ;; This function calls:
  1310 ;;		___awdiv
  1311 ;;		___wmul
  1312 ;;		__le_teclado
  1313 ;;		_escreve
  1314 ;;		_lcd_init
  1315 ;;		_limpa
  1316 ;;		_sprintf
  1317 ;;		_usa_caractere
  1318 ;; This function is called by:
  1319 ;;		Startup code after reset
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1323                           	file	"lcdtest.c"
  1324                           	line	143
  1325                           global __pmaintext
  1326                           __pmaintext:	;psect for function _main
  1327  05AF                     psect	maintext
  1328                           	file	"lcdtest.c"
  1329                           	line	143
  1330                           	global	__size_of_main
  1331                           	__size_of_main	equ	__end_of_main-_main
  1332  022F                     	
  1333                           _main:	
  1334  05AF                     ;incstack = 0
  1335                           	opt	stack 4
  1336                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1337                           	line	147
  1338                           	
  1339                           l1852:	
  1340  05AF                     ;lcdtest.c: 147:     TRISC = 0x00;
  1341                           	bsf	status, 5	;RP0=1, select bank1
  1342  05AF  1683               	bcf	status, 6	;RP1=0, select bank1
  1343  05B0  1303               	clrf	(135)^080h	;volatile
  1344  05B1  0187               	line	148
  1345                           ;lcdtest.c: 148:     PORTC = 0x00;
  1346                           	bcf	status, 5	;RP0=0, select bank0
  1347  05B2  1283               	bcf	status, 6	;RP1=0, select bank0
  1348  05B3  1303               	clrf	(7)	;volatile
  1349  05B4  0187               	line	149
  1350                           	
  1351                           l1854:	
  1352  05B5                     ;lcdtest.c: 149:     TRISD = 0xF0;
  1353                           	movlw	low(0F0h)
  1354  05B5  30F0               	bsf	status, 5	;RP0=1, select bank1
  1355  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  1356  05B7  1303               	movwf	(136)^080h	;volatile
  1357  05B8  0088               	line	150
  1358                           	
  1359                           l1856:	
  1360  05B9                     ;lcdtest.c: 150:     PORTD = 0x00;
  1361                           	bcf	status, 5	;RP0=0, select bank0
  1362  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  1363  05BA  1303               	clrf	(8)	;volatile
  1364  05BB  0188               	line	151
  1365                           	
  1366                           l1858:	
  1367  05BC                     ;lcdtest.c: 151:     ANSEL = 0x00;
  1368                           	bsf	status, 5	;RP0=1, select bank3
  1369  05BC  1683               	bsf	status, 6	;RP1=1, select bank3
  1370  05BD  1703               	clrf	(392)^0180h	;volatile
  1371  05BE  0188               	line	152
  1372                           	
  1373                           l1860:	
  1374  05BF                     ;lcdtest.c: 152:    ANSELH = 0x00;
  1375                           	clrf	(393)^0180h	;volatile
  1376  05BF  0189               	line	154
  1377                           	
  1378                           l1862:	
  1379  05C0                     ;lcdtest.c: 154:     lcd_init(&lcd_pins);
  1380                           	movlw	(low(_lcd_pins|((0x0)<<8)))&0ffh
  1381  05C0  3050               	fcall	_lcd_init
  1382  05C1  120A  118A  230A  120A  118A  	line	155
  1383                           	
  1384                           l1864:	
  1385  05C6                     ;lcdtest.c: 155:     escreve(2,2,"V|T0R");
  1386                           	movlw	low(02h)
  1387  05C6  3002               	bcf	status, 5	;RP0=0, select bank0
  1388  05C7  1283               	bcf	status, 6	;RP1=0, select bank0
  1389  05C8  1303               	movwf	(??_main+0)+0
  1390  05C9  00BF               	movf	(??_main+0)+0,w
  1391  05CA  083F               	movwf	(escreve@col)
  1392  05CB  00B8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1393  05CC  300B               	movwf	(escreve@str)
  1394  05CD  00B9               	movlw	80h
  1395  05CE  3080               	movwf	(escreve@str+1)
  1396  05CF  00BA               	movlw	low(02h)
  1397  05D0  3002               	fcall	_escreve
  1398  05D1  120A  118A  21CF  120A  118A  	line	156
  1399                           	
  1400                           l1866:	
  1401  05D6                     ;lcdtest.c: 156:     _delay((unsigned long)((2500)*(4000000/4000.0)));
  1402                           	opt asmopt_push
  1403                           opt asmopt_off
  1404                           movlw  13
  1405  05D6  300D               	bcf	status, 5	;RP0=0, select bank0
  1406  05D7  1283               	bcf	status, 6	;RP1=0, select bank0
  1407  05D8  1303               movwf	((??_main+0)+0+2),f
  1408  05D9  00C1               movlw	175
  1409  05DA  30AF               movwf	((??_main+0)+0+1),f
  1410  05DB  00C0               	movlw	181
  1411  05DC  30B5               movwf	((??_main+0)+0),f
  1412  05DD  00BF               	u1337:
  1413  05DE                     decfsz	((??_main+0)+0),f
  1414  05DE  0BBF               	goto	u1337
  1415  05DF  2DDE               	decfsz	((??_main+0)+0+1),f
  1416  05E0  0BC0               	goto	u1337
  1417  05E1  2DDE               	decfsz	((??_main+0)+0+2),f
  1418  05E2  0BC1               	goto	u1337
  1419  05E3  2DDE               	nop2
  1420  05E4  2DE5               opt asmopt_pop
  1421                           
  1422                           	line	157
  1423                           	
  1424                           l1868:	
  1425  05E5                     ;lcdtest.c: 157:     limpa(),coluna_atual=0;
  1426                           	fcall	_limpa
  1427  05E5  120A  158A  27C3  120A  118A  	
  1428                           l1870:	
  1429  05EA                     	bcf	status, 5	;RP0=0, select bank0
  1430  05EA  1283               	bcf	status, 6	;RP1=0, select bank0
  1431  05EB  1303               	clrf	(_coluna_atual)
  1432  05EC  01CA               	goto	l1872
  1433  05ED  2DEE               	line	160
  1434                           ;lcdtest.c: 160:     while(1)
  1435                           	
  1436                           l124:	
  1437  05EE                     	line	162
  1438                           	
  1439                           l1872:	
  1440  05EE                     ;lcdtest.c: 161:     {;lcdtest.c: 162:         tecla = _le_teclado();
  1441                           	fcall	__le_teclado
  1442  05EE  120A  118A  23BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1443  05F3  1283               	bcf	status, 6	;RP1=0, select bank0
  1444  05F4  1303               	movwf	(??_main+0)+0
  1445  05F5  00BF               	movf	(??_main+0)+0,w
  1446  05F6  083F               	movwf	(_tecla)
  1447  05F7  00CF               	line	164
  1448                           	
  1449                           l1874:	
  1450  05F8                     ;lcdtest.c: 164:         if(tecla>='0'&&tecla<='9'){
  1451                           	movlw	low(030h)
  1452  05F8  3030               	subwf	(_tecla),w
  1453  05F9  024F               	skipc
  1454  05FA  1C03               	goto	u1201
  1455  05FB  2DFD               	goto	u1200
  1456  05FC  2DFE               u1201:
  1457  05FD                     	goto	l1892
  1458  05FD  2E73               u1200:
  1459  05FE                     	
  1460                           l1876:	
  1461  05FE                     	movlw	low(03Ah)
  1462  05FE  303A               	subwf	(_tecla),w
  1463  05FF  024F               	skipnc
  1464  0600  1803               	goto	u1211
  1465  0601  2E03               	goto	u1210
  1466  0602  2E04               u1211:
  1467  0603                     	goto	l1892
  1468  0603  2E73               u1210:
  1469  0604                     	line	165
  1470                           	
  1471                           l1878:	
  1472  0604                     ;lcdtest.c: 165:             if(operacao == 0){numero_a=numero_a*10+tecla-'0',usa_caract
                                 ere(1,coluna_atual++,tecla);}
  1473                           	movf	((_operacao)),w
  1474  0604  0842               iorwf	((_operacao+1)),w
  1475  0605  0443               	btfss	status,2
  1476  0606  1D03               	goto	u1221
  1477  0607  2E09               	goto	u1220
  1478  0608  2E0A               u1221:
  1479  0609                     	goto	l1886
  1480  0609  2E3E               u1220:
  1481  060A                     	
  1482                           l1880:	
  1483  060A                     	movf	(_numero_a+1),w
  1484  060A  084E               	movwf	(___wmul@multiplier+1)
  1485  060B  00F1               	movf	(_numero_a),w
  1486  060C  084D               	movwf	(___wmul@multiplier)
  1487  060D  00F0               	movlw	0Ah
  1488  060E  300A               	movwf	(___wmul@multiplicand)
  1489  060F  00F2               	movlw	0
  1490  0610  3000               	movwf	((___wmul@multiplicand))+1
  1491  0611  00F3               	fcall	___wmul
  1492  0612  120A  158A  27D8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1493  0617  1283               	bcf	status, 6	;RP1=0, select bank0
  1494  0618  1303               	movf	(_tecla),w
  1495  0619  084F               	addwf	(0+(?___wmul)),w
  1496  061A  0770               	movwf	(??_main+0)+0
  1497  061B  00BF               	movlw	0
  1498  061C  3000               	skipnc
  1499  061D  1803               	movlw	1
  1500  061E  3001               	addwf	(1+(?___wmul)),w
  1501  061F  0771               	movwf	1+(??_main+0)+0
  1502  0620  00C0               	movf	0+(??_main+0)+0,w
  1503  0621  083F               	addlw	low(0FFD0h)
  1504  0622  3ED0               	movwf	(_numero_a)
  1505  0623  00CD               	movf	1+(??_main+0)+0,w
  1506  0624  0840               	skipnc
  1507  0625  1803               	addlw	1
  1508  0626  3E01               	addlw	high(0FFD0h)
  1509  0627  3EFF               	movwf	1+(_numero_a)
  1510  0628  00CE               	
  1511                           l1882:	
  1512  0629                     	movf	(_coluna_atual),w
  1513  0629  084A               	movwf	(??_main+0)+0
  1514  062A  00BF               	movf	(??_main+0)+0,w
  1515  062B  083F               	movwf	(usa_caractere@col)
  1516  062C  00FC               	movf	(_tecla),w
  1517  062D  084F               	movwf	(??_main+1)+0
  1518  062E  00C0               	movf	(??_main+1)+0,w
  1519  062F  0840               	movwf	(usa_caractere@caractere)
  1520  0630  00FD               	movlw	low(01h)
  1521  0631  3001               	fcall	_usa_caractere
  1522  0632  120A  118A  208C  120A  118A  	
  1523                           l1884:	
  1524  0637                     	movlw	low(01h)
  1525  0637  3001               	bcf	status, 5	;RP0=0, select bank0
  1526  0638  1283               	bcf	status, 6	;RP1=0, select bank0
  1527  0639  1303               	movwf	(??_main+0)+0
  1528  063A  00BF               	movf	(??_main+0)+0,w
  1529  063B  083F               	addwf	(_coluna_atual),f
  1530  063C  07CA               	goto	l1892
  1531  063D  2E73               	line	167
  1532                           ;lcdtest.c: 167:             else{numero_b=numero_b*10+tecla-'0',usa_caractere(1,coluna_
                                 atual++,tecla);}
  1533                           	
  1534                           l126:	
  1535  063E                     	
  1536                           l1886:	
  1537  063E                     	movf	(_numero_b+1),w
  1538  063E  084C               	movwf	(___wmul@multiplier+1)
  1539  063F  00F1               	movf	(_numero_b),w
  1540  0640  084B               	movwf	(___wmul@multiplier)
  1541  0641  00F0               	movlw	0Ah
  1542  0642  300A               	movwf	(___wmul@multiplicand)
  1543  0643  00F2               	movlw	0
  1544  0644  3000               	movwf	((___wmul@multiplicand))+1
  1545  0645  00F3               	fcall	___wmul
  1546  0646  120A  158A  27D8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1547  064B  1283               	bcf	status, 6	;RP1=0, select bank0
  1548  064C  1303               	movf	(_tecla),w
  1549  064D  084F               	addwf	(0+(?___wmul)),w
  1550  064E  0770               	movwf	(??_main+0)+0
  1551  064F  00BF               	movlw	0
  1552  0650  3000               	skipnc
  1553  0651  1803               	movlw	1
  1554  0652  3001               	addwf	(1+(?___wmul)),w
  1555  0653  0771               	movwf	1+(??_main+0)+0
  1556  0654  00C0               	movf	0+(??_main+0)+0,w
  1557  0655  083F               	addlw	low(0FFD0h)
  1558  0656  3ED0               	movwf	(_numero_b)
  1559  0657  00CB               	movf	1+(??_main+0)+0,w
  1560  0658  0840               	skipnc
  1561  0659  1803               	addlw	1
  1562  065A  3E01               	addlw	high(0FFD0h)
  1563  065B  3EFF               	movwf	1+(_numero_b)
  1564  065C  00CC               	
  1565                           l1888:	
  1566  065D                     	movf	(_coluna_atual),w
  1567  065D  084A               	movwf	(??_main+0)+0
  1568  065E  00BF               	movf	(??_main+0)+0,w
  1569  065F  083F               	movwf	(usa_caractere@col)
  1570  0660  00FC               	movf	(_tecla),w
  1571  0661  084F               	movwf	(??_main+1)+0
  1572  0662  00C0               	movf	(??_main+1)+0,w
  1573  0663  0840               	movwf	(usa_caractere@caractere)
  1574  0664  00FD               	movlw	low(01h)
  1575  0665  3001               	fcall	_usa_caractere
  1576  0666  120A  118A  208C  120A  118A  	
  1577                           l1890:	
  1578  066B                     	movlw	low(01h)
  1579  066B  3001               	bcf	status, 5	;RP0=0, select bank0
  1580  066C  1283               	bcf	status, 6	;RP1=0, select bank0
  1581  066D  1303               	movwf	(??_main+0)+0
  1582  066E  00BF               	movf	(??_main+0)+0,w
  1583  066F  083F               	addwf	(_coluna_atual),f
  1584  0670  07CA               	goto	l1892
  1585  0671  2E73               	
  1586                           l127:	
  1587  0672                     	goto	l1892
  1588  0672  2E73               	line	168
  1589                           ;lcdtest.c: 168:         }
  1590                           	
  1591                           l125:	
  1592  0673                     	line	170
  1593                           	
  1594                           l1892:	
  1595  0673                     ;lcdtest.c: 170:         if(tecla == '+'){
  1596                           		movlw	43
  1597  0673  302B               	xorwf	((_tecla)),w
  1598  0674  064F               	btfss	status,2
  1599  0675  1D03               	goto	u1231
  1600  0676  2E78               	goto	u1230
  1601  0677  2E79               u1231:
  1602  0678                     	goto	l1900
  1603  0678  2E92               u1230:
  1604  0679                     	line	171
  1605                           	
  1606                           l1894:	
  1607  0679                     ;lcdtest.c: 171:             operacao = 1;
  1608                           	movlw	01h
  1609  0679  3001               	movwf	(_operacao)
  1610  067A  00C2               	movlw	0
  1611  067B  3000               	movwf	((_operacao))+1
  1612  067C  00C3               	line	172
  1613                           	
  1614                           l1896:	
  1615  067D                     ;lcdtest.c: 172:           usa_caractere(1,coluna_atual++,'+');
  1616                           	movf	(_coluna_atual),w
  1617  067D  084A               	movwf	(??_main+0)+0
  1618  067E  00BF               	movf	(??_main+0)+0,w
  1619  067F  083F               	movwf	(usa_caractere@col)
  1620  0680  00FC               	movlw	low(02Bh)
  1621  0681  302B               	movwf	(??_main+1)+0
  1622  0682  00C0               	movf	(??_main+1)+0,w
  1623  0683  0840               	movwf	(usa_caractere@caractere)
  1624  0684  00FD               	movlw	low(01h)
  1625  0685  3001               	fcall	_usa_caractere
  1626  0686  120A  118A  208C  120A  118A  	
  1627                           l1898:	
  1628  068B                     	movlw	low(01h)
  1629  068B  3001               	bcf	status, 5	;RP0=0, select bank0
  1630  068C  1283               	bcf	status, 6	;RP1=0, select bank0
  1631  068D  1303               	movwf	(??_main+0)+0
  1632  068E  00BF               	movf	(??_main+0)+0,w
  1633  068F  083F               	addwf	(_coluna_atual),f
  1634  0690  07CA               	goto	l1900
  1635  0691  2E92               	line	173
  1636                           ;lcdtest.c: 173:         }
  1637                           	
  1638                           l128:	
  1639  0692                     	line	175
  1640                           	
  1641                           l1900:	
  1642  0692                     ;lcdtest.c: 175:         if(tecla == '-'){
  1643                           		movlw	45
  1644  0692  302D               	xorwf	((_tecla)),w
  1645  0693  064F               	btfss	status,2
  1646  0694  1D03               	goto	u1241
  1647  0695  2E97               	goto	u1240
  1648  0696  2E98               u1241:
  1649  0697                     	goto	l1908
  1650  0697  2EB1               u1240:
  1651  0698                     	line	176
  1652                           	
  1653                           l1902:	
  1654  0698                     ;lcdtest.c: 176:             operacao = 2;
  1655                           	movlw	02h
  1656  0698  3002               	movwf	(_operacao)
  1657  0699  00C2               	movlw	0
  1658  069A  3000               	movwf	((_operacao))+1
  1659  069B  00C3               	line	177
  1660                           	
  1661                           l1904:	
  1662  069C                     ;lcdtest.c: 177:           usa_caractere(1,coluna_atual++,'-');
  1663                           	movf	(_coluna_atual),w
  1664  069C  084A               	movwf	(??_main+0)+0
  1665  069D  00BF               	movf	(??_main+0)+0,w
  1666  069E  083F               	movwf	(usa_caractere@col)
  1667  069F  00FC               	movlw	low(02Dh)
  1668  06A0  302D               	movwf	(??_main+1)+0
  1669  06A1  00C0               	movf	(??_main+1)+0,w
  1670  06A2  0840               	movwf	(usa_caractere@caractere)
  1671  06A3  00FD               	movlw	low(01h)
  1672  06A4  3001               	fcall	_usa_caractere
  1673  06A5  120A  118A  208C  120A  118A  	
  1674                           l1906:	
  1675  06AA                     	movlw	low(01h)
  1676  06AA  3001               	bcf	status, 5	;RP0=0, select bank0
  1677  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  1678  06AC  1303               	movwf	(??_main+0)+0
  1679  06AD  00BF               	movf	(??_main+0)+0,w
  1680  06AE  083F               	addwf	(_coluna_atual),f
  1681  06AF  07CA               	goto	l1908
  1682  06B0  2EB1               	line	178
  1683                           ;lcdtest.c: 178:         }
  1684                           	
  1685                           l129:	
  1686  06B1                     	line	180
  1687                           	
  1688                           l1908:	
  1689  06B1                     ;lcdtest.c: 180:         if(tecla == '%'){
  1690                           		movlw	37
  1691  06B1  3025               	xorwf	((_tecla)),w
  1692  06B2  064F               	btfss	status,2
  1693  06B3  1D03               	goto	u1251
  1694  06B4  2EB6               	goto	u1250
  1695  06B5  2EB7               u1251:
  1696  06B6                     	goto	l1916
  1697  06B6  2ED0               u1250:
  1698  06B7                     	line	181
  1699                           	
  1700                           l1910:	
  1701  06B7                     ;lcdtest.c: 181:             operacao = 3;
  1702                           	movlw	03h
  1703  06B7  3003               	movwf	(_operacao)
  1704  06B8  00C2               	movlw	0
  1705  06B9  3000               	movwf	((_operacao))+1
  1706  06BA  00C3               	line	182
  1707                           	
  1708                           l1912:	
  1709  06BB                     ;lcdtest.c: 182:             usa_caractere(1,coluna_atual++,'%');
  1710                           	movf	(_coluna_atual),w
  1711  06BB  084A               	movwf	(??_main+0)+0
  1712  06BC  00BF               	movf	(??_main+0)+0,w
  1713  06BD  083F               	movwf	(usa_caractere@col)
  1714  06BE  00FC               	movlw	low(025h)
  1715  06BF  3025               	movwf	(??_main+1)+0
  1716  06C0  00C0               	movf	(??_main+1)+0,w
  1717  06C1  0840               	movwf	(usa_caractere@caractere)
  1718  06C2  00FD               	movlw	low(01h)
  1719  06C3  3001               	fcall	_usa_caractere
  1720  06C4  120A  118A  208C  120A  118A  	
  1721                           l1914:	
  1722  06C9                     	movlw	low(01h)
  1723  06C9  3001               	bcf	status, 5	;RP0=0, select bank0
  1724  06CA  1283               	bcf	status, 6	;RP1=0, select bank0
  1725  06CB  1303               	movwf	(??_main+0)+0
  1726  06CC  00BF               	movf	(??_main+0)+0,w
  1727  06CD  083F               	addwf	(_coluna_atual),f
  1728  06CE  07CA               	goto	l1916
  1729  06CF  2ED0               	line	183
  1730                           ;lcdtest.c: 183:         }
  1731                           	
  1732                           l130:	
  1733  06D0                     	line	184
  1734                           	
  1735                           l1916:	
  1736  06D0                     ;lcdtest.c: 184:           if(tecla == 'x'){
  1737                           		movlw	120
  1738  06D0  3078               	xorwf	((_tecla)),w
  1739  06D1  064F               	btfss	status,2
  1740  06D2  1D03               	goto	u1261
  1741  06D3  2ED5               	goto	u1260
  1742  06D4  2ED6               u1261:
  1743  06D5                     	goto	l1924
  1744  06D5  2EEF               u1260:
  1745  06D6                     	line	185
  1746                           	
  1747                           l1918:	
  1748  06D6                     ;lcdtest.c: 185:             operacao = 4;
  1749                           	movlw	04h
  1750  06D6  3004               	movwf	(_operacao)
  1751  06D7  00C2               	movlw	0
  1752  06D8  3000               	movwf	((_operacao))+1
  1753  06D9  00C3               	line	186
  1754                           	
  1755                           l1920:	
  1756  06DA                     ;lcdtest.c: 186:             usa_caractere(1,coluna_atual++,'x');
  1757                           	movf	(_coluna_atual),w
  1758  06DA  084A               	movwf	(??_main+0)+0
  1759  06DB  00BF               	movf	(??_main+0)+0,w
  1760  06DC  083F               	movwf	(usa_caractere@col)
  1761  06DD  00FC               	movlw	low(078h)
  1762  06DE  3078               	movwf	(??_main+1)+0
  1763  06DF  00C0               	movf	(??_main+1)+0,w
  1764  06E0  0840               	movwf	(usa_caractere@caractere)
  1765  06E1  00FD               	movlw	low(01h)
  1766  06E2  3001               	fcall	_usa_caractere
  1767  06E3  120A  118A  208C  120A  118A  	
  1768                           l1922:	
  1769  06E8                     	movlw	low(01h)
  1770  06E8  3001               	bcf	status, 5	;RP0=0, select bank0
  1771  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
  1772  06EA  1303               	movwf	(??_main+0)+0
  1773  06EB  00BF               	movf	(??_main+0)+0,w
  1774  06EC  083F               	addwf	(_coluna_atual),f
  1775  06ED  07CA               	goto	l1924
  1776  06EE  2EEF               	line	187
  1777                           ;lcdtest.c: 187:         }
  1778                           	
  1779                           l131:	
  1780  06EF                     	line	191
  1781                           	
  1782                           l1924:	
  1783  06EF                     ;lcdtest.c: 191:         if(tecla == '='){
  1784                           		movlw	61
  1785  06EF  303D               	xorwf	((_tecla)),w
  1786  06F0  064F               	btfss	status,2
  1787  06F1  1D03               	goto	u1271
  1788  06F2  2EF4               	goto	u1270
  1789  06F3  2EF5               u1271:
  1790  06F4                     	goto	l1960
  1791  06F4  2FC2               u1270:
  1792  06F5                     	goto	l1954
  1793  06F5  2F8A               	line	192
  1794                           	
  1795                           l1926:	
  1796  06F6                     ;lcdtest.c: 192:         switch(operacao){
  1797                           	goto	l1954
  1798  06F6  2F8A               	line	193
  1799                           ;lcdtest.c: 193:         case 1: numero_c = numero_a + numero_b;
  1800                           	
  1801                           l134:	
  1802  06F7                     	
  1803                           l1928:	
  1804  06F7                     	movf	(_numero_b),w
  1805  06F7  084B               	addwf	(_numero_a),w
  1806  06F8  074D               	movwf	(_numero_c)
  1807  06F9  00C4               	movf	(_numero_b+1),w
  1808  06FA  084C               	skipnc
  1809  06FB  1803               	incf	(_numero_b+1),w
  1810  06FC  0A4C               	addwf	(_numero_a+1),w
  1811  06FD  074E               	movwf	1+(_numero_c)
  1812  06FE  00C5               	line	194
  1813                           	
  1814                           l1930:	
  1815  06FF                     ;lcdtest.c: 194:                  usa_caractere(1,coluna_atual++,'=');
  1816                           	movf	(_coluna_atual),w
  1817  06FF  084A               	movwf	(??_main+0)+0
  1818  0700  00BF               	movf	(??_main+0)+0,w
  1819  0701  083F               	movwf	(usa_caractere@col)
  1820  0702  00FC               	movlw	low(03Dh)
  1821  0703  303D               	movwf	(??_main+1)+0
  1822  0704  00C0               	movf	(??_main+1)+0,w
  1823  0705  0840               	movwf	(usa_caractere@caractere)
  1824  0706  00FD               	movlw	low(01h)
  1825  0707  3001               	fcall	_usa_caractere
  1826  0708  120A  118A  208C  120A  118A  	
  1827                           l1932:	
  1828  070D                     	movlw	low(01h)
  1829  070D  3001               	bcf	status, 5	;RP0=0, select bank0
  1830  070E  1283               	bcf	status, 6	;RP1=0, select bank0
  1831  070F  1303               	movwf	(??_main+0)+0
  1832  0710  00BF               	movf	(??_main+0)+0,w
  1833  0711  083F               	addwf	(_coluna_atual),f
  1834  0712  07CA               	line	195
  1835                           ;lcdtest.c: 195:         break;
  1836                           	goto	l1956
  1837  0713  2F9D               	line	196
  1838                           ;lcdtest.c: 196:         case 2: numero_c = numero_a - numero_b;
  1839                           	
  1840                           l136:	
  1841  0714                     	
  1842                           l1934:	
  1843  0714                     	comf	(_numero_b),w
  1844  0714  094B               	movwf	(??_main+0)+0
  1845  0715  00BF               	comf	(_numero_b+1),w
  1846  0716  094C               	movwf	((??_main+0)+0+1)
  1847  0717  00C0               	incf	(??_main+0)+0,f
  1848  0718  0ABF               	skipnz
  1849  0719  1903               	incf	((??_main+0)+0+1),f
  1850  071A  0AC0               	movf	(_numero_a),w
  1851  071B  084D               	addwf	0+(??_main+0)+0,w
  1852  071C  073F               	movwf	(_numero_c)
  1853  071D  00C4               	movf	(_numero_a+1),w
  1854  071E  084E               	skipnc
  1855  071F  1803               	incf	(_numero_a+1),w
  1856  0720  0A4E               	addwf	1+(??_main+0)+0,w
  1857  0721  0740               	movwf	1+(_numero_c)
  1858  0722  00C5               	line	197
  1859                           	
  1860                           l1936:	
  1861  0723                     ;lcdtest.c: 197:                  usa_caractere(1,coluna_atual++,'=');
  1862                           	movf	(_coluna_atual),w
  1863  0723  084A               	movwf	(??_main+0)+0
  1864  0724  00BF               	movf	(??_main+0)+0,w
  1865  0725  083F               	movwf	(usa_caractere@col)
  1866  0726  00FC               	movlw	low(03Dh)
  1867  0727  303D               	movwf	(??_main+1)+0
  1868  0728  00C0               	movf	(??_main+1)+0,w
  1869  0729  0840               	movwf	(usa_caractere@caractere)
  1870  072A  00FD               	movlw	low(01h)
  1871  072B  3001               	fcall	_usa_caractere
  1872  072C  120A  118A  208C  120A  118A  	
  1873                           l1938:	
  1874  0731                     	movlw	low(01h)
  1875  0731  3001               	bcf	status, 5	;RP0=0, select bank0
  1876  0732  1283               	bcf	status, 6	;RP1=0, select bank0
  1877  0733  1303               	movwf	(??_main+0)+0
  1878  0734  00BF               	movf	(??_main+0)+0,w
  1879  0735  083F               	addwf	(_coluna_atual),f
  1880  0736  07CA               	line	198
  1881                           ;lcdtest.c: 198:         break;
  1882                           	goto	l1956
  1883  0737  2F9D               	line	199
  1884                           ;lcdtest.c: 199:         case 3: numero_c = numero_a / numero_b;
  1885                           	
  1886                           l137:	
  1887  0738                     	
  1888                           l1940:	
  1889  0738                     	movf	(_numero_b+1),w
  1890  0738  084C               	movwf	(___awdiv@divisor+1)
  1891  0739  00F1               	movf	(_numero_b),w
  1892  073A  084B               	movwf	(___awdiv@divisor)
  1893  073B  00F0               	movf	(_numero_a+1),w
  1894  073C  084E               	movwf	(___awdiv@dividend+1)
  1895  073D  00F3               	movf	(_numero_a),w
  1896  073E  084D               	movwf	(___awdiv@dividend)
  1897  073F  00F2               	fcall	___awdiv
  1898  0740  120A  118A  2226  120A  118A  	movf	(1+(?___awdiv)),w
  1899  0745  0871               	bcf	status, 5	;RP0=0, select bank0
  1900  0746  1283               	bcf	status, 6	;RP1=0, select bank0
  1901  0747  1303               	movwf	(_numero_c+1)
  1902  0748  00C5               	movf	(0+(?___awdiv)),w
  1903  0749  0870               	movwf	(_numero_c)
  1904  074A  00C4               	line	200
  1905                           	
  1906                           l1942:	
  1907  074B                     ;lcdtest.c: 200:                  usa_caractere(1,coluna_atual++,'=');
  1908                           	movf	(_coluna_atual),w
  1909  074B  084A               	movwf	(??_main+0)+0
  1910  074C  00BF               	movf	(??_main+0)+0,w
  1911  074D  083F               	movwf	(usa_caractere@col)
  1912  074E  00FC               	movlw	low(03Dh)
  1913  074F  303D               	movwf	(??_main+1)+0
  1914  0750  00C0               	movf	(??_main+1)+0,w
  1915  0751  0840               	movwf	(usa_caractere@caractere)
  1916  0752  00FD               	movlw	low(01h)
  1917  0753  3001               	fcall	_usa_caractere
  1918  0754  120A  118A  208C  120A  118A  	
  1919                           l1944:	
  1920  0759                     	movlw	low(01h)
  1921  0759  3001               	bcf	status, 5	;RP0=0, select bank0
  1922  075A  1283               	bcf	status, 6	;RP1=0, select bank0
  1923  075B  1303               	movwf	(??_main+0)+0
  1924  075C  00BF               	movf	(??_main+0)+0,w
  1925  075D  083F               	addwf	(_coluna_atual),f
  1926  075E  07CA               	line	201
  1927                           ;lcdtest.c: 201:         break;
  1928                           	goto	l1956
  1929  075F  2F9D               	line	202
  1930                           ;lcdtest.c: 202:         case 4: numero_c = numero_a * numero_b;
  1931                           	
  1932                           l138:	
  1933  0760                     	
  1934                           l1946:	
  1935  0760                     	movf	(_numero_a+1),w
  1936  0760  084E               	movwf	(___wmul@multiplier+1)
  1937  0761  00F1               	movf	(_numero_a),w
  1938  0762  084D               	movwf	(___wmul@multiplier)
  1939  0763  00F0               	movf	(_numero_b+1),w
  1940  0764  084C               	movwf	(___wmul@multiplicand+1)
  1941  0765  00F3               	movf	(_numero_b),w
  1942  0766  084B               	movwf	(___wmul@multiplicand)
  1943  0767  00F2               	fcall	___wmul
  1944  0768  120A  158A  27D8  120A  118A  	movf	(1+(?___wmul)),w
  1945  076D  0871               	bcf	status, 5	;RP0=0, select bank0
  1946  076E  1283               	bcf	status, 6	;RP1=0, select bank0
  1947  076F  1303               	movwf	(_numero_c+1)
  1948  0770  00C5               	movf	(0+(?___wmul)),w
  1949  0771  0870               	movwf	(_numero_c)
  1950  0772  00C4               	line	203
  1951                           	
  1952                           l1948:	
  1953  0773                     ;lcdtest.c: 203:                  usa_caractere(1,coluna_atual++,'=');
  1954                           	movf	(_coluna_atual),w
  1955  0773  084A               	movwf	(??_main+0)+0
  1956  0774  00BF               	movf	(??_main+0)+0,w
  1957  0775  083F               	movwf	(usa_caractere@col)
  1958  0776  00FC               	movlw	low(03Dh)
  1959  0777  303D               	movwf	(??_main+1)+0
  1960  0778  00C0               	movf	(??_main+1)+0,w
  1961  0779  0840               	movwf	(usa_caractere@caractere)
  1962  077A  00FD               	movlw	low(01h)
  1963  077B  3001               	fcall	_usa_caractere
  1964  077C  120A  118A  208C  120A  118A  	
  1965                           l1950:	
  1966  0781                     	movlw	low(01h)
  1967  0781  3001               	bcf	status, 5	;RP0=0, select bank0
  1968  0782  1283               	bcf	status, 6	;RP1=0, select bank0
  1969  0783  1303               	movwf	(??_main+0)+0
  1970  0784  00BF               	movf	(??_main+0)+0,w
  1971  0785  083F               	addwf	(_coluna_atual),f
  1972  0786  07CA               	goto	l1956
  1973  0787  2F9D               	line	204
  1974                           ;lcdtest.c: 204:         default:
  1975                           	
  1976                           l139:	
  1977  0788                     	line	206
  1978                           ;lcdtest.c: 206:         break;
  1979                           	goto	l1956
  1980  0788  2F9D               	line	207
  1981                           	
  1982                           l1952:	
  1983  0789                     ;lcdtest.c: 207:         }
  1984                           	goto	l1956
  1985  0789  2F9D               	
  1986                           l133:	
  1987  078A                     	
  1988                           l1954:	
  1989  078A                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1990                           ; Switch size 1, requested type "space"
  1991                           ; Number of cases is 1, Range of values is 0 to 0
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte            4     3 (average)
  1995                           ; direct_byte           11     8 (fixed)
  1996                           ; jumptable            260     6 (fixed)
  1997                           ;	Chosen strategy is simple_byte
  1998                           
  1999                           	movf (_operacao+1),w
  2000  078A  0843               	opt asmopt_push
  2001                           	opt asmopt_off
  2002                           	xorlw	0^0	; case 0
  2003  078B  3A00               	skipnz
  2004  078C  1903               	goto	l2180
  2005  078D  2F8F               	goto	l1956
  2006  078E  2F9D               	opt asmopt_pop
  2007                           	
  2008                           l2180:	
  2009  078F                     ; Switch size 1, requested type "space"
  2010                           ; Number of cases is 4, Range of values is 1 to 4
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte           13     7 (average)
  2014                           ; direct_byte           23    11 (fixed)
  2015                           ; jumptable            263     9 (fixed)
  2016                           ;	Chosen strategy is simple_byte
  2017                           
  2018                           	movf (_operacao),w
  2019  078F  0842               	opt asmopt_push
  2020                           	opt asmopt_off
  2021                           	xorlw	1^0	; case 1
  2022  0790  3A01               	skipnz
  2023  0791  1903               	goto	l1928
  2024  0792  2EF7               	xorlw	2^1	; case 2
  2025  0793  3A03               	skipnz
  2026  0794  1903               	goto	l1934
  2027  0795  2F14               	xorlw	3^2	; case 3
  2028  0796  3A01               	skipnz
  2029  0797  1903               	goto	l1940
  2030  0798  2F38               	xorlw	4^3	; case 4
  2031  0799  3A07               	skipnz
  2032  079A  1903               	goto	l1946
  2033  079B  2F60               	goto	l1956
  2034  079C  2F9D               	opt asmopt_pop
  2035                           
  2036                           	
  2037                           l135:	
  2038  079D                     	line	209
  2039                           	
  2040                           l1956:	
  2041  079D                     ;lcdtest.c: 209:             sprintf(buffer,"%i",numero_c);
  2042                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2043  079D  3011               	movwf	(??_main+0)+0
  2044  079E  00BF               	movf	(??_main+0)+0,w
  2045  079F  083F               	movwf	(sprintf@f)
  2046  07A0  00B2               	movf	(_numero_c+1),w
  2047  07A1  0845               	movwf	1+(?_sprintf)+01h
  2048  07A2  00B4               	movf	(_numero_c),w
  2049  07A3  0844               	movwf	0+(?_sprintf)+01h
  2050  07A4  00B3               	movlw	(low(_buffer|((0x0)<<8)))&0ffh
  2051  07A5  30A0               	fcall	_sprintf
  2052  07A6  120A  118A  24AF  120A  118A  	line	210
  2053                           ;lcdtest.c: 210:             escreve (2,coluna_atual++,&buffer[0]);
  2054                           	bcf	status, 5	;RP0=0, select bank0
  2055  07AB  1283               	bcf	status, 6	;RP1=0, select bank0
  2056  07AC  1303               	movf	(_coluna_atual),w
  2057  07AD  084A               	movwf	(??_main+0)+0
  2058  07AE  00BF               	movf	(??_main+0)+0,w
  2059  07AF  083F               	movwf	(escreve@col)
  2060  07B0  00B8               	movlw	(low(_buffer|((0x0)<<8))&0ffh)
  2061  07B1  30A0               	movwf	(escreve@str)
  2062  07B2  00B9               	movlw	(0x0)
  2063  07B3  3000               	movwf	(escreve@str+1)
  2064  07B4  00BA               	movlw	low(02h)
  2065  07B5  3002               	fcall	_escreve
  2066  07B6  120A  118A  21CF  120A  118A  	
  2067                           l1958:	
  2068  07BB                     	movlw	low(01h)
  2069  07BB  3001               	bcf	status, 5	;RP0=0, select bank0
  2070  07BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2071  07BD  1303               	movwf	(??_main+0)+0
  2072  07BE  00BF               	movf	(??_main+0)+0,w
  2073  07BF  083F               	addwf	(_coluna_atual),f
  2074  07C0  07CA               	goto	l1960
  2075  07C1  2FC2               	line	211
  2076                           ;lcdtest.c: 211:         }
  2077                           	
  2078                           l132:	
  2079  07C2                     	line	214
  2080                           	
  2081                           l1960:	
  2082  07C2                     ;lcdtest.c: 214:         if(tecla == 'C'){
  2083                           		movlw	67
  2084  07C2  3043               	xorwf	((_tecla)),w
  2085  07C3  064F               	btfss	status,2
  2086  07C4  1D03               	goto	u1281
  2087  07C5  2FC7               	goto	u1280
  2088  07C6  2FC8               u1281:
  2089  07C7                     	goto	l1872
  2090  07C7  2DEE               u1280:
  2091  07C8                     	line	215
  2092                           	
  2093                           l1962:	
  2094  07C8                     ;lcdtest.c: 215:             limpa(),coluna_atual = 0;
  2095                           	fcall	_limpa
  2096  07C8  120A  158A  27C3  120A  118A  	
  2097                           l1964:	
  2098  07CD                     	bcf	status, 5	;RP0=0, select bank0
  2099  07CD  1283               	bcf	status, 6	;RP1=0, select bank0
  2100  07CE  1303               	clrf	(_coluna_atual)
  2101  07CF  01CA               	line	216
  2102                           	
  2103                           l1966:	
  2104  07D0                     ;lcdtest.c: 216:             numero_a = 0;
  2105                           	clrf	(_numero_a)
  2106  07D0  01CD               	clrf	(_numero_a+1)
  2107  07D1  01CE               	line	217
  2108                           	
  2109                           l1968:	
  2110  07D2                     ;lcdtest.c: 217:             numero_b = 0;
  2111                           	clrf	(_numero_b)
  2112  07D2  01CB               	clrf	(_numero_b+1)
  2113  07D3  01CC               	line	218
  2114                           	
  2115                           l1970:	
  2116  07D4                     ;lcdtest.c: 218:             numero_c = 0;
  2117                           	clrf	(_numero_c)
  2118  07D4  01C4               	clrf	(_numero_c+1)
  2119  07D5  01C5               	line	219
  2120                           	
  2121                           l1972:	
  2122  07D6                     ;lcdtest.c: 219:             operacao = 0;
  2123                           	clrf	(_operacao)
  2124  07D6  01C2               	clrf	(_operacao+1)
  2125  07D7  01C3               	goto	l1872
  2126  07D8  2DEE               	line	220
  2127                           ;lcdtest.c: 220:         }
  2128                           	
  2129                           l140:	
  2130  07D9                     	goto	l1872
  2131  07D9  2DEE               	line	221
  2132                           ;lcdtest.c: 221:         }
  2133                           	
  2134                           l141:	
  2135  07DA                     	goto	l1872
  2136  07DA  2DEE               	
  2137                           l142:	
  2138  07DB                     	line	222
  2139                           	
  2140                           l143:	
  2141  07DB                     	global	start
  2142                           	ljmp	start
  2143  07DB  120A  118A  2800   	opt stack 0
  2144                           GLOBAL	__end_of_main
  2145                           	__end_of_main:
  2146  07DE                     	signat	_main,89
  2147                           	global	_usa_caractere
  2148                           
  2149 ;; *************** function _usa_caractere *****************
  2150 ;; Defined at:
  2151 ;;		line 111 in file "bibliotec_lcd.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  lin             1    wreg     unsigned char 
  2154 ;;  col             1   12[COMMON] unsigned char 
  2155 ;;  caractere       1   13[COMMON] unsigned char 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  lin             1    7[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         2       0       0       0       0
  2168 ;;      Locals:         0       1       0       0       0
  2169 ;;      Temps:          0       1       0       0       0
  2170 ;;      Totals:         2       2       0       0       0
  2171 ;;Total ram usage:        4 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    3
  2174 ;; This function calls:
  2175 ;;		_byte
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2181                           	file	"bibliotec_lcd.c"
  2182                           	line	111
  2183                           global __ptext1
  2184                           __ptext1:	;psect for function _usa_caractere
  2185  008C                     psect	text1
  2186                           	file	"bibliotec_lcd.c"
  2187                           	line	111
  2188                           	global	__size_of_usa_caractere
  2189                           	__size_of_usa_caractere	equ	__end_of_usa_caractere-_usa_caractere
  2190  0035                     	
  2191                           _usa_caractere:	
  2192  008C                     ;incstack = 0
  2193                           	opt	stack 4
  2194                           ; Regs used in _usa_caractere: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2195                           ;usa_caractere@lin stored from wreg
  2196                           	bcf	status, 5	;RP0=0, select bank0
  2197  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  2198  008D  1303               	movwf	(usa_caractere@lin)
  2199  008E  00B9               	line	113
  2200                           	
  2201                           l1726:	
  2202  008F                     ;bibliotec_lcd.c: 111: void usa_caractere (char lin, char col, char caractere);bibliotec
                                 _lcd.c: 112: {;bibliotec_lcd.c: 113:     if(lin == 1)byte(0,0x80 + col);
  2203                           		decf	((usa_caractere@lin)),w
  2204  008F  0339               	btfss	status,2
  2205  0090  1D03               	goto	u971
  2206  0091  2893               	goto	u970
  2207  0092  2894               u971:
  2208  0093                     	goto	l1730
  2209  0093  28A2               u970:
  2210  0094                     	
  2211                           l1728:	
  2212  0094                     	movlw	0
  2213  0094  3000               	movwf	(byte@escreve)
  2214  0095  00B2               	movwf	(byte@escreve+1)
  2215  0096  00B3               	movf	(usa_caractere@col),w
  2216  0097  087C               	addlw	080h
  2217  0098  3E80               	movwf	(??_usa_caractere+0)+0
  2218  0099  00B8               	movf	(??_usa_caractere+0)+0,w
  2219  009A  0838               	movwf	(byte@dado)
  2220  009B  00B4               	fcall	_byte
  2221  009C  120A  118A  213F  120A  118A  	goto	l210
  2222  00A1  28B1               	line	114
  2223                           ;bibliotec_lcd.c: 114:     else byte(0,0xC0 + col);
  2224                           	
  2225                           l209:	
  2226  00A2                     	
  2227                           l1730:	
  2228  00A2                     	movlw	0
  2229  00A2  3000               	bcf	status, 5	;RP0=0, select bank0
  2230  00A3  1283               	bcf	status, 6	;RP1=0, select bank0
  2231  00A4  1303               	movwf	(byte@escreve)
  2232  00A5  00B2               	movwf	(byte@escreve+1)
  2233  00A6  00B3               	movf	(usa_caractere@col),w
  2234  00A7  087C               	addlw	0C0h
  2235  00A8  3EC0               	movwf	(??_usa_caractere+0)+0
  2236  00A9  00B8               	movf	(??_usa_caractere+0)+0,w
  2237  00AA  0838               	movwf	(byte@dado)
  2238  00AB  00B4               	fcall	_byte
  2239  00AC  120A  118A  213F  120A  118A  	
  2240                           l210:	
  2241  00B1                     	line	115
  2242                           ;bibliotec_lcd.c: 115:     byte(1, caractere);
  2243                           	movlw	01h
  2244  00B1  3001               	bcf	status, 5	;RP0=0, select bank0
  2245  00B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2246  00B3  1303               	movwf	(byte@escreve)
  2247  00B4  00B2               	movlw	0
  2248  00B5  3000               	movwf	((byte@escreve))+1
  2249  00B6  00B3               	movf	(usa_caractere@caractere),w
  2250  00B7  087D               	movwf	(??_usa_caractere+0)+0
  2251  00B8  00B8               	movf	(??_usa_caractere+0)+0,w
  2252  00B9  0838               	movwf	(byte@dado)
  2253  00BA  00B4               	fcall	_byte
  2254  00BB  120A  118A  213F  120A  118A  	line	116
  2255                           	
  2256                           l211:	
  2257  00C0                     	return
  2258  00C0  0008               	opt stack 0
  2259                           GLOBAL	__end_of_usa_caractere
  2260                           	__end_of_usa_caractere:
  2261  00C1                     	signat	_usa_caractere,12409
  2262                           	global	_sprintf
  2263                           
  2264 ;; *************** function _sprintf *****************
  2265 ;; Defined at:
  2266 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  sp              1    wreg     PTR unsigned char 
  2269 ;;		 -> buffer(75), 
  2270 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2271 ;;		 -> STR_2(3), 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2274 ;;		 -> buffer(75), 
  2275 ;;  tmpval          4    0        struct .
  2276 ;;  val             2    9[BANK0 ] unsigned int 
  2277 ;;  cp              2    0        PTR const unsigned char 
  2278 ;;  len             2    0        unsigned int 
  2279 ;;  c               1   12[BANK0 ] unsigned char 
  2280 ;;  prec            1    8[BANK0 ] char 
  2281 ;;  flag            1    7[BANK0 ] unsigned char 
  2282 ;;  ap              1    6[BANK0 ] PTR void [1]
  2283 ;;		 -> ?_sprintf(2), 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2    0[BANK0 ] int 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       3       0       0       0
  2294 ;;      Locals:         0       7       0       0       0
  2295 ;;      Temps:          0       3       0       0       0
  2296 ;;      Totals:         0      13       0       0       0
  2297 ;;Total ram usage:       13 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    1
  2300 ;; This function calls:
  2301 ;;		___lwdiv
  2302 ;;		___lwmod
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2308                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2309                           	line	500
  2310                           global __ptext2
  2311                           __ptext2:	;psect for function _sprintf
  2312  04AF                     psect	text2
  2313                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2314                           	line	500
  2315                           	global	__size_of_sprintf
  2316                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2317  0100                     	
  2318                           _sprintf:	
  2319  04AF                     ;incstack = 0
  2320                           	opt	stack 6
  2321                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2322                           ;sprintf@sp stored from wreg
  2323                           	bcf	status, 5	;RP0=0, select bank0
  2324  04AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2325  04B0  1303               	movwf	(sprintf@sp)
  2326  04B1  00BD               	line	545
  2327                           	
  2328                           l1732:	
  2329  04B2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2330                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2331  04B2  3033               	movwf	(??_sprintf+0)+0
  2332  04B3  00B5               	movf	(??_sprintf+0)+0,w
  2333  04B4  0835               	movwf	(sprintf@ap)
  2334  04B5  00B8               	line	548
  2335                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2336                           	goto	l1784
  2337  04B6  2D95               	
  2338                           l303:	
  2339  04B7                     	line	550
  2340                           	
  2341                           l1734:	
  2342  04B7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2343                           		movlw	37
  2344  04B7  3025               	xorwf	((sprintf@c)),w
  2345  04B8  063E               	btfsc	status,2
  2346  04B9  1903               	goto	u981
  2347  04BA  2CBC               	goto	u980
  2348  04BB  2CBD               u981:
  2349  04BC                     	goto	l1740
  2350  04BC  2CC9               u980:
  2351  04BD                     	line	553
  2352                           	
  2353                           l1736:	
  2354  04BD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2355                           	movf	(sprintf@c),w
  2356  04BD  083E               	movwf	(??_sprintf+0)+0
  2357  04BE  00B5               	movf	(sprintf@sp),w
  2358  04BF  083D               	movwf	fsr0
  2359  04C0  0084               	movf	(??_sprintf+0)+0,w
  2360  04C1  0835               	bcf	status, 7	;select IRP bank0
  2361  04C2  1383               	movwf	indf
  2362  04C3  0080               	
  2363                           l1738:	
  2364  04C4                     	movlw	low(01h)
  2365  04C4  3001               	movwf	(??_sprintf+0)+0
  2366  04C5  00B5               	movf	(??_sprintf+0)+0,w
  2367  04C6  0835               	addwf	(sprintf@sp),f
  2368  04C7  07BD               	line	554
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2370                           	goto	l1784
  2371  04C8  2D95               	line	555
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2373                           	
  2374                           l304:	
  2375  04C9                     	line	560
  2376                           	
  2377                           l1740:	
  2378  04C9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2379                           	clrf	(sprintf@flag)
  2380  04C9  01B9               	line	654
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2382                           	goto	l1744
  2383  04CA  2CD0               	line	656
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2385                           	
  2386                           l306:	
  2387  04CB                     	line	657
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2389                           	goto	l1786
  2390  04CB  2DA9               	line	716
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2392                           	
  2393                           l308:	
  2394  04CC                     	goto	l1746
  2395  04CC  2CED               	line	717
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2397                           	
  2398                           l309:	
  2399  04CD                     	line	718
  2400                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2401                           	goto	l1746
  2402  04CD  2CED               	line	821
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2404                           	
  2405                           l311:	
  2406  04CE                     	line	832
  2407                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2408                           	goto	l1784
  2409  04CE  2D95               	line	841
  2410                           	
  2411                           l1742:	
  2412  04CF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2413                           	goto	l1746
  2414  04CF  2CED               	
  2415                           l305:	
  2416  04D0                     	
  2417                           l1744:	
  2418  04D0                     	movlw	01h
  2419  04D0  3001               	addwf	(sprintf@f),f
  2420  04D1  07B2               	movlw	-01h
  2421  04D2  30FF               	addwf	(sprintf@f),w
  2422  04D3  0732               	movwf	fsr0
  2423  04D4  0084               	fcall	stringdir
  2424  04D5  120A  118A  200D  120A  118A  	movwf	(sprintf@c)
  2425  04DA  00BE               	movwf	(??_sprintf+0)+0
  2426  04DB  00B5               	clrf	(??_sprintf+0)+0+1
  2427  04DC  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2428                           ; Switch size 1, requested type "space"
  2429                           ; Number of cases is 1, Range of values is 0 to 0
  2430                           ; switch strategies available:
  2431                           ; Name         Instructions Cycles
  2432                           ; simple_byte            4     3 (average)
  2433                           ; direct_byte           11     8 (fixed)
  2434                           ; jumptable            260     6 (fixed)
  2435                           ;	Chosen strategy is simple_byte
  2436                           
  2437                           	movf 1+(??_sprintf+0)+0,w
  2438  04DD  0836               	opt asmopt_push
  2439                           	opt asmopt_off
  2440                           	xorlw	0^0	; case 0
  2441  04DE  3A00               	skipnz
  2442  04DF  1903               	goto	l2182
  2443  04E0  2CE2               	goto	l1784
  2444  04E1  2D95               	opt asmopt_pop
  2445                           	
  2446                           l2182:	
  2447  04E2                     ; Switch size 1, requested type "space"
  2448                           ; Number of cases is 3, Range of values is 0 to 105
  2449                           ; switch strategies available:
  2450                           ; Name         Instructions Cycles
  2451                           ; simple_byte           10     6 (average)
  2452                           ; jumptable            260     6 (fixed)
  2453                           ;	Chosen strategy is simple_byte
  2454                           
  2455                           	movf 0+(??_sprintf+0)+0,w
  2456  04E2  0835               	opt asmopt_push
  2457                           	opt asmopt_off
  2458                           	xorlw	0^0	; case 0
  2459  04E3  3A00               	skipnz
  2460  04E4  1903               	goto	l1786
  2461  04E5  2DA9               	xorlw	100^0	; case 100
  2462  04E6  3A64               	skipnz
  2463  04E7  1903               	goto	l1746
  2464  04E8  2CED               	xorlw	105^100	; case 105
  2465  04E9  3A0D               	skipnz
  2466  04EA  1903               	goto	l1746
  2467  04EB  2CED               	goto	l1784
  2468  04EC  2D95               	opt asmopt_pop
  2469                           
  2470                           	
  2471                           l310:	
  2472  04ED                     	line	1278
  2473                           	
  2474                           l1746:	
  2475  04ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2476                           	movf	(sprintf@ap),w
  2477  04ED  0838               	movwf	fsr0
  2478  04EE  0084               	bcf	status, 7	;select IRP bank0
  2479  04EF  1383               	movf	indf,w
  2480  04F0  0800               	movwf	(sprintf@val)
  2481  04F1  00BB               	incf	fsr0,f
  2482  04F2  0A84               	movf	indf,w
  2483  04F3  0800               	movwf	(sprintf@val+1)
  2484  04F4  00BC               	
  2485                           l1748:	
  2486  04F5                     	movlw	low(02h)
  2487  04F5  3002               	movwf	(??_sprintf+0)+0
  2488  04F6  00B5               	movf	(??_sprintf+0)+0,w
  2489  04F7  0835               	addwf	(sprintf@ap),f
  2490  04F8  07B8               	line	1280
  2491                           	
  2492                           l1750:	
  2493  04F9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2494                           	btfss	(sprintf@val+1),7
  2495  04F9  1FBC               	goto	u991
  2496  04FA  2CFC               	goto	u990
  2497  04FB  2CFD               u991:
  2498  04FC                     	goto	l1756
  2499  04FC  2D07               u990:
  2500  04FD                     	line	1281
  2501                           	
  2502                           l1752:	
  2503  04FD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2504                           	movlw	low(03h)
  2505  04FD  3003               	movwf	(??_sprintf+0)+0
  2506  04FE  00B5               	movf	(??_sprintf+0)+0,w
  2507  04FF  0835               	iorwf	(sprintf@flag),f
  2508  0500  04B9               	line	1282
  2509                           	
  2510                           l1754:	
  2511  0501                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2512                           	comf	(sprintf@val),f
  2513  0501  09BB               	comf	(sprintf@val+1),f
  2514  0502  09BC               	incf	(sprintf@val),f
  2515  0503  0ABB               	skipnz
  2516  0504  1903               	incf	(sprintf@val+1),f
  2517  0505  0ABC               	goto	l1756
  2518  0506  2D07               	line	1283
  2519                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2520                           	
  2521                           l312:	
  2522  0507                     	line	1324
  2523                           	
  2524                           l1756:	
  2525  0507                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2526                           	clrf	(sprintf@c)
  2527  0507  01BE               	incf	(sprintf@c),f
  2528  0508  0ABE               	
  2529                           l1758:	
  2530  0509                     		movlw	5
  2531  0509  3005               	xorwf	((sprintf@c)),w
  2532  050A  063E               	btfss	status,2
  2533  050B  1D03               	goto	u1001
  2534  050C  2D0E               	goto	u1000
  2535  050D  2D0F               u1001:
  2536  050E                     	goto	l1762
  2537  050E  2D11               u1000:
  2538  050F                     	goto	l1768
  2539  050F  2D39               	
  2540                           l1760:	
  2541  0510                     	goto	l1768
  2542  0510  2D39               	
  2543                           l313:	
  2544  0511                     	line	1325
  2545                           	
  2546                           l1762:	
  2547  0511                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2548                           	movf	(sprintf@c),w
  2549  0511  083E               	movwf	(??_sprintf+0)+0
  2550  0512  00B5               	addwf	(??_sprintf+0)+0,w
  2551  0513  0735               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2552  0514  3E01               	movwf	fsr0
  2553  0515  0084               	fcall	stringdir
  2554  0516  120A  118A  200D  120A  118A  	movwf	(??_sprintf+1)+0
  2555  051B  00B6               	fcall	stringdir
  2556  051C  120A  118A  200D  120A  118A  	movwf	(??_sprintf+1)+0+1
  2557  0521  00B7               	movf	1+(??_sprintf+1)+0,w
  2558  0522  0837               	subwf	(sprintf@val+1),w
  2559  0523  023C               	skipz
  2560  0524  1D03               	goto	u1015
  2561  0525  2D28               	movf	0+(??_sprintf+1)+0,w
  2562  0526  0836               	subwf	(sprintf@val),w
  2563  0527  023B               u1015:
  2564  0528                     	skipnc
  2565  0528  1803               	goto	u1011
  2566  0529  2D2B               	goto	u1010
  2567  052A  2D2C               u1011:
  2568  052B                     	goto	l1766
  2569  052B  2D2E               u1010:
  2570  052C                     	goto	l1768
  2571  052C  2D39               	line	1326
  2572                           	
  2573                           l1764:	
  2574  052D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2575                           	goto	l1768
  2576  052D  2D39               	
  2577                           l315:	
  2578  052E                     	
  2579                           l1766:	
  2580  052E                     	movlw	low(01h)
  2581  052E  3001               	movwf	(??_sprintf+0)+0
  2582  052F  00B5               	movf	(??_sprintf+0)+0,w
  2583  0530  0835               	addwf	(sprintf@c),f
  2584  0531  07BE               		movlw	5
  2585  0532  3005               	xorwf	((sprintf@c)),w
  2586  0533  063E               	btfss	status,2
  2587  0534  1D03               	goto	u1021
  2588  0535  2D37               	goto	u1020
  2589  0536  2D38               u1021:
  2590  0537                     	goto	l1762
  2591  0537  2D11               u1020:
  2592  0538                     	goto	l1768
  2593  0538  2D39               	
  2594                           l314:	
  2595  0539                     	line	1457
  2596                           	
  2597                           l1768:	
  2598  0539                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2599                           	movf	(sprintf@flag),w
  2600  0539  0839               	andlw	03h
  2601  053A  3903               	btfsc	status,2
  2602  053B  1903               	goto	u1031
  2603  053C  2D3E               	goto	u1030
  2604  053D  2D3F               u1031:
  2605  053E                     	goto	l1774
  2606  053E  2D4B               u1030:
  2607  053F                     	line	1458
  2608                           	
  2609                           l1770:	
  2610  053F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2611                           	movlw	low(02Dh)
  2612  053F  302D               	movwf	(??_sprintf+0)+0
  2613  0540  00B5               	movf	(sprintf@sp),w
  2614  0541  083D               	movwf	fsr0
  2615  0542  0084               	movf	(??_sprintf+0)+0,w
  2616  0543  0835               	bcf	status, 7	;select IRP bank0
  2617  0544  1383               	movwf	indf
  2618  0545  0080               	
  2619                           l1772:	
  2620  0546                     	movlw	low(01h)
  2621  0546  3001               	movwf	(??_sprintf+0)+0
  2622  0547  00B5               	movf	(??_sprintf+0)+0,w
  2623  0548  0835               	addwf	(sprintf@sp),f
  2624  0549  07BD               	goto	l1774
  2625  054A  2D4B               	
  2626                           l316:	
  2627  054B                     	line	1491
  2628                           	
  2629                           l1774:	
  2630  054B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2631                           	movf	(sprintf@c),w
  2632  054B  083E               	movwf	(??_sprintf+0)+0
  2633  054C  00B5               	movf	(??_sprintf+0)+0,w
  2634  054D  0835               	movwf	(sprintf@prec)
  2635  054E  00BA               	line	1493
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2637                           	goto	l1782
  2638  054F  2D8A               	
  2639                           l318:	
  2640  0550                     	line	1508
  2641                           	
  2642                           l1776:	
  2643  0550                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2644                           	movlw	0Ah
  2645  0550  300A               	movwf	(___lwmod@divisor)
  2646  0551  00F8               	movlw	0
  2647  0552  3000               	movwf	((___lwmod@divisor))+1
  2648  0553  00F9               	movf	(sprintf@prec),w
  2649  0554  083A               	movwf	(??_sprintf+0)+0
  2650  0555  00B5               	addwf	(??_sprintf+0)+0,w
  2651  0556  0735               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2652  0557  3E01               	movwf	fsr0
  2653  0558  0084               	fcall	stringdir
  2654  0559  120A  118A  200D  120A  118A  	movwf	(___lwdiv@divisor)
  2655  055E  00F0               	fcall	stringdir
  2656  055F  120A  118A  200D  120A  118A  	movwf	(___lwdiv@divisor+1)
  2657  0564  00F1               	movf	(sprintf@val+1),w
  2658  0565  083C               	movwf	(___lwdiv@dividend+1)
  2659  0566  00F3               	movf	(sprintf@val),w
  2660  0567  083B               	movwf	(___lwdiv@dividend)
  2661  0568  00F2               	fcall	___lwdiv
  2662  0569  120A  118A  2184  120A  118A  	movf	(1+(?___lwdiv)),w
  2663  056E  0871               	movwf	(___lwmod@dividend+1)
  2664  056F  00FB               	movf	(0+(?___lwdiv)),w
  2665  0570  0870               	movwf	(___lwmod@dividend)
  2666  0571  00FA               	fcall	___lwmod
  2667  0572  120A  118A  20FE  120A  118A  	movf	(0+(?___lwmod)),w
  2668  0577  0878               	addlw	030h
  2669  0578  3E30               	bcf	status, 5	;RP0=0, select bank0
  2670  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  2671  057A  1303               	movwf	(??_sprintf+1)+0
  2672  057B  00B6               	movf	(??_sprintf+1)+0,w
  2673  057C  0836               	movwf	(sprintf@c)
  2674  057D  00BE               	line	1543
  2675                           	
  2676                           l1778:	
  2677  057E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2678                           	movf	(sprintf@c),w
  2679  057E  083E               	movwf	(??_sprintf+0)+0
  2680  057F  00B5               	movf	(sprintf@sp),w
  2681  0580  083D               	movwf	fsr0
  2682  0581  0084               	movf	(??_sprintf+0)+0,w
  2683  0582  0835               	bcf	status, 7	;select IRP bank0
  2684  0583  1383               	movwf	indf
  2685  0584  0080               	
  2686                           l1780:	
  2687  0585                     	movlw	low(01h)
  2688  0585  3001               	movwf	(??_sprintf+0)+0
  2689  0586  00B5               	movf	(??_sprintf+0)+0,w
  2690  0587  0835               	addwf	(sprintf@sp),f
  2691  0588  07BD               	goto	l1782
  2692  0589  2D8A               	line	1544
  2693                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2694                           	
  2695                           l317:	
  2696  058A                     	line	1493
  2697                           	
  2698                           l1782:	
  2699  058A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2700                           	movlw	low(-1)
  2701  058A  30FF               	movwf	(??_sprintf+0)+0
  2702  058B  00B5               	movf	(??_sprintf+0)+0,w
  2703  058C  0835               	addwf	(sprintf@prec),f
  2704  058D  07BA               		incf	(((sprintf@prec))),w
  2705  058E  0A3A               	btfss	status,2
  2706  058F  1D03               	goto	u1041
  2707  0590  2D92               	goto	u1040
  2708  0591  2D93               u1041:
  2709  0592                     	goto	l1776
  2710  0592  2D50               u1040:
  2711  0593                     	goto	l1784
  2712  0593  2D95               	
  2713                           l319:	
  2714  0594                     	goto	l1784
  2715  0594  2D95               	line	1552
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2717                           	
  2718                           l302:	
  2719  0595                     	line	548
  2720                           	
  2721                           l1784:	
  2722  0595                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2723                           	movlw	01h
  2724  0595  3001               	addwf	(sprintf@f),f
  2725  0596  07B2               	movlw	-01h
  2726  0597  30FF               	addwf	(sprintf@f),w
  2727  0598  0732               	movwf	fsr0
  2728  0599  0084               	fcall	stringdir
  2729  059A  120A  118A  200D  120A  118A  	movwf	(??_sprintf+0)+0
  2730  059F  00B5               	movf	(??_sprintf+0)+0,w
  2731  05A0  0835               	movwf	(sprintf@c)
  2732  05A1  00BE               	movf	(((sprintf@c))),w
  2733  05A2  083E               	btfss	status,2
  2734  05A3  1D03               	goto	u1051
  2735  05A4  2DA6               	goto	u1050
  2736  05A5  2DA7               u1051:
  2737  05A6                     	goto	l1734
  2738  05A6  2CB7               u1050:
  2739  05A7                     	goto	l1786
  2740  05A7  2DA9               	
  2741                           l320:	
  2742  05A8                     	goto	l1786
  2743  05A8  2DA9               	line	1554
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2745                           	
  2746                           l307:	
  2747  05A9                     	line	1557
  2748                           	
  2749                           l1786:	
  2750  05A9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2751                           	movf	(sprintf@sp),w
  2752  05A9  083D               	movwf	fsr0
  2753  05AA  0084               	bcf	status, 7	;select IRP bank0
  2754  05AB  1383               	clrf	indf
  2755  05AC  0180               	goto	l321
  2756  05AD  2DAE               	line	1559
  2757                           	
  2758                           l1788:	
  2759  05AE                     	line	1560
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2761                           	
  2762                           l321:	
  2763  05AE                     	return
  2764  05AE  0008               	opt stack 0
  2765                           GLOBAL	__end_of_sprintf
  2766                           	__end_of_sprintf:
  2767  05AF                     	signat	_sprintf,4698
  2768                           	global	___lwmod
  2769                           
  2770 ;; *************** function ___lwmod *****************
  2771 ;; Defined at:
  2772 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  divisor         2    8[COMMON] unsigned int 
  2775 ;;  dividend        2   10[COMMON] unsigned int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  counter         1   13[COMMON] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    8[COMMON] unsigned int 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         4       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0
  2789 ;;      Temps:          1       0       0       0       0
  2790 ;;      Totals:         6       0       0       0       0
  2791 ;;Total ram usage:        6 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_sprintf
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  2800                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2801                           	line	5
  2802                           global __ptext3
  2803                           __ptext3:	;psect for function ___lwmod
  2804  00FE                     psect	text3
  2805                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2806                           	line	5
  2807                           	global	__size_of___lwmod
  2808                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2809  0041                     	
  2810                           ___lwmod:	
  2811  00FE                     ;incstack = 0
  2812                           	opt	stack 6
  2813                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2814                           	line	12
  2815                           	
  2816                           l1534:	
  2817  00FE                     	movf	((___lwmod@divisor)),w
  2818  00FE  0878               iorwf	((___lwmod@divisor+1)),w
  2819  00FF  0479               	btfsc	status,2
  2820  0100  1903               	goto	u811
  2821  0101  2903               	goto	u810
  2822  0102  2904               u811:
  2823  0103                     	goto	l1552
  2824  0103  2939               u810:
  2825  0104                     	line	13
  2826                           	
  2827                           l1536:	
  2828  0104                     	clrf	(___lwmod@counter)
  2829  0104  01FD               	incf	(___lwmod@counter),f
  2830  0105  0AFD               	line	14
  2831                           	goto	l1542
  2832  0106  2913               	
  2833                           l602:	
  2834  0107                     	line	15
  2835                           	
  2836                           l1538:	
  2837  0107                     	movlw	01h
  2838  0107  3001               	
  2839                           u825:
  2840  0108                     	clrc
  2841  0108  1003               	rlf	(___lwmod@divisor),f
  2842  0109  0DF8               	rlf	(___lwmod@divisor+1),f
  2843  010A  0DF9               	addlw	-1
  2844  010B  3EFF               	skipz
  2845  010C  1D03               	goto	u825
  2846  010D  2908               	line	16
  2847                           	
  2848                           l1540:	
  2849  010E                     	movlw	low(01h)
  2850  010E  3001               	movwf	(??___lwmod+0)+0
  2851  010F  00FC               	movf	(??___lwmod+0)+0,w
  2852  0110  087C               	addwf	(___lwmod@counter),f
  2853  0111  07FD               	goto	l1542
  2854  0112  2913               	line	17
  2855                           	
  2856                           l601:	
  2857  0113                     	line	14
  2858                           	
  2859                           l1542:	
  2860  0113                     	btfss	(___lwmod@divisor+1),(15)&7
  2861  0113  1FF9               	goto	u831
  2862  0114  2916               	goto	u830
  2863  0115  2917               u831:
  2864  0116                     	goto	l1538
  2865  0116  2907               u830:
  2866  0117                     	goto	l1544
  2867  0117  2919               	
  2868                           l603:	
  2869  0118                     	goto	l1544
  2870  0118  2919               	line	18
  2871                           	
  2872                           l604:	
  2873  0119                     	line	19
  2874                           	
  2875                           l1544:	
  2876  0119                     	movf	(___lwmod@divisor+1),w
  2877  0119  0879               	subwf	(___lwmod@dividend+1),w
  2878  011A  027B               	skipz
  2879  011B  1D03               	goto	u845
  2880  011C  291F               	movf	(___lwmod@divisor),w
  2881  011D  0878               	subwf	(___lwmod@dividend),w
  2882  011E  027A               u845:
  2883  011F                     	skipc
  2884  011F  1C03               	goto	u841
  2885  0120  2922               	goto	u840
  2886  0121  2923               u841:
  2887  0122                     	goto	l1548
  2888  0122  292A               u840:
  2889  0123                     	line	20
  2890                           	
  2891                           l1546:	
  2892  0123                     	movf	(___lwmod@divisor),w
  2893  0123  0878               	subwf	(___lwmod@dividend),f
  2894  0124  02FA               	movf	(___lwmod@divisor+1),w
  2895  0125  0879               	skipc
  2896  0126  1C03               	decf	(___lwmod@dividend+1),f
  2897  0127  03FB               	subwf	(___lwmod@dividend+1),f
  2898  0128  02FB               	goto	l1548
  2899  0129  292A               	
  2900                           l605:	
  2901  012A                     	line	21
  2902                           	
  2903                           l1548:	
  2904  012A                     	movlw	01h
  2905  012A  3001               	
  2906                           u855:
  2907  012B                     	clrc
  2908  012B  1003               	rrf	(___lwmod@divisor+1),f
  2909  012C  0CF9               	rrf	(___lwmod@divisor),f
  2910  012D  0CF8               	addlw	-1
  2911  012E  3EFF               	skipz
  2912  012F  1D03               	goto	u855
  2913  0130  292B               	line	22
  2914                           	
  2915                           l1550:	
  2916  0131                     	movlw	01h
  2917  0131  3001               	subwf	(___lwmod@counter),f
  2918  0132  02FD               	btfss	status,2
  2919  0133  1D03               	goto	u861
  2920  0134  2936               	goto	u860
  2921  0135  2937               u861:
  2922  0136                     	goto	l1544
  2923  0136  2919               u860:
  2924  0137                     	goto	l1552
  2925  0137  2939               	
  2926                           l606:	
  2927  0138                     	goto	l1552
  2928  0138  2939               	line	23
  2929                           	
  2930                           l600:	
  2931  0139                     	line	24
  2932                           	
  2933                           l1552:	
  2934  0139                     	movf	(___lwmod@dividend+1),w
  2935  0139  087B               	movwf	(?___lwmod+1)
  2936  013A  00F9               	movf	(___lwmod@dividend),w
  2937  013B  087A               	movwf	(?___lwmod)
  2938  013C  00F8               	goto	l607
  2939  013D  293E               	
  2940                           l1554:	
  2941  013E                     	line	25
  2942                           	
  2943                           l607:	
  2944  013E                     	return
  2945  013E  0008               	opt stack 0
  2946                           GLOBAL	__end_of___lwmod
  2947                           	__end_of___lwmod:
  2948  013F                     	signat	___lwmod,8314
  2949                           	global	___lwdiv
  2950                           
  2951 ;; *************** function ___lwdiv *****************
  2952 ;; Defined at:
  2953 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  divisor         2    0[COMMON] unsigned int 
  2956 ;;  dividend        2    2[COMMON] unsigned int 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  quotient        2    5[COMMON] unsigned int 
  2959 ;;  counter         1    7[COMMON] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  2    0[COMMON] unsigned int 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969 ;;      Params:         4       0       0       0       0
  2970 ;;      Locals:         3       0       0       0       0
  2971 ;;      Temps:          1       0       0       0       0
  2972 ;;      Totals:         8       0       0       0       0
  2973 ;;Total ram usage:        8 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_sprintf
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2982                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2983                           	line	5
  2984                           global __ptext4
  2985                           __ptext4:	;psect for function ___lwdiv
  2986  0184                     psect	text4
  2987                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2988                           	line	5
  2989                           	global	__size_of___lwdiv
  2990                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2991  004B                     	
  2992                           ___lwdiv:	
  2993  0184                     ;incstack = 0
  2994                           	opt	stack 6
  2995                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2996                           	line	13
  2997                           	
  2998                           l1508:	
  2999  0184                     	clrf	(___lwdiv@quotient)
  3000  0184  01F5               	clrf	(___lwdiv@quotient+1)
  3001  0185  01F6               	line	14
  3002                           	
  3003                           l1510:	
  3004  0186                     	movf	((___lwdiv@divisor)),w
  3005  0186  0870               iorwf	((___lwdiv@divisor+1)),w
  3006  0187  0471               	btfsc	status,2
  3007  0188  1903               	goto	u741
  3008  0189  298B               	goto	u740
  3009  018A  298C               u741:
  3010  018B                     	goto	l1530
  3011  018B  29C9               u740:
  3012  018C                     	line	15
  3013                           	
  3014                           l1512:	
  3015  018C                     	clrf	(___lwdiv@counter)
  3016  018C  01F7               	incf	(___lwdiv@counter),f
  3017  018D  0AF7               	line	16
  3018                           	goto	l1518
  3019  018E  299B               	
  3020                           l592:	
  3021  018F                     	line	17
  3022                           	
  3023                           l1514:	
  3024  018F                     	movlw	01h
  3025  018F  3001               	
  3026                           u755:
  3027  0190                     	clrc
  3028  0190  1003               	rlf	(___lwdiv@divisor),f
  3029  0191  0DF0               	rlf	(___lwdiv@divisor+1),f
  3030  0192  0DF1               	addlw	-1
  3031  0193  3EFF               	skipz
  3032  0194  1D03               	goto	u755
  3033  0195  2990               	line	18
  3034                           	
  3035                           l1516:	
  3036  0196                     	movlw	low(01h)
  3037  0196  3001               	movwf	(??___lwdiv+0)+0
  3038  0197  00F4               	movf	(??___lwdiv+0)+0,w
  3039  0198  0874               	addwf	(___lwdiv@counter),f
  3040  0199  07F7               	goto	l1518
  3041  019A  299B               	line	19
  3042                           	
  3043                           l591:	
  3044  019B                     	line	16
  3045                           	
  3046                           l1518:	
  3047  019B                     	btfss	(___lwdiv@divisor+1),(15)&7
  3048  019B  1FF1               	goto	u761
  3049  019C  299E               	goto	u760
  3050  019D  299F               u761:
  3051  019E                     	goto	l1514
  3052  019E  298F               u760:
  3053  019F                     	goto	l1520
  3054  019F  29A1               	
  3055                           l593:	
  3056  01A0                     	goto	l1520
  3057  01A0  29A1               	line	20
  3058                           	
  3059                           l594:	
  3060  01A1                     	line	21
  3061                           	
  3062                           l1520:	
  3063  01A1                     	movlw	01h
  3064  01A1  3001               	
  3065                           u775:
  3066  01A2                     	clrc
  3067  01A2  1003               	rlf	(___lwdiv@quotient),f
  3068  01A3  0DF5               	rlf	(___lwdiv@quotient+1),f
  3069  01A4  0DF6               	addlw	-1
  3070  01A5  3EFF               	skipz
  3071  01A6  1D03               	goto	u775
  3072  01A7  29A2               	line	22
  3073                           	movf	(___lwdiv@divisor+1),w
  3074  01A8  0871               	subwf	(___lwdiv@dividend+1),w
  3075  01A9  0273               	skipz
  3076  01AA  1D03               	goto	u785
  3077  01AB  29AE               	movf	(___lwdiv@divisor),w
  3078  01AC  0870               	subwf	(___lwdiv@dividend),w
  3079  01AD  0272               u785:
  3080  01AE                     	skipc
  3081  01AE  1C03               	goto	u781
  3082  01AF  29B1               	goto	u780
  3083  01B0  29B2               u781:
  3084  01B1                     	goto	l1526
  3085  01B1  29BA               u780:
  3086  01B2                     	line	23
  3087                           	
  3088                           l1522:	
  3089  01B2                     	movf	(___lwdiv@divisor),w
  3090  01B2  0870               	subwf	(___lwdiv@dividend),f
  3091  01B3  02F2               	movf	(___lwdiv@divisor+1),w
  3092  01B4  0871               	skipc
  3093  01B5  1C03               	decf	(___lwdiv@dividend+1),f
  3094  01B6  03F3               	subwf	(___lwdiv@dividend+1),f
  3095  01B7  02F3               	line	24
  3096                           	
  3097                           l1524:	
  3098  01B8                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3099  01B8  1475               	goto	l1526
  3100  01B9  29BA               	line	25
  3101                           	
  3102                           l595:	
  3103  01BA                     	line	26
  3104                           	
  3105                           l1526:	
  3106  01BA                     	movlw	01h
  3107  01BA  3001               	
  3108                           u795:
  3109  01BB                     	clrc
  3110  01BB  1003               	rrf	(___lwdiv@divisor+1),f
  3111  01BC  0CF1               	rrf	(___lwdiv@divisor),f
  3112  01BD  0CF0               	addlw	-1
  3113  01BE  3EFF               	skipz
  3114  01BF  1D03               	goto	u795
  3115  01C0  29BB               	line	27
  3116                           	
  3117                           l1528:	
  3118  01C1                     	movlw	01h
  3119  01C1  3001               	subwf	(___lwdiv@counter),f
  3120  01C2  02F7               	btfss	status,2
  3121  01C3  1D03               	goto	u801
  3122  01C4  29C6               	goto	u800
  3123  01C5  29C7               u801:
  3124  01C6                     	goto	l1520
  3125  01C6  29A1               u800:
  3126  01C7                     	goto	l1530
  3127  01C7  29C9               	
  3128                           l596:	
  3129  01C8                     	goto	l1530
  3130  01C8  29C9               	line	28
  3131                           	
  3132                           l590:	
  3133  01C9                     	line	29
  3134                           	
  3135                           l1530:	
  3136  01C9                     	movf	(___lwdiv@quotient+1),w
  3137  01C9  0876               	movwf	(?___lwdiv+1)
  3138  01CA  00F1               	movf	(___lwdiv@quotient),w
  3139  01CB  0875               	movwf	(?___lwdiv)
  3140  01CC  00F0               	goto	l597
  3141  01CD  29CE               	
  3142                           l1532:	
  3143  01CE                     	line	30
  3144                           	
  3145                           l597:	
  3146  01CE                     	return
  3147  01CE  0008               	opt stack 0
  3148                           GLOBAL	__end_of___lwdiv
  3149                           	__end_of___lwdiv:
  3150  01CF                     	signat	___lwdiv,8314
  3151                           	global	_limpa
  3152                           
  3153 ;; *************** function _limpa *****************
  3154 ;; Defined at:
  3155 ;;		line 75 in file "bibliotec_lcd.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0
  3171 ;;      Temps:          2       0       0       0       0
  3172 ;;      Totals:         2       0       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    3
  3176 ;; This function calls:
  3177 ;;		_byte
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3183                           	file	"bibliotec_lcd.c"
  3184                           	line	75
  3185                           global __ptext5
  3186                           __ptext5:	;psect for function _limpa
  3187  0FC3                     psect	text5
  3188                           	file	"bibliotec_lcd.c"
  3189                           	line	75
  3190                           	global	__size_of_limpa
  3191                           	__size_of_limpa	equ	__end_of_limpa-_limpa
  3192  0015                     	
  3193                           _limpa:	
  3194  0FC3                     ;incstack = 0
  3195                           	opt	stack 4
  3196                           ; Regs used in _limpa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3197                           	line	77
  3198                           	
  3199                           l1722:	
  3200  0FC3                     ;bibliotec_lcd.c: 77:     byte (0, 0x01);
  3201                           	movlw	0
  3202  0FC3  3000               	bcf	status, 5	;RP0=0, select bank0
  3203  0FC4  1283               	bcf	status, 6	;RP1=0, select bank0
  3204  0FC5  1303               	movwf	(byte@escreve)
  3205  0FC6  00B2               	movwf	(byte@escreve+1)
  3206  0FC7  00B3               	clrf	(byte@dado)
  3207  0FC8  01B4               	incf	(byte@dado),f
  3208  0FC9  0AB4               	fcall	_byte
  3209  0FCA  120A  118A  213F  120A  158A  	line	78
  3210                           	
  3211                           l1724:	
  3212  0FCF                     ;bibliotec_lcd.c: 78:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3213                           	opt asmopt_push
  3214                           opt asmopt_off
  3215                           movlw	7
  3216  0FCF  3007               movwf	((??_limpa+0)+0+1),f
  3217  0FD0  00FD               	movlw	125
  3218  0FD1  307D               movwf	((??_limpa+0)+0),f
  3219  0FD2  00FC               	u1347:
  3220  0FD3                     decfsz	((??_limpa+0)+0),f
  3221  0FD3  0BFC               	goto	u1347
  3222  0FD4  2FD3               	decfsz	((??_limpa+0)+0+1),f
  3223  0FD5  0BFD               	goto	u1347
  3224  0FD6  2FD3               opt asmopt_pop
  3225                           
  3226                           	line	79
  3227                           	
  3228                           l183:	
  3229  0FD7                     	return
  3230  0FD7  0008               	opt stack 0
  3231                           GLOBAL	__end_of_limpa
  3232                           	__end_of_limpa:
  3233  0FD8                     	signat	_limpa,89
  3234                           	global	_lcd_init
  3235                           
  3236 ;; *************** function _lcd_init *****************
  3237 ;; Defined at:
  3238 ;;		line 47 in file "bibliotec_lcd.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  lcd_pins        1    wreg     PTR struct .
  3241 ;;		 -> lcd_pins(12), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  lcd_pins        1    6[BANK0 ] PTR struct .
  3244 ;;		 -> lcd_pins(12), 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       0       0       0
  3255 ;;      Locals:         0       1       0       0       0
  3256 ;;      Temps:          2       0       0       0       0
  3257 ;;      Totals:         2       1       0       0       0
  3258 ;;Total ram usage:        3 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    3
  3261 ;; This function calls:
  3262 ;;		_byte
  3263 ;;		_enable
  3264 ;;		_nibble
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3270                           	line	47
  3271                           global __ptext6
  3272                           __ptext6:	;psect for function _lcd_init
  3273  030A                     psect	text6
  3274                           	file	"bibliotec_lcd.c"
  3275                           	line	47
  3276                           	global	__size_of_lcd_init
  3277                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3278  00B0                     	
  3279                           _lcd_init:	
  3280  030A                     ;incstack = 0
  3281                           	opt	stack 4
  3282                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3283                           ;lcd_init@lcd_pins stored from wreg
  3284                           	bcf	status, 5	;RP0=0, select bank0
  3285  030A  1283               	bcf	status, 6	;RP1=0, select bank0
  3286  030B  1303               	movwf	(lcd_init@lcd_pins)
  3287  030C  00B8               	line	50
  3288                           	
  3289                           l1692:	
  3290  030D                     ;bibliotec_lcd.c: 47: void lcd_init( lcd_pin_t *lcd_pins);bibliotec_lcd.c: 48: {;bibliot
                                 ec_lcd.c: 50:     port_rs = lcd_pins->port_rs;
  3291                           	movf	(lcd_init@lcd_pins),w
  3292  030D  0838               	movwf	fsr0
  3293  030E  0084               	bcf	status, 7	;select IRP bank0
  3294  030F  1383               		movf	indf,w
  3295  0310  0800               	movwf	(_port_rs)
  3296  0311  00A4               incf	fsr0,f
  3297  0312  0A84               	movf	indf,w
  3298  0313  0800               	decf	fsr0,f
  3299  0314  0384               movwf	(_port_rs+1)
  3300  0315  00A5               
  3301                           	line	51
  3302                           ;bibliotec_lcd.c: 51:     port_en = lcd_pins->port_en;
  3303                           	movf	(lcd_init@lcd_pins),w
  3304  0316  0838               	addlw	03h
  3305  0317  3E03               	movwf	fsr0
  3306  0318  0084               		movf	indf,w
  3307  0319  0800               	movwf	(_port_en)
  3308  031A  00A2               incf	fsr0,f
  3309  031B  0A84               	movf	indf,w
  3310  031C  0800               	decf	fsr0,f
  3311  031D  0384               movwf	(_port_en+1)
  3312  031E  00A3               
  3313                           	line	52
  3314                           ;bibliotec_lcd.c: 52:     port_data = lcd_pins->port_data;
  3315                           	movf	(lcd_init@lcd_pins),w
  3316  031F  0838               	addlw	06h
  3317  0320  3E06               	movwf	fsr0
  3318  0321  0084               		movf	indf,w
  3319  0322  0800               	movwf	(_port_data)
  3320  0323  00A0               incf	fsr0,f
  3321  0324  0A84               	movf	indf,w
  3322  0325  0800               	decf	fsr0,f
  3323  0326  0384               movwf	(_port_data+1)
  3324  0327  00A1               
  3325                           	line	53
  3326                           ;bibliotec_lcd.c: 53:     RS = lcd_pins->pino_rs;
  3327                           	movf	(lcd_init@lcd_pins),w
  3328  0328  0838               	addlw	02h
  3329  0329  3E02               	movwf	fsr0
  3330  032A  0084               	movf	indf,w
  3331  032B  0800               	movwf	(??_lcd_init+0)+0
  3332  032C  00FC               	clrf	(??_lcd_init+0)+0+1
  3333  032D  01FD               	movf	0+(??_lcd_init+0)+0,w
  3334  032E  087C               	movwf	(_RS)	;volatile
  3335  032F  00B0               	movf	1+(??_lcd_init+0)+0,w
  3336  0330  087D               	movwf	(_RS+1)	;volatile
  3337  0331  00B1               	line	54
  3338                           ;bibliotec_lcd.c: 54:     EN = lcd_pins->pino_en;
  3339                           	movf	(lcd_init@lcd_pins),w
  3340  0332  0838               	addlw	05h
  3341  0333  3E05               	movwf	fsr0
  3342  0334  0084               	movf	indf,w
  3343  0335  0800               	movwf	(??_lcd_init+0)+0
  3344  0336  00FC               	clrf	(??_lcd_init+0)+0+1
  3345  0337  01FD               	movf	0+(??_lcd_init+0)+0,w
  3346  0338  087C               	movwf	(_EN)	;volatile
  3347  0339  00AE               	movf	1+(??_lcd_init+0)+0,w
  3348  033A  087D               	movwf	(_EN+1)	;volatile
  3349  033B  00AF               	line	55
  3350                           ;bibliotec_lcd.c: 55:     D4 = lcd_pins->pino_d4;
  3351                           	movf	(lcd_init@lcd_pins),w
  3352  033C  0838               	addlw	08h
  3353  033D  3E08               	movwf	fsr0
  3354  033E  0084               	movf	indf,w
  3355  033F  0800               	movwf	(??_lcd_init+0)+0
  3356  0340  00FC               	clrf	(??_lcd_init+0)+0+1
  3357  0341  01FD               	movf	0+(??_lcd_init+0)+0,w
  3358  0342  087C               	movwf	(_D4)	;volatile
  3359  0343  00AC               	movf	1+(??_lcd_init+0)+0,w
  3360  0344  087D               	movwf	(_D4+1)	;volatile
  3361  0345  00AD               	line	56
  3362                           ;bibliotec_lcd.c: 56:     D5 = lcd_pins->pino_d5;
  3363                           	movf	(lcd_init@lcd_pins),w
  3364  0346  0838               	addlw	09h
  3365  0347  3E09               	movwf	fsr0
  3366  0348  0084               	movf	indf,w
  3367  0349  0800               	movwf	(??_lcd_init+0)+0
  3368  034A  00FC               	clrf	(??_lcd_init+0)+0+1
  3369  034B  01FD               	movf	0+(??_lcd_init+0)+0,w
  3370  034C  087C               	movwf	(_D5)	;volatile
  3371  034D  00AA               	movf	1+(??_lcd_init+0)+0,w
  3372  034E  087D               	movwf	(_D5+1)	;volatile
  3373  034F  00AB               	line	57
  3374                           ;bibliotec_lcd.c: 57:     D6 = lcd_pins->pino_d6;
  3375                           	movf	(lcd_init@lcd_pins),w
  3376  0350  0838               	addlw	0Ah
  3377  0351  3E0A               	movwf	fsr0
  3378  0352  0084               	movf	indf,w
  3379  0353  0800               	movwf	(??_lcd_init+0)+0
  3380  0354  00FC               	clrf	(??_lcd_init+0)+0+1
  3381  0355  01FD               	movf	0+(??_lcd_init+0)+0,w
  3382  0356  087C               	movwf	(_D6)	;volatile
  3383  0357  00A8               	movf	1+(??_lcd_init+0)+0,w
  3384  0358  087D               	movwf	(_D6+1)	;volatile
  3385  0359  00A9               	line	58
  3386                           ;bibliotec_lcd.c: 58:     D7 = lcd_pins->pino_d7;
  3387                           	movf	(lcd_init@lcd_pins),w
  3388  035A  0838               	addlw	0Bh
  3389  035B  3E0B               	movwf	fsr0
  3390  035C  0084               	movf	indf,w
  3391  035D  0800               	movwf	(??_lcd_init+0)+0
  3392  035E  00FC               	clrf	(??_lcd_init+0)+0+1
  3393  035F  01FD               	movf	0+(??_lcd_init+0)+0,w
  3394  0360  087C               	movwf	(_D7)	;volatile
  3395  0361  00A6               	movf	1+(??_lcd_init+0)+0,w
  3396  0362  087D               	movwf	(_D7+1)	;volatile
  3397  0363  00A7               	line	60
  3398                           	
  3399                           l1694:	
  3400  0364                     ;bibliotec_lcd.c: 60:     _delay((unsigned long)((50)*(4000000/4000.0)));
  3401                           	opt asmopt_push
  3402                           opt asmopt_off
  3403                           movlw	65
  3404  0364  3041               movwf	((??_lcd_init+0)+0+1),f
  3405  0365  00FD               	movlw	238
  3406  0366  30EE               movwf	((??_lcd_init+0)+0),f
  3407  0367  00FC               	u1357:
  3408  0368                     decfsz	((??_lcd_init+0)+0),f
  3409  0368  0BFC               	goto	u1357
  3410  0369  2B68               	decfsz	((??_lcd_init+0)+0+1),f
  3411  036A  0BFD               	goto	u1357
  3412  036B  2B68               	nop
  3413  036C  0000               opt asmopt_pop
  3414                           
  3415                           	line	61
  3416                           	
  3417                           l1696:	
  3418  036D                     ;bibliotec_lcd.c: 61:     nibble(0x2);
  3419                           	movlw	02h
  3420  036D  3002               	movwf	(nibble@dado)
  3421  036E  00F8               	movlw	0
  3422  036F  3000               	movwf	((nibble@dado))+1
  3423  0370  00F9               	fcall	_nibble
  3424  0371  120A  118A  2297  120A  118A  	line	62
  3425                           	
  3426                           l1698:	
  3427  0376                     ;bibliotec_lcd.c: 62:     enable();
  3428                           	fcall	_enable
  3429  0376  120A  118A  2057  120A  118A  	line	64
  3430                           	
  3431                           l1700:	
  3432  037B                     ;bibliotec_lcd.c: 64:     byte(0, 0x28);
  3433                           	movlw	0
  3434  037B  3000               	bcf	status, 5	;RP0=0, select bank0
  3435  037C  1283               	bcf	status, 6	;RP1=0, select bank0
  3436  037D  1303               	movwf	(byte@escreve)
  3437  037E  00B2               	movwf	(byte@escreve+1)
  3438  037F  00B3               	movlw	low(028h)
  3439  0380  3028               	movwf	(??_lcd_init+0)+0
  3440  0381  00FC               	movf	(??_lcd_init+0)+0,w
  3441  0382  087C               	movwf	(byte@dado)
  3442  0383  00B4               	fcall	_byte
  3443  0384  120A  118A  213F  120A  118A  	line	65
  3444                           	
  3445                           l1702:	
  3446  0389                     ;bibliotec_lcd.c: 65:     byte(0, 0x0C);
  3447                           	movlw	0
  3448  0389  3000               	bcf	status, 5	;RP0=0, select bank0
  3449  038A  1283               	bcf	status, 6	;RP1=0, select bank0
  3450  038B  1303               	movwf	(byte@escreve)
  3451  038C  00B2               	movwf	(byte@escreve+1)
  3452  038D  00B3               	movlw	low(0Ch)
  3453  038E  300C               	movwf	(??_lcd_init+0)+0
  3454  038F  00FC               	movf	(??_lcd_init+0)+0,w
  3455  0390  087C               	movwf	(byte@dado)
  3456  0391  00B4               	fcall	_byte
  3457  0392  120A  118A  213F  120A  118A  	line	66
  3458                           	
  3459                           l1704:	
  3460  0397                     ;bibliotec_lcd.c: 66:     byte(0, 0x06);
  3461                           	movlw	0
  3462  0397  3000               	bcf	status, 5	;RP0=0, select bank0
  3463  0398  1283               	bcf	status, 6	;RP1=0, select bank0
  3464  0399  1303               	movwf	(byte@escreve)
  3465  039A  00B2               	movwf	(byte@escreve+1)
  3466  039B  00B3               	movlw	low(06h)
  3467  039C  3006               	movwf	(??_lcd_init+0)+0
  3468  039D  00FC               	movf	(??_lcd_init+0)+0,w
  3469  039E  087C               	movwf	(byte@dado)
  3470  039F  00B4               	fcall	_byte
  3471  03A0  120A  118A  213F  120A  118A  	line	67
  3472                           	
  3473                           l1706:	
  3474  03A5                     ;bibliotec_lcd.c: 67:     byte(0, 0x01);
  3475                           	movlw	0
  3476  03A5  3000               	bcf	status, 5	;RP0=0, select bank0
  3477  03A6  1283               	bcf	status, 6	;RP1=0, select bank0
  3478  03A7  1303               	movwf	(byte@escreve)
  3479  03A8  00B2               	movwf	(byte@escreve+1)
  3480  03A9  00B3               	clrf	(byte@dado)
  3481  03AA  01B4               	incf	(byte@dado),f
  3482  03AB  0AB4               	fcall	_byte
  3483  03AC  120A  118A  213F  120A  118A  	line	69
  3484                           	
  3485                           l1708:	
  3486  03B1                     ;bibliotec_lcd.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3487                           	opt asmopt_push
  3488                           opt asmopt_off
  3489                           movlw	7
  3490  03B1  3007               movwf	((??_lcd_init+0)+0+1),f
  3491  03B2  00FD               	movlw	125
  3492  03B3  307D               movwf	((??_lcd_init+0)+0),f
  3493  03B4  00FC               	u1367:
  3494  03B5                     decfsz	((??_lcd_init+0)+0),f
  3495  03B5  0BFC               	goto	u1367
  3496  03B6  2BB5               	decfsz	((??_lcd_init+0)+0+1),f
  3497  03B7  0BFD               	goto	u1367
  3498  03B8  2BB5               opt asmopt_pop
  3499                           
  3500                           	line	73
  3501                           	
  3502                           l180:	
  3503  03B9                     	return
  3504  03B9  0008               	opt stack 0
  3505                           GLOBAL	__end_of_lcd_init
  3506                           	__end_of_lcd_init:
  3507  03BA                     	signat	_lcd_init,4217
  3508                           	global	_escreve
  3509                           
  3510 ;; *************** function _escreve *****************
  3511 ;; Defined at:
  3512 ;;		line 81 in file "bibliotec_lcd.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  lin             1    wreg     unsigned char 
  3515 ;;  col             1    6[BANK0 ] unsigned char 
  3516 ;;  str             2    7[BANK0 ] PTR unsigned char 
  3517 ;;		 -> buffer(75), STR_1(6), 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  lin             1   13[COMMON] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       3       0       0       0
  3530 ;;      Locals:         1       0       0       0       0
  3531 ;;      Temps:          1       0       0       0       0
  3532 ;;      Totals:         2       3       0       0       0
  3533 ;;Total ram usage:        5 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    3
  3536 ;; This function calls:
  3537 ;;		_byte
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3543                           	line	81
  3544                           global __ptext7
  3545                           __ptext7:	;psect for function _escreve
  3546  01CF                     psect	text7
  3547                           	file	"bibliotec_lcd.c"
  3548                           	line	81
  3549                           	global	__size_of_escreve
  3550                           	__size_of_escreve	equ	__end_of_escreve-_escreve
  3551  0057                     	
  3552                           _escreve:	
  3553  01CF                     ;incstack = 0
  3554                           	opt	stack 4
  3555                           ; Regs used in _escreve: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3556                           ;escreve@lin stored from wreg
  3557                           	movwf	(escreve@lin)
  3558  01CF  00FD               	line	83
  3559                           	
  3560                           l1710:	
  3561  01D0                     ;bibliotec_lcd.c: 81: void escreve(char lin, char col, char *str);bibliotec_lcd.c: 82: {
                                 ;bibliotec_lcd.c: 83:     if(lin == 1)byte(0,0x80 + col);
  3562                           		decf	((escreve@lin)),w
  3563  01D0  037D               	btfss	status,2
  3564  01D1  1D03               	goto	u951
  3565  01D2  29D4               	goto	u950
  3566  01D3  29D5               u951:
  3567  01D4                     	goto	l1714
  3568  01D4  29E5               u950:
  3569  01D5                     	
  3570                           l1712:	
  3571  01D5                     	movlw	0
  3572  01D5  3000               	bcf	status, 5	;RP0=0, select bank0
  3573  01D6  1283               	bcf	status, 6	;RP1=0, select bank0
  3574  01D7  1303               	movwf	(byte@escreve)
  3575  01D8  00B2               	movwf	(byte@escreve+1)
  3576  01D9  00B3               	movf	(escreve@col),w
  3577  01DA  0838               	addlw	080h
  3578  01DB  3E80               	movwf	(??_escreve+0)+0
  3579  01DC  00FC               	movf	(??_escreve+0)+0,w
  3580  01DD  087C               	movwf	(byte@dado)
  3581  01DE  00B4               	fcall	_byte
  3582  01DF  120A  118A  213F  120A  118A  	goto	l1720
  3583  01E4  2A14               	line	84
  3584                           ;bibliotec_lcd.c: 84:     else byte(0,0xC0 + col);
  3585                           	
  3586                           l186:	
  3587  01E5                     	
  3588                           l1714:	
  3589  01E5                     	movlw	0
  3590  01E5  3000               	bcf	status, 5	;RP0=0, select bank0
  3591  01E6  1283               	bcf	status, 6	;RP1=0, select bank0
  3592  01E7  1303               	movwf	(byte@escreve)
  3593  01E8  00B2               	movwf	(byte@escreve+1)
  3594  01E9  00B3               	movf	(escreve@col),w
  3595  01EA  0838               	addlw	0C0h
  3596  01EB  3EC0               	movwf	(??_escreve+0)+0
  3597  01EC  00FC               	movf	(??_escreve+0)+0,w
  3598  01ED  087C               	movwf	(byte@dado)
  3599  01EE  00B4               	fcall	_byte
  3600  01EF  120A  118A  213F  120A  118A  	goto	l1720
  3601  01F4  2A14               	
  3602                           l187:	
  3603  01F5                     	line	85
  3604                           ;bibliotec_lcd.c: 85:     while (*str)
  3605                           	goto	l1720
  3606  01F5  2A14               	
  3607                           l189:	
  3608  01F6                     	line	87
  3609                           	
  3610                           l1716:	
  3611  01F6                     ;bibliotec_lcd.c: 86:     {;bibliotec_lcd.c: 87:         byte(1, *str++);
  3612                           	movlw	01h
  3613  01F6  3001               	bcf	status, 5	;RP0=0, select bank0
  3614  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  3615  01F8  1303               	movwf	(byte@escreve)
  3616  01F9  00B2               	movlw	0
  3617  01FA  3000               	movwf	((byte@escreve))+1
  3618  01FB  00B3               	movf	(escreve@str+1),w
  3619  01FC  083A               	movwf	btemp+1
  3620  01FD  00FF               	movf	(escreve@str),w
  3621  01FE  0839               	movwf	fsr0
  3622  01FF  0084               	fcall	stringtab
  3623  0200  120A  118A  2003  120A  118A  	movwf	(??_escreve+0)+0
  3624  0205  00FC               	movf	(??_escreve+0)+0,w
  3625  0206  087C               	movwf	(byte@dado)
  3626  0207  00B4               	fcall	_byte
  3627  0208  120A  118A  213F  120A  118A  	
  3628                           l1718:	
  3629  020D                     	movlw	01h
  3630  020D  3001               	bcf	status, 5	;RP0=0, select bank0
  3631  020E  1283               	bcf	status, 6	;RP1=0, select bank0
  3632  020F  1303               	addwf	(escreve@str),f
  3633  0210  07B9               	skipnc
  3634  0211  1803               	incf	(escreve@str+1),f
  3635  0212  0ABA               	goto	l1720
  3636  0213  2A14               	line	88
  3637                           ;bibliotec_lcd.c: 88:     }
  3638                           	
  3639                           l188:	
  3640  0214                     	line	85
  3641                           	
  3642                           l1720:	
  3643  0214                     ;bibliotec_lcd.c: 85:     while (*str)
  3644                           	bcf	status, 5	;RP0=0, select bank0
  3645  0214  1283               	bcf	status, 6	;RP1=0, select bank0
  3646  0215  1303               	movf	(escreve@str+1),w
  3647  0216  083A               	movwf	btemp+1
  3648  0217  00FF               	movf	(escreve@str),w
  3649  0218  0839               	movwf	fsr0
  3650  0219  0084               	fcall	stringtab
  3651  021A  120A  118A  2003  120A  118A  	xorlw	0
  3652  021F  3A00               	skipz
  3653  0220  1D03               	goto	u961
  3654  0221  2A23               	goto	u960
  3655  0222  2A24               u961:
  3656  0223                     	goto	l1716
  3657  0223  29F6               u960:
  3658  0224                     	goto	l191
  3659  0224  2A25               	
  3660                           l190:	
  3661  0225                     	line	89
  3662                           	
  3663                           l191:	
  3664  0225                     	return
  3665  0225  0008               	opt stack 0
  3666                           GLOBAL	__end_of_escreve
  3667                           	__end_of_escreve:
  3668  0226                     	signat	_escreve,12409
  3669                           	global	_byte
  3670                           
  3671 ;; *************** function _byte *****************
  3672 ;; Defined at:
  3673 ;;		line 37 in file "bibliotec_lcd.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  escreve         2    0[BANK0 ] int 
  3676 ;;  dado            1    2[BANK0 ] unsigned char 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3688 ;;      Params:         0       3       0       0       0
  3689 ;;      Locals:         0       0       0       0       0
  3690 ;;      Temps:          0       3       0       0       0
  3691 ;;      Totals:         0       6       0       0       0
  3692 ;;Total ram usage:        6 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    2
  3695 ;; This function calls:
  3696 ;;		_enable
  3697 ;;		_muda_pin
  3698 ;;		_nibble
  3699 ;; This function is called by:
  3700 ;;		_lcd_init
  3701 ;;		_limpa
  3702 ;;		_escreve
  3703 ;;		_usa_caractere
  3704 ;;		_desloca
  3705 ;;		_grava_caractere
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3709                           	line	37
  3710                           global __ptext8
  3711                           __ptext8:	;psect for function _byte
  3712  013F                     psect	text8
  3713                           	file	"bibliotec_lcd.c"
  3714                           	line	37
  3715                           	global	__size_of_byte
  3716                           	__size_of_byte	equ	__end_of_byte-_byte
  3717  0045                     	
  3718                           _byte:	
  3719  013F                     ;incstack = 0
  3720                           	opt	stack 4
  3721                           ; Regs used in _byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3722                           	line	39
  3723                           	
  3724                           l1506:	
  3725  013F                     ;bibliotec_lcd.c: 37: void byte (int escreve, char dado);bibliotec_lcd.c: 38: {;bibliote
                                 c_lcd.c: 39:     muda_pin(port_rs, RS, escreve & 0x01);
  3726                           	bcf	status, 5	;RP0=0, select bank0
  3727  013F  1283               	bcf	status, 6	;RP1=0, select bank0
  3728  0140  1303               		movf	(_port_rs),w
  3729  0141  0824               	movwf	(muda_pin@_port)
  3730  0142  00F0               movf	(_port_rs+1),w
  3731  0143  0825               movwf	(muda_pin@_port+1)
  3732  0144  00F1               
  3733                           	movf	(_RS+1),w	;volatile
  3734  0145  0831               	movwf	(muda_pin@_pin+1)
  3735  0146  00F3               	movf	(_RS),w	;volatile
  3736  0147  0830               	movwf	(muda_pin@_pin)
  3737  0148  00F2               	movlw	01h
  3738  0149  3001               	andwf	(byte@escreve),w
  3739  014A  0532               	movwf	(muda_pin@_val)
  3740  014B  00F4               	movlw	0
  3741  014C  3000               	andwf	(byte@escreve+1),w
  3742  014D  0533               	movwf	1+(muda_pin@_val)
  3743  014E  00F5               	fcall	_muda_pin
  3744  014F  120A  118A  2029  120A  118A  	line	41
  3745                           ;bibliotec_lcd.c: 41:     nibble(dado >> 4);
  3746                           	bcf	status, 5	;RP0=0, select bank0
  3747  0154  1283               	bcf	status, 6	;RP1=0, select bank0
  3748  0155  1303               	movf	(byte@dado),w
  3749  0156  0834               	movwf	(??_byte+0)+0
  3750  0157  00B5               	movlw	04h
  3751  0158  3004               u735:
  3752  0159                     	clrc
  3753  0159  1003               	rrf	(??_byte+0)+0,f
  3754  015A  0CB5               	addlw	-1
  3755  015B  3EFF               	skipz
  3756  015C  1D03               	goto	u735
  3757  015D  2959               	movf	0+(??_byte+0)+0,w
  3758  015E  0835               	movwf	(??_byte+1)+0
  3759  015F  00B6               	clrf	(??_byte+1)+0+1
  3760  0160  01B7               	movf	0+(??_byte+1)+0,w
  3761  0161  0836               	movwf	(nibble@dado)
  3762  0162  00F8               	movf	1+(??_byte+1)+0,w
  3763  0163  0837               	movwf	(nibble@dado+1)
  3764  0164  00F9               	fcall	_nibble
  3765  0165  120A  118A  2297  120A  118A  	line	42
  3766                           ;bibliotec_lcd.c: 42:     enable();
  3767                           	fcall	_enable
  3768  016A  120A  118A  2057  120A  118A  	line	43
  3769                           ;bibliotec_lcd.c: 43:     nibble(dado & 0x0F);
  3770                           	bcf	status, 5	;RP0=0, select bank0
  3771  016F  1283               	bcf	status, 6	;RP1=0, select bank0
  3772  0170  1303               	movf	(byte@dado),w
  3773  0171  0834               	andlw	0Fh
  3774  0172  390F               	movwf	(??_byte+0)+0
  3775  0173  00B5               	clrf	(??_byte+0)+0+1
  3776  0174  01B6               	movf	0+(??_byte+0)+0,w
  3777  0175  0835               	movwf	(nibble@dado)
  3778  0176  00F8               	movf	1+(??_byte+0)+0,w
  3779  0177  0836               	movwf	(nibble@dado+1)
  3780  0178  00F9               	fcall	_nibble
  3781  0179  120A  118A  2297  120A  118A  	line	44
  3782                           ;bibliotec_lcd.c: 44:     enable();
  3783                           	fcall	_enable
  3784  017E  120A  118A  2057  120A  118A  	line	45
  3785                           	
  3786                           l177:	
  3787  0183                     	return
  3788  0183  0008               	opt stack 0
  3789                           GLOBAL	__end_of_byte
  3790                           	__end_of_byte:
  3791  0184                     	signat	_byte,8313
  3792                           	global	_nibble
  3793                           
  3794 ;; *************** function _nibble *****************
  3795 ;; Defined at:
  3796 ;;		line 28 in file "bibliotec_lcd.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  dado            2    8[COMMON] int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         2       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0
  3812 ;;      Temps:          2       0       0       0       0
  3813 ;;      Totals:         4       0       0       0       0
  3814 ;;Total ram usage:        4 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    1
  3817 ;; This function calls:
  3818 ;;		_muda_pin
  3819 ;; This function is called by:
  3820 ;;		_byte
  3821 ;;		_lcd_init
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3825                           	line	28
  3826                           global __ptext9
  3827                           __ptext9:	;psect for function _nibble
  3828  0297                     psect	text9
  3829                           	file	"bibliotec_lcd.c"
  3830                           	line	28
  3831                           	global	__size_of_nibble
  3832                           	__size_of_nibble	equ	__end_of_nibble-_nibble
  3833  0073                     	
  3834                           _nibble:	
  3835  0297                     ;incstack = 0
  3836                           	opt	stack 4
  3837                           ; Regs used in _nibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3838                           	line	30
  3839                           	
  3840                           l1484:	
  3841  0297                     ;bibliotec_lcd.c: 28: void nibble(int dado);bibliotec_lcd.c: 29: {;bibliotec_lcd.c: 30: 
                                     muda_pin(port_data, D4, dado & 0x01);
  3842                           	bcf	status, 5	;RP0=0, select bank0
  3843  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  3844  0298  1303               		movf	(_port_data),w
  3845  0299  0820               	movwf	(muda_pin@_port)
  3846  029A  00F0               movf	(_port_data+1),w
  3847  029B  0821               movwf	(muda_pin@_port+1)
  3848  029C  00F1               
  3849                           	movf	(_D4+1),w	;volatile
  3850  029D  082D               	movwf	(muda_pin@_pin+1)
  3851  029E  00F3               	movf	(_D4),w	;volatile
  3852  029F  082C               	movwf	(muda_pin@_pin)
  3853  02A0  00F2               	movlw	01h
  3854  02A1  3001               	andwf	(nibble@dado),w
  3855  02A2  0578               	movwf	(muda_pin@_val)
  3856  02A3  00F4               	movlw	0
  3857  02A4  3000               	andwf	(nibble@dado+1),w
  3858  02A5  0579               	movwf	1+(muda_pin@_val)
  3859  02A6  00F5               	fcall	_muda_pin
  3860  02A7  120A  118A  2029  120A  118A  	line	31
  3861                           ;bibliotec_lcd.c: 31:     muda_pin(port_data, D5, dado >> 1 & 0x01);
  3862                           	bcf	status, 5	;RP0=0, select bank0
  3863  02AC  1283               	bcf	status, 6	;RP1=0, select bank0
  3864  02AD  1303               		movf	(_port_data),w
  3865  02AE  0820               	movwf	(muda_pin@_port)
  3866  02AF  00F0               movf	(_port_data+1),w
  3867  02B0  0821               movwf	(muda_pin@_port+1)
  3868  02B1  00F1               
  3869                           	movf	(_D5+1),w	;volatile
  3870  02B2  082B               	movwf	(muda_pin@_pin+1)
  3871  02B3  00F3               	movf	(_D5),w	;volatile
  3872  02B4  082A               	movwf	(muda_pin@_pin)
  3873  02B5  00F2               	movf	(nibble@dado+1),w
  3874  02B6  0879               	movwf	(??_nibble+0)+0+1
  3875  02B7  00FB               	movf	(nibble@dado),w
  3876  02B8  0878               	movwf	(??_nibble+0)+0
  3877  02B9  00FA               	rlf	(??_nibble+0)+1,w
  3878  02BA  0D7B               	rrf	(??_nibble+0)+1,f
  3879  02BB  0CFB               	rrf	(??_nibble+0)+0,f
  3880  02BC  0CFA               	movlw	01h
  3881  02BD  3001               	andwf	0+(??_nibble+0)+0,w
  3882  02BE  057A               	movwf	(muda_pin@_val)
  3883  02BF  00F4               	movlw	0
  3884  02C0  3000               	andwf	1+(??_nibble+0)+0,w
  3885  02C1  057B               	movwf	1+(muda_pin@_val)
  3886  02C2  00F5               	fcall	_muda_pin
  3887  02C3  120A  118A  2029  120A  118A  	line	32
  3888                           ;bibliotec_lcd.c: 32:     muda_pin(port_data, D6, dado >> 2 & 0x01);
  3889                           	bcf	status, 5	;RP0=0, select bank0
  3890  02C8  1283               	bcf	status, 6	;RP1=0, select bank0
  3891  02C9  1303               		movf	(_port_data),w
  3892  02CA  0820               	movwf	(muda_pin@_port)
  3893  02CB  00F0               movf	(_port_data+1),w
  3894  02CC  0821               movwf	(muda_pin@_port+1)
  3895  02CD  00F1               
  3896                           	movf	(_D6+1),w	;volatile
  3897  02CE  0829               	movwf	(muda_pin@_pin+1)
  3898  02CF  00F3               	movf	(_D6),w	;volatile
  3899  02D0  0828               	movwf	(muda_pin@_pin)
  3900  02D1  00F2               	movf	(nibble@dado+1),w
  3901  02D2  0879               	movwf	(??_nibble+0)+0+1
  3902  02D3  00FB               	movf	(nibble@dado),w
  3903  02D4  0878               	movwf	(??_nibble+0)+0
  3904  02D5  00FA               	rlf	(??_nibble+0)+1,w
  3905  02D6  0D7B               	rrf	(??_nibble+0)+1,f
  3906  02D7  0CFB               	rrf	(??_nibble+0)+0,f
  3907  02D8  0CFA               	rlf	(??_nibble+0)+1,w
  3908  02D9  0D7B               	rrf	(??_nibble+0)+1,f
  3909  02DA  0CFB               	rrf	(??_nibble+0)+0,f
  3910  02DB  0CFA               	movlw	01h
  3911  02DC  3001               	andwf	0+(??_nibble+0)+0,w
  3912  02DD  057A               	movwf	(muda_pin@_val)
  3913  02DE  00F4               	movlw	0
  3914  02DF  3000               	andwf	1+(??_nibble+0)+0,w
  3915  02E0  057B               	movwf	1+(muda_pin@_val)
  3916  02E1  00F5               	fcall	_muda_pin
  3917  02E2  120A  118A  2029  120A  118A  	line	33
  3918                           ;bibliotec_lcd.c: 33:     muda_pin(port_data, D7, dado >> 3 & 0x01);
  3919                           	bcf	status, 5	;RP0=0, select bank0
  3920  02E7  1283               	bcf	status, 6	;RP1=0, select bank0
  3921  02E8  1303               		movf	(_port_data),w
  3922  02E9  0820               	movwf	(muda_pin@_port)
  3923  02EA  00F0               movf	(_port_data+1),w
  3924  02EB  0821               movwf	(muda_pin@_port+1)
  3925  02EC  00F1               
  3926                           	movf	(_D7+1),w	;volatile
  3927  02ED  0827               	movwf	(muda_pin@_pin+1)
  3928  02EE  00F3               	movf	(_D7),w	;volatile
  3929  02EF  0826               	movwf	(muda_pin@_pin)
  3930  02F0  00F2               	movf	(nibble@dado+1),w
  3931  02F1  0879               	movwf	(??_nibble+0)+0+1
  3932  02F2  00FB               	movf	(nibble@dado),w
  3933  02F3  0878               	movwf	(??_nibble+0)+0
  3934  02F4  00FA               	rlf	(??_nibble+0)+1,w
  3935  02F5  0D7B               	rrf	(??_nibble+0)+1,f
  3936  02F6  0CFB               	rrf	(??_nibble+0)+0,f
  3937  02F7  0CFA               	rlf	(??_nibble+0)+1,w
  3938  02F8  0D7B               	rrf	(??_nibble+0)+1,f
  3939  02F9  0CFB               	rrf	(??_nibble+0)+0,f
  3940  02FA  0CFA               	rlf	(??_nibble+0)+1,w
  3941  02FB  0D7B               	rrf	(??_nibble+0)+1,f
  3942  02FC  0CFB               	rrf	(??_nibble+0)+0,f
  3943  02FD  0CFA               	movlw	01h
  3944  02FE  3001               	andwf	0+(??_nibble+0)+0,w
  3945  02FF  057A               	movwf	(muda_pin@_val)
  3946  0300  00F4               	movlw	0
  3947  0301  3000               	andwf	1+(??_nibble+0)+0,w
  3948  0302  057B               	movwf	1+(muda_pin@_val)
  3949  0303  00F5               	fcall	_muda_pin
  3950  0304  120A  118A  2029  120A  118A  	line	35
  3951                           	
  3952                           l174:	
  3953  0309                     	return
  3954  0309  0008               	opt stack 0
  3955                           GLOBAL	__end_of_nibble
  3956                           	__end_of_nibble:
  3957  030A                     	signat	_nibble,4217
  3958                           	global	_enable
  3959                           
  3960 ;; *************** function _enable *****************
  3961 ;; Defined at:
  3962 ;;		line 20 in file "bibliotec_lcd.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0
  3978 ;;      Temps:          2       0       0       0       0
  3979 ;;      Totals:         2       0       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		_muda_pin
  3985 ;; This function is called by:
  3986 ;;		_byte
  3987 ;;		_lcd_init
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3991                           	line	20
  3992                           global __ptext10
  3993                           __ptext10:	;psect for function _enable
  3994  0057                     psect	text10
  3995                           	file	"bibliotec_lcd.c"
  3996                           	line	20
  3997                           	global	__size_of_enable
  3998                           	__size_of_enable	equ	__end_of_enable-_enable
  3999  0035                     	
  4000                           _enable:	
  4001  0057                     ;incstack = 0
  4002                           	opt	stack 4
  4003                           ; Regs used in _enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4004                           	line	22
  4005                           	
  4006                           l1478:	
  4007  0057                     ;bibliotec_lcd.c: 22:     muda_pin(port_en, EN, 1);
  4008                           	bcf	status, 5	;RP0=0, select bank0
  4009  0057  1283               	bcf	status, 6	;RP1=0, select bank0
  4010  0058  1303               		movf	(_port_en),w
  4011  0059  0822               	movwf	(muda_pin@_port)
  4012  005A  00F0               movf	(_port_en+1),w
  4013  005B  0823               movwf	(muda_pin@_port+1)
  4014  005C  00F1               
  4015                           	movf	(_EN+1),w	;volatile
  4016  005D  082F               	movwf	(muda_pin@_pin+1)
  4017  005E  00F3               	movf	(_EN),w	;volatile
  4018  005F  082E               	movwf	(muda_pin@_pin)
  4019  0060  00F2               	movlw	01h
  4020  0061  3001               	movwf	(muda_pin@_val)
  4021  0062  00F4               	movlw	0
  4022  0063  3000               	movwf	((muda_pin@_val))+1
  4023  0064  00F5               	fcall	_muda_pin
  4024  0065  120A  118A  2029  120A  118A  	line	23
  4025                           	
  4026                           l1480:	
  4027  006A                     ;bibliotec_lcd.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4028                           	opt asmopt_push
  4029                           opt asmopt_off
  4030                           movlw	7
  4031  006A  3007               movwf	((??_enable+0)+0+1),f
  4032  006B  00F9               	movlw	125
  4033  006C  307D               movwf	((??_enable+0)+0),f
  4034  006D  00F8               	u1377:
  4035  006E                     decfsz	((??_enable+0)+0),f
  4036  006E  0BF8               	goto	u1377
  4037  006F  286E               	decfsz	((??_enable+0)+0+1),f
  4038  0070  0BF9               	goto	u1377
  4039  0071  286E               opt asmopt_pop
  4040                           
  4041                           	line	24
  4042                           	
  4043                           l1482:	
  4044  0072                     ;bibliotec_lcd.c: 24:     muda_pin(port_en, EN, 0);
  4045                           	bcf	status, 5	;RP0=0, select bank0
  4046  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  4047  0073  1303               		movf	(_port_en),w
  4048  0074  0822               	movwf	(muda_pin@_port)
  4049  0075  00F0               movf	(_port_en+1),w
  4050  0076  0823               movwf	(muda_pin@_port+1)
  4051  0077  00F1               
  4052                           	movf	(_EN+1),w	;volatile
  4053  0078  082F               	movwf	(muda_pin@_pin+1)
  4054  0079  00F3               	movf	(_EN),w	;volatile
  4055  007A  082E               	movwf	(muda_pin@_pin)
  4056  007B  00F2               	movlw	0
  4057  007C  3000               	movwf	(muda_pin@_val)
  4058  007D  00F4               	movwf	(muda_pin@_val+1)
  4059  007E  00F5               	fcall	_muda_pin
  4060  007F  120A  118A  2029  120A  118A  	line	25
  4061                           ;bibliotec_lcd.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4062                           	opt asmopt_push
  4063                           opt asmopt_off
  4064                           	movlw	199
  4065  0084  30C7               movwf	((??_enable+0)+0),f
  4066  0085  00F8               	u1387:
  4067  0086                     	nop2
  4068  0086  2887               decfsz	(??_enable+0)+0,f
  4069  0087  0BF8               	goto	u1387
  4070  0088  2886               	nop2
  4071  0089  288A               	nop2
  4072  008A  288B               opt asmopt_pop
  4073                           
  4074                           	line	26
  4075                           	
  4076                           l171:	
  4077  008B                     	return
  4078  008B  0008               	opt stack 0
  4079                           GLOBAL	__end_of_enable
  4080                           	__end_of_enable:
  4081  008C                     	signat	_enable,89
  4082                           	global	_muda_pin
  4083                           
  4084 ;; *************** function _muda_pin *****************
  4085 ;; Defined at:
  4086 ;;		line 7 in file "bibliotec_lcd.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  _port           2    0[COMMON] PTR volatile unsigned ch
  4089 ;;		 -> NULL(0), PORTC(1), 
  4090 ;;  _pin            2    2[COMMON] int 
  4091 ;;  _val            2    4[COMMON] int 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         6       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0
  4105 ;;      Temps:          2       0       0       0       0
  4106 ;;      Totals:         8       0       0       0       0
  4107 ;;Total ram usage:        8 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_enable
  4113 ;;		_nibble
  4114 ;;		_byte
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4118                           	line	7
  4119                           global __ptext11
  4120                           __ptext11:	;psect for function _muda_pin
  4121  0029                     psect	text11
  4122                           	file	"bibliotec_lcd.c"
  4123                           	line	7
  4124                           	global	__size_of_muda_pin
  4125                           	__size_of_muda_pin	equ	__end_of_muda_pin-_muda_pin
  4126  002E                     	
  4127                           _muda_pin:	
  4128  0029                     ;incstack = 0
  4129                           	opt	stack 4
  4130                           ; Regs used in _muda_pin: [wreg-fsr0h+status,2+status,0]
  4131                           	line	9
  4132                           	
  4133                           l1472:	
  4134  0029                     ;bibliotec_lcd.c: 7: void muda_pin(volatile unsigned char *_port, int _pin, int _val);bi
                                 bliotec_lcd.c: 8: {;bibliotec_lcd.c: 9:     if(_val == 1)
  4135                           		decf	((muda_pin@_val)),w
  4136  0029  0374               iorwf	((muda_pin@_val+1)),w
  4137  002A  0475               	btfss	status,2
  4138  002B  1D03               	goto	u671
  4139  002C  282E               	goto	u670
  4140  002D  282F               u671:
  4141  002E                     	goto	l1476
  4142  002E  2842               u670:
  4143  002F                     	line	11
  4144                           	
  4145                           l1474:	
  4146  002F                     ;bibliotec_lcd.c: 10:     {;bibliotec_lcd.c: 11:         *_port |= 1 << _pin;
  4147                           	movlw	low(01h)
  4148  002F  3001               	movwf	(??_muda_pin+0)+0
  4149  0030  00F6               	incf	(muda_pin@_pin),w
  4150  0031  0A72               	goto	u684
  4151  0032  2835               u685:
  4152  0033                     	clrc
  4153  0033  1003               	rlf	(??_muda_pin+0)+0,f
  4154  0034  0DF6               u684:
  4155  0035                     	addlw	-1
  4156  0035  3EFF               	skipz
  4157  0036  1D03               	goto	u685
  4158  0037  2833               	movf	0+(??_muda_pin+0)+0,w
  4159  0038  0876               	movwf	(??_muda_pin+1)+0
  4160  0039  00F7               	movf	(muda_pin@_port),w
  4161  003A  0870               	movwf	fsr0
  4162  003B  0084               	bsf	status,7
  4163  003C  1783               	btfss	(muda_pin@_port+1),0
  4164  003D  1C71               	bcf	status,7
  4165  003E  1383               	movf	(??_muda_pin+1)+0,w
  4166  003F  0877               	iorwf	indf,f
  4167  0040  0480               	line	12
  4168                           ;bibliotec_lcd.c: 12:     }
  4169                           	goto	l168
  4170  0041  2856               	line	13
  4171                           ;bibliotec_lcd.c: 13:     else
  4172                           	
  4173                           l166:	
  4174  0042                     	line	15
  4175                           	
  4176                           l1476:	
  4177  0042                     ;bibliotec_lcd.c: 14:     {;bibliotec_lcd.c: 15:         *_port &= ~(1 << _pin);
  4178                           	movlw	low(01h)
  4179  0042  3001               	movwf	(??_muda_pin+0)+0
  4180  0043  00F6               	incf	(muda_pin@_pin),w
  4181  0044  0A72               	goto	u694
  4182  0045  2848               u695:
  4183  0046                     	clrc
  4184  0046  1003               	rlf	(??_muda_pin+0)+0,f
  4185  0047  0DF6               u694:
  4186  0048                     	addlw	-1
  4187  0048  3EFF               	skipz
  4188  0049  1D03               	goto	u695
  4189  004A  2846               	movf	0+(??_muda_pin+0)+0,w
  4190  004B  0876               	xorlw	0ffh
  4191  004C  3AFF               	movwf	(??_muda_pin+1)+0
  4192  004D  00F7               	movf	(muda_pin@_port),w
  4193  004E  0870               	movwf	fsr0
  4194  004F  0084               	bsf	status,7
  4195  0050  1783               	btfss	(muda_pin@_port+1),0
  4196  0051  1C71               	bcf	status,7
  4197  0052  1383               	movf	(??_muda_pin+1)+0,w
  4198  0053  0877               	andwf	indf,f
  4199  0054  0580               	goto	l168
  4200  0055  2856               	line	16
  4201                           ;bibliotec_lcd.c: 16:     }
  4202                           	
  4203                           l167:	
  4204  0056                     	line	17
  4205                           	
  4206                           l168:	
  4207  0056                     	return
  4208  0056  0008               	opt stack 0
  4209                           GLOBAL	__end_of_muda_pin
  4210                           	__end_of_muda_pin:
  4211  0057                     	signat	_muda_pin,12409
  4212                           	global	__le_teclado
  4213                           
  4214 ;; *************** function __le_teclado *****************
  4215 ;; Defined at:
  4216 ;;		line 78 in file "lcdtest.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      unsigned char 
  4223 ;; Registers used:
  4224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4230 ;;      Params:         0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0
  4232 ;;      Temps:          2       0       0       0       0
  4233 ;;      Totals:         2       0       0       0       0
  4234 ;;Total ram usage:        2 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    1
  4237 ;; This function calls:
  4238 ;;		__muda_linha
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4244                           	file	"lcdtest.c"
  4245                           	line	78
  4246                           global __ptext12
  4247                           __ptext12:	;psect for function __le_teclado
  4248  03BA                     psect	text12
  4249                           	file	"lcdtest.c"
  4250                           	line	78
  4251                           	global	__size_of__le_teclado
  4252                           	__size_of__le_teclado	equ	__end_of__le_teclado-__le_teclado
  4253  00F5                     	
  4254                           __le_teclado:	
  4255  03BA                     ;incstack = 0
  4256                           	opt	stack 6
  4257                           ; Regs used in __le_teclado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4258                           	line	80
  4259                           	
  4260                           l1556:	
  4261  03BA                     ;lcdtest.c: 80:     _muda_linha();
  4262                           	fcall	__muda_linha
  4263  03BA  120A  118A  20C1  120A  118A  	line	81
  4264                           	
  4265                           l1558:	
  4266  03BF                     ;lcdtest.c: 81:     if(RD4 == 1)
  4267                           	bcf	status, 5	;RP0=0, select bank0
  4268  03BF  1283               	bcf	status, 6	;RP1=0, select bank0
  4269  03C0  1303               	btfss	(68/8),(68)&7	;volatile
  4270  03C1  1E08               	goto	u871
  4271  03C2  2BC4               	goto	u870
  4272  03C3  2BC5               u871:
  4273  03C4                     	goto	l60
  4274  03C4  2BFB               u870:
  4275  03C5                     	line	83
  4276                           	
  4277                           l1560:	
  4278  03C5                     ;lcdtest.c: 82:     {;lcdtest.c: 83:         _delay((unsigned long)((100)*(4000000/4000.
                                 0)));
  4279                           	opt asmopt_push
  4280                           opt asmopt_off
  4281                           movlw	130
  4282  03C5  3082               movwf	((??__le_teclado+0)+0+1),f
  4283  03C6  00F1               	movlw	221
  4284  03C7  30DD               movwf	((??__le_teclado+0)+0),f
  4285  03C8  00F0               	u1397:
  4286  03C9                     decfsz	((??__le_teclado+0)+0),f
  4287  03C9  0BF0               	goto	u1397
  4288  03CA  2BC9               	decfsz	((??__le_teclado+0)+0+1),f
  4289  03CB  0BF1               	goto	u1397
  4290  03CC  2BC9               	nop2
  4291  03CD  2BCE               opt asmopt_pop
  4292                           
  4293                           	line	84
  4294                           ;lcdtest.c: 84:         while(RD4);
  4295                           	goto	l61
  4296  03CE  2BCF               	
  4297                           l62:	
  4298  03CF                     	
  4299                           l61:	
  4300  03CF                     	bcf	status, 5	;RP0=0, select bank0
  4301  03CF  1283               	bcf	status, 6	;RP1=0, select bank0
  4302  03D0  1303               	btfsc	(68/8),(68)&7	;volatile
  4303  03D1  1A08               	goto	u881
  4304  03D2  2BD4               	goto	u880
  4305  03D3  2BD5               u881:
  4306  03D4                     	goto	l61
  4307  03D4  2BCF               u880:
  4308  03D5                     	goto	l1584
  4309  03D5  2BE7               	
  4310                           l63:	
  4311  03D6                     	line	85
  4312                           ;lcdtest.c: 85:         switch(linha_atual){
  4313                           	goto	l1584
  4314  03D6  2BE7               	line	86
  4315                           ;lcdtest.c: 86:             case 1: return 'C';
  4316                           	
  4317                           l65:	
  4318  03D7                     	
  4319                           l1562:	
  4320  03D7                     	movlw	low(043h)
  4321  03D7  3043               	goto	l66
  4322  03D8  2CAE               	
  4323                           l1564:	
  4324  03D9                     	goto	l66
  4325  03D9  2CAE               	line	87
  4326                           ;lcdtest.c: 87:             case 2: return '1';
  4327                           	
  4328                           l67:	
  4329  03DA                     	
  4330                           l1566:	
  4331  03DA                     	movlw	low(031h)
  4332  03DA  3031               	goto	l66
  4333  03DB  2CAE               	
  4334                           l1568:	
  4335  03DC                     	goto	l66
  4336  03DC  2CAE               	line	88
  4337                           ;lcdtest.c: 88:             case 3: return '4';
  4338                           	
  4339                           l68:	
  4340  03DD                     	
  4341                           l1570:	
  4342  03DD                     	movlw	low(034h)
  4343  03DD  3034               	goto	l66
  4344  03DE  2CAE               	
  4345                           l1572:	
  4346  03DF                     	goto	l66
  4347  03DF  2CAE               	line	89
  4348                           ;lcdtest.c: 89:             case 4: return '7';
  4349                           	
  4350                           l69:	
  4351  03E0                     	
  4352                           l1574:	
  4353  03E0                     	movlw	low(037h)
  4354  03E0  3037               	goto	l66
  4355  03E1  2CAE               	
  4356                           l1576:	
  4357  03E2                     	goto	l66
  4358  03E2  2CAE               	line	90
  4359                           ;lcdtest.c: 90:             default:return '_';
  4360                           	
  4361                           l70:	
  4362  03E3                     	
  4363                           l1578:	
  4364  03E3                     	movlw	low(05Fh)
  4365  03E3  305F               	goto	l66
  4366  03E4  2CAE               	
  4367                           l1580:	
  4368  03E5                     	goto	l66
  4369  03E5  2CAE               	line	91
  4370                           	
  4371                           l1582:	
  4372  03E6                     ;lcdtest.c: 91:         }
  4373                           	goto	l1664
  4374  03E6  2CAC               	
  4375                           l64:	
  4376  03E7                     	
  4377                           l1584:	
  4378  03E7                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4379                           ; Switch size 1, requested type "space"
  4380                           ; Number of cases is 1, Range of values is 0 to 0
  4381                           ; switch strategies available:
  4382                           ; Name         Instructions Cycles
  4383                           ; simple_byte            4     3 (average)
  4384                           ; direct_byte           11     8 (fixed)
  4385                           ; jumptable            260     6 (fixed)
  4386                           ;	Chosen strategy is simple_byte
  4387                           
  4388                           	movf (_linha_atual+1),w
  4389  03E7  0849               	opt asmopt_push
  4390                           	opt asmopt_off
  4391                           	xorlw	0^0	; case 0
  4392  03E8  3A00               	skipnz
  4393  03E9  1903               	goto	l2184
  4394  03EA  2BEC               	goto	l1578
  4395  03EB  2BE3               	opt asmopt_pop
  4396                           	
  4397                           l2184:	
  4398  03EC                     ; Switch size 1, requested type "space"
  4399                           ; Number of cases is 4, Range of values is 1 to 4
  4400                           ; switch strategies available:
  4401                           ; Name         Instructions Cycles
  4402                           ; simple_byte           13     7 (average)
  4403                           ; direct_byte           23    11 (fixed)
  4404                           ; jumptable            263     9 (fixed)
  4405                           ;	Chosen strategy is simple_byte
  4406                           
  4407                           	movf (_linha_atual),w
  4408  03EC  0848               	opt asmopt_push
  4409                           	opt asmopt_off
  4410                           	xorlw	1^0	; case 1
  4411  03ED  3A01               	skipnz
  4412  03EE  1903               	goto	l1562
  4413  03EF  2BD7               	xorlw	2^1	; case 2
  4414  03F0  3A03               	skipnz
  4415  03F1  1903               	goto	l1566
  4416  03F2  2BDA               	xorlw	3^2	; case 3
  4417  03F3  3A01               	skipnz
  4418  03F4  1903               	goto	l1570
  4419  03F5  2BDD               	xorlw	4^3	; case 4
  4420  03F6  3A07               	skipnz
  4421  03F7  1903               	goto	l1574
  4422  03F8  2BE0               	goto	l1578
  4423  03F9  2BE3               	opt asmopt_pop
  4424                           
  4425                           	
  4426                           l71:	
  4427  03FA                     	line	92
  4428                           ;lcdtest.c: 92:     }else if(RD5 == 1)
  4429                           	goto	l1664
  4430  03FA  2CAC               	
  4431                           l60:	
  4432  03FB                     	btfss	(69/8),(69)&7	;volatile
  4433  03FB  1E88               	goto	u891
  4434  03FC  2BFE               	goto	u890
  4435  03FD  2BFF               u891:
  4436  03FE                     	goto	l73
  4437  03FE  2C35               u890:
  4438  03FF                     	line	94
  4439                           	
  4440                           l1586:	
  4441  03FF                     ;lcdtest.c: 93:     {;lcdtest.c: 94:         _delay((unsigned long)((100)*(4000000/4000.
                                 0)));
  4442                           	opt asmopt_push
  4443                           opt asmopt_off
  4444                           movlw	130
  4445  03FF  3082               movwf	((??__le_teclado+0)+0+1),f
  4446  0400  00F1               	movlw	221
  4447  0401  30DD               movwf	((??__le_teclado+0)+0),f
  4448  0402  00F0               	u1407:
  4449  0403                     decfsz	((??__le_teclado+0)+0),f
  4450  0403  0BF0               	goto	u1407
  4451  0404  2C03               	decfsz	((??__le_teclado+0)+0+1),f
  4452  0405  0BF1               	goto	u1407
  4453  0406  2C03               	nop2
  4454  0407  2C08               opt asmopt_pop
  4455                           
  4456                           	line	95
  4457                           ;lcdtest.c: 95:         while(RD5);
  4458                           	goto	l74
  4459  0408  2C09               	
  4460                           l75:	
  4461  0409                     	
  4462                           l74:	
  4463  0409                     	bcf	status, 5	;RP0=0, select bank0
  4464  0409  1283               	bcf	status, 6	;RP1=0, select bank0
  4465  040A  1303               	btfsc	(69/8),(69)&7	;volatile
  4466  040B  1A88               	goto	u901
  4467  040C  2C0E               	goto	u900
  4468  040D  2C0F               u901:
  4469  040E                     	goto	l74
  4470  040E  2C09               u900:
  4471  040F                     	goto	l1610
  4472  040F  2C21               	
  4473                           l76:	
  4474  0410                     	line	96
  4475                           ;lcdtest.c: 96:         switch(linha_atual){
  4476                           	goto	l1610
  4477  0410  2C21               	line	97
  4478                           ;lcdtest.c: 97:             case 1: return '0';
  4479                           	
  4480                           l78:	
  4481  0411                     	
  4482                           l1588:	
  4483  0411                     	movlw	low(030h)
  4484  0411  3030               	goto	l66
  4485  0412  2CAE               	
  4486                           l1590:	
  4487  0413                     	goto	l66
  4488  0413  2CAE               	line	98
  4489                           ;lcdtest.c: 98:             case 2: return '2';
  4490                           	
  4491                           l79:	
  4492  0414                     	
  4493                           l1592:	
  4494  0414                     	movlw	low(032h)
  4495  0414  3032               	goto	l66
  4496  0415  2CAE               	
  4497                           l1594:	
  4498  0416                     	goto	l66
  4499  0416  2CAE               	line	99
  4500                           ;lcdtest.c: 99:             case 3: return '5';
  4501                           	
  4502                           l80:	
  4503  0417                     	
  4504                           l1596:	
  4505  0417                     	movlw	low(035h)
  4506  0417  3035               	goto	l66
  4507  0418  2CAE               	
  4508                           l1598:	
  4509  0419                     	goto	l66
  4510  0419  2CAE               	line	100
  4511                           ;lcdtest.c: 100:             case 4: return '8';
  4512                           	
  4513                           l81:	
  4514  041A                     	
  4515                           l1600:	
  4516  041A                     	movlw	low(038h)
  4517  041A  3038               	goto	l66
  4518  041B  2CAE               	
  4519                           l1602:	
  4520  041C                     	goto	l66
  4521  041C  2CAE               	line	101
  4522                           ;lcdtest.c: 101:             default:return '_';
  4523                           	
  4524                           l82:	
  4525  041D                     	
  4526                           l1604:	
  4527  041D                     	movlw	low(05Fh)
  4528  041D  305F               	goto	l66
  4529  041E  2CAE               	
  4530                           l1606:	
  4531  041F                     	goto	l66
  4532  041F  2CAE               	line	102
  4533                           	
  4534                           l1608:	
  4535  0420                     ;lcdtest.c: 102:         }
  4536                           	goto	l1664
  4537  0420  2CAC               	
  4538                           l77:	
  4539  0421                     	
  4540                           l1610:	
  4541  0421                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4542                           ; Switch size 1, requested type "space"
  4543                           ; Number of cases is 1, Range of values is 0 to 0
  4544                           ; switch strategies available:
  4545                           ; Name         Instructions Cycles
  4546                           ; simple_byte            4     3 (average)
  4547                           ; direct_byte           11     8 (fixed)
  4548                           ; jumptable            260     6 (fixed)
  4549                           ;	Chosen strategy is simple_byte
  4550                           
  4551                           	movf (_linha_atual+1),w
  4552  0421  0849               	opt asmopt_push
  4553                           	opt asmopt_off
  4554                           	xorlw	0^0	; case 0
  4555  0422  3A00               	skipnz
  4556  0423  1903               	goto	l2186
  4557  0424  2C26               	goto	l1604
  4558  0425  2C1D               	opt asmopt_pop
  4559                           	
  4560                           l2186:	
  4561  0426                     ; Switch size 1, requested type "space"
  4562                           ; Number of cases is 4, Range of values is 1 to 4
  4563                           ; switch strategies available:
  4564                           ; Name         Instructions Cycles
  4565                           ; simple_byte           13     7 (average)
  4566                           ; direct_byte           23    11 (fixed)
  4567                           ; jumptable            263     9 (fixed)
  4568                           ;	Chosen strategy is simple_byte
  4569                           
  4570                           	movf (_linha_atual),w
  4571  0426  0848               	opt asmopt_push
  4572                           	opt asmopt_off
  4573                           	xorlw	1^0	; case 1
  4574  0427  3A01               	skipnz
  4575  0428  1903               	goto	l1588
  4576  0429  2C11               	xorlw	2^1	; case 2
  4577  042A  3A03               	skipnz
  4578  042B  1903               	goto	l1592
  4579  042C  2C14               	xorlw	3^2	; case 3
  4580  042D  3A01               	skipnz
  4581  042E  1903               	goto	l1596
  4582  042F  2C17               	xorlw	4^3	; case 4
  4583  0430  3A07               	skipnz
  4584  0431  1903               	goto	l1600
  4585  0432  2C1A               	goto	l1604
  4586  0433  2C1D               	opt asmopt_pop
  4587                           
  4588                           	
  4589                           l83:	
  4590  0434                     	line	103
  4591                           ;lcdtest.c: 103:     }else if(RD6 == 1)
  4592                           	goto	l1664
  4593  0434  2CAC               	
  4594                           l73:	
  4595  0435                     	btfss	(70/8),(70)&7	;volatile
  4596  0435  1F08               	goto	u911
  4597  0436  2C38               	goto	u910
  4598  0437  2C39               u911:
  4599  0438                     	goto	l85
  4600  0438  2C6F               u910:
  4601  0439                     	line	105
  4602                           	
  4603                           l1612:	
  4604  0439                     ;lcdtest.c: 104:     {;lcdtest.c: 105:         _delay((unsigned long)((100)*(4000000/400
                                 0.0)));
  4605                           	opt asmopt_push
  4606                           opt asmopt_off
  4607                           movlw	130
  4608  0439  3082               movwf	((??__le_teclado+0)+0+1),f
  4609  043A  00F1               	movlw	221
  4610  043B  30DD               movwf	((??__le_teclado+0)+0),f
  4611  043C  00F0               	u1417:
  4612  043D                     decfsz	((??__le_teclado+0)+0),f
  4613  043D  0BF0               	goto	u1417
  4614  043E  2C3D               	decfsz	((??__le_teclado+0)+0+1),f
  4615  043F  0BF1               	goto	u1417
  4616  0440  2C3D               	nop2
  4617  0441  2C42               opt asmopt_pop
  4618                           
  4619                           	line	106
  4620                           ;lcdtest.c: 106:         while(RD6);
  4621                           	goto	l86
  4622  0442  2C43               	
  4623                           l87:	
  4624  0443                     	
  4625                           l86:	
  4626  0443                     	bcf	status, 5	;RP0=0, select bank0
  4627  0443  1283               	bcf	status, 6	;RP1=0, select bank0
  4628  0444  1303               	btfsc	(70/8),(70)&7	;volatile
  4629  0445  1B08               	goto	u921
  4630  0446  2C48               	goto	u920
  4631  0447  2C49               u921:
  4632  0448                     	goto	l86
  4633  0448  2C43               u920:
  4634  0449                     	goto	l1636
  4635  0449  2C5B               	
  4636                           l88:	
  4637  044A                     	line	107
  4638                           ;lcdtest.c: 107:         switch(linha_atual){
  4639                           	goto	l1636
  4640  044A  2C5B               	line	108
  4641                           ;lcdtest.c: 108:             case 1: return '=';
  4642                           	
  4643                           l90:	
  4644  044B                     	
  4645                           l1614:	
  4646  044B                     	movlw	low(03Dh)
  4647  044B  303D               	goto	l66
  4648  044C  2CAE               	
  4649                           l1616:	
  4650  044D                     	goto	l66
  4651  044D  2CAE               	line	109
  4652                           ;lcdtest.c: 109:             case 2: return '3';
  4653                           	
  4654                           l91:	
  4655  044E                     	
  4656                           l1618:	
  4657  044E                     	movlw	low(033h)
  4658  044E  3033               	goto	l66
  4659  044F  2CAE               	
  4660                           l1620:	
  4661  0450                     	goto	l66
  4662  0450  2CAE               	line	110
  4663                           ;lcdtest.c: 110:             case 3: return '6';
  4664                           	
  4665                           l92:	
  4666  0451                     	
  4667                           l1622:	
  4668  0451                     	movlw	low(036h)
  4669  0451  3036               	goto	l66
  4670  0452  2CAE               	
  4671                           l1624:	
  4672  0453                     	goto	l66
  4673  0453  2CAE               	line	111
  4674                           ;lcdtest.c: 111:             case 4: return '9';
  4675                           	
  4676                           l93:	
  4677  0454                     	
  4678                           l1626:	
  4679  0454                     	movlw	low(039h)
  4680  0454  3039               	goto	l66
  4681  0455  2CAE               	
  4682                           l1628:	
  4683  0456                     	goto	l66
  4684  0456  2CAE               	line	112
  4685                           ;lcdtest.c: 112:             default:return '_';
  4686                           	
  4687                           l94:	
  4688  0457                     	
  4689                           l1630:	
  4690  0457                     	movlw	low(05Fh)
  4691  0457  305F               	goto	l66
  4692  0458  2CAE               	
  4693                           l1632:	
  4694  0459                     	goto	l66
  4695  0459  2CAE               	line	113
  4696                           	
  4697                           l1634:	
  4698  045A                     ;lcdtest.c: 113:         }
  4699                           	goto	l1664
  4700  045A  2CAC               	
  4701                           l89:	
  4702  045B                     	
  4703                           l1636:	
  4704  045B                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4705                           ; Switch size 1, requested type "space"
  4706                           ; Number of cases is 1, Range of values is 0 to 0
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte            4     3 (average)
  4710                           ; direct_byte           11     8 (fixed)
  4711                           ; jumptable            260     6 (fixed)
  4712                           ;	Chosen strategy is simple_byte
  4713                           
  4714                           	movf (_linha_atual+1),w
  4715  045B  0849               	opt asmopt_push
  4716                           	opt asmopt_off
  4717                           	xorlw	0^0	; case 0
  4718  045C  3A00               	skipnz
  4719  045D  1903               	goto	l2188
  4720  045E  2C60               	goto	l1630
  4721  045F  2C57               	opt asmopt_pop
  4722                           	
  4723                           l2188:	
  4724  0460                     ; Switch size 1, requested type "space"
  4725                           ; Number of cases is 4, Range of values is 1 to 4
  4726                           ; switch strategies available:
  4727                           ; Name         Instructions Cycles
  4728                           ; simple_byte           13     7 (average)
  4729                           ; direct_byte           23    11 (fixed)
  4730                           ; jumptable            263     9 (fixed)
  4731                           ;	Chosen strategy is simple_byte
  4732                           
  4733                           	movf (_linha_atual),w
  4734  0460  0848               	opt asmopt_push
  4735                           	opt asmopt_off
  4736                           	xorlw	1^0	; case 1
  4737  0461  3A01               	skipnz
  4738  0462  1903               	goto	l1614
  4739  0463  2C4B               	xorlw	2^1	; case 2
  4740  0464  3A03               	skipnz
  4741  0465  1903               	goto	l1618
  4742  0466  2C4E               	xorlw	3^2	; case 3
  4743  0467  3A01               	skipnz
  4744  0468  1903               	goto	l1622
  4745  0469  2C51               	xorlw	4^3	; case 4
  4746  046A  3A07               	skipnz
  4747  046B  1903               	goto	l1626
  4748  046C  2C54               	goto	l1630
  4749  046D  2C57               	opt asmopt_pop
  4750                           
  4751                           	
  4752                           l95:	
  4753  046E                     	line	114
  4754                           ;lcdtest.c: 114:     }else if(RD7 == 1)
  4755                           	goto	l1664
  4756  046E  2CAC               	
  4757                           l85:	
  4758  046F                     	btfss	(71/8),(71)&7	;volatile
  4759  046F  1F88               	goto	u931
  4760  0470  2C72               	goto	u930
  4761  0471  2C73               u931:
  4762  0472                     	goto	l1664
  4763  0472  2CAC               u930:
  4764  0473                     	line	116
  4765                           	
  4766                           l1638:	
  4767  0473                     ;lcdtest.c: 115:     {;lcdtest.c: 116:         _delay((unsigned long)((100)*(4000000/400
                                 0.0)));
  4768                           	opt asmopt_push
  4769                           opt asmopt_off
  4770                           movlw	130
  4771  0473  3082               movwf	((??__le_teclado+0)+0+1),f
  4772  0474  00F1               	movlw	221
  4773  0475  30DD               movwf	((??__le_teclado+0)+0),f
  4774  0476  00F0               	u1427:
  4775  0477                     decfsz	((??__le_teclado+0)+0),f
  4776  0477  0BF0               	goto	u1427
  4777  0478  2C77               	decfsz	((??__le_teclado+0)+0+1),f
  4778  0479  0BF1               	goto	u1427
  4779  047A  2C77               	nop2
  4780  047B  2C7C               opt asmopt_pop
  4781                           
  4782                           	line	117
  4783                           ;lcdtest.c: 117:         while(RD7);
  4784                           	goto	l98
  4785  047C  2C7D               	
  4786                           l99:	
  4787  047D                     	
  4788                           l98:	
  4789  047D                     	bcf	status, 5	;RP0=0, select bank0
  4790  047D  1283               	bcf	status, 6	;RP1=0, select bank0
  4791  047E  1303               	btfsc	(71/8),(71)&7	;volatile
  4792  047F  1B88               	goto	u941
  4793  0480  2C82               	goto	u940
  4794  0481  2C83               u941:
  4795  0482                     	goto	l98
  4796  0482  2C7D               u940:
  4797  0483                     	goto	l1662
  4798  0483  2C95               	
  4799                           l100:	
  4800  0484                     	line	118
  4801                           ;lcdtest.c: 118:         switch(linha_atual){
  4802                           	goto	l1662
  4803  0484  2C95               	line	119
  4804                           ;lcdtest.c: 119:             case 1: return '+';
  4805                           	
  4806                           l102:	
  4807  0485                     	
  4808                           l1640:	
  4809  0485                     	movlw	low(02Bh)
  4810  0485  302B               	goto	l66
  4811  0486  2CAE               	
  4812                           l1642:	
  4813  0487                     	goto	l66
  4814  0487  2CAE               	line	120
  4815                           ;lcdtest.c: 120:             case 2: return '-';
  4816                           	
  4817                           l103:	
  4818  0488                     	
  4819                           l1644:	
  4820  0488                     	movlw	low(02Dh)
  4821  0488  302D               	goto	l66
  4822  0489  2CAE               	
  4823                           l1646:	
  4824  048A                     	goto	l66
  4825  048A  2CAE               	line	121
  4826                           ;lcdtest.c: 121:             case 3: return 'x';
  4827                           	
  4828                           l104:	
  4829  048B                     	
  4830                           l1648:	
  4831  048B                     	movlw	low(078h)
  4832  048B  3078               	goto	l66
  4833  048C  2CAE               	
  4834                           l1650:	
  4835  048D                     	goto	l66
  4836  048D  2CAE               	line	122
  4837                           ;lcdtest.c: 122:             case 4: return '%';
  4838                           	
  4839                           l105:	
  4840  048E                     	
  4841                           l1652:	
  4842  048E                     	movlw	low(025h)
  4843  048E  3025               	goto	l66
  4844  048F  2CAE               	
  4845                           l1654:	
  4846  0490                     	goto	l66
  4847  0490  2CAE               	line	123
  4848                           ;lcdtest.c: 123:             default:return '_';
  4849                           	
  4850                           l106:	
  4851  0491                     	
  4852                           l1656:	
  4853  0491                     	movlw	low(05Fh)
  4854  0491  305F               	goto	l66
  4855  0492  2CAE               	
  4856                           l1658:	
  4857  0493                     	goto	l66
  4858  0493  2CAE               	line	124
  4859                           	
  4860                           l1660:	
  4861  0494                     ;lcdtest.c: 124:         }
  4862                           	goto	l1664
  4863  0494  2CAC               	
  4864                           l101:	
  4865  0495                     	
  4866                           l1662:	
  4867  0495                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4868                           ; Switch size 1, requested type "space"
  4869                           ; Number of cases is 1, Range of values is 0 to 0
  4870                           ; switch strategies available:
  4871                           ; Name         Instructions Cycles
  4872                           ; simple_byte            4     3 (average)
  4873                           ; direct_byte           11     8 (fixed)
  4874                           ; jumptable            260     6 (fixed)
  4875                           ;	Chosen strategy is simple_byte
  4876                           
  4877                           	movf (_linha_atual+1),w
  4878  0495  0849               	opt asmopt_push
  4879                           	opt asmopt_off
  4880                           	xorlw	0^0	; case 0
  4881  0496  3A00               	skipnz
  4882  0497  1903               	goto	l2190
  4883  0498  2C9A               	goto	l1656
  4884  0499  2C91               	opt asmopt_pop
  4885                           	
  4886                           l2190:	
  4887  049A                     ; Switch size 1, requested type "space"
  4888                           ; Number of cases is 4, Range of values is 1 to 4
  4889                           ; switch strategies available:
  4890                           ; Name         Instructions Cycles
  4891                           ; simple_byte           13     7 (average)
  4892                           ; direct_byte           23    11 (fixed)
  4893                           ; jumptable            263     9 (fixed)
  4894                           ;	Chosen strategy is simple_byte
  4895                           
  4896                           	movf (_linha_atual),w
  4897  049A  0848               	opt asmopt_push
  4898                           	opt asmopt_off
  4899                           	xorlw	1^0	; case 1
  4900  049B  3A01               	skipnz
  4901  049C  1903               	goto	l1640
  4902  049D  2C85               	xorlw	2^1	; case 2
  4903  049E  3A03               	skipnz
  4904  049F  1903               	goto	l1644
  4905  04A0  2C88               	xorlw	3^2	; case 3
  4906  04A1  3A01               	skipnz
  4907  04A2  1903               	goto	l1648
  4908  04A3  2C8B               	xorlw	4^3	; case 4
  4909  04A4  3A07               	skipnz
  4910  04A5  1903               	goto	l1652
  4911  04A6  2C8E               	goto	l1656
  4912  04A7  2C91               	opt asmopt_pop
  4913                           
  4914                           	
  4915                           l107:	
  4916  04A8                     	goto	l1664
  4917  04A8  2CAC               	line	125
  4918                           ;lcdtest.c: 125:     }
  4919                           	
  4920                           l97:	
  4921  04A9                     	goto	l1664
  4922  04A9  2CAC               	
  4923                           l96:	
  4924  04AA                     	goto	l1664
  4925  04AA  2CAC               	
  4926                           l84:	
  4927  04AB                     	goto	l1664
  4928  04AB  2CAC               	
  4929                           l72:	
  4930  04AC                     	line	126
  4931                           	
  4932                           l1664:	
  4933  04AC                     ;lcdtest.c: 126:     return '_';
  4934                           	movlw	low(05Fh)
  4935  04AC  305F               	goto	l66
  4936  04AD  2CAE               	
  4937                           l1666:	
  4938  04AE                     	line	127
  4939                           	
  4940                           l66:	
  4941  04AE                     	return
  4942  04AE  0008               	opt stack 0
  4943                           GLOBAL	__end_of__le_teclado
  4944                           	__end_of__le_teclado:
  4945  04AF                     	signat	__le_teclado,89
  4946                           	global	__muda_linha
  4947                           
  4948 ;; *************** function __muda_linha *****************
  4949 ;; Defined at:
  4950 ;;		line 43 in file "lcdtest.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4964 ;;      Params:         0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		__le_teclado
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4977                           	line	43
  4978                           global __ptext13
  4979                           __ptext13:	;psect for function __muda_linha
  4980  00C1                     psect	text13
  4981                           	file	"lcdtest.c"
  4982                           	line	43
  4983                           	global	__size_of__muda_linha
  4984                           	__size_of__muda_linha	equ	__end_of__muda_linha-__muda_linha
  4985  003D                     	
  4986                           __muda_linha:	
  4987  00C1                     ;incstack = 0
  4988                           	opt	stack 6
  4989                           ; Regs used in __muda_linha: [wreg+status,2+status,0]
  4990                           	line	47
  4991                           	
  4992                           l1486:	
  4993  00C1                     ;lcdtest.c: 47:     if(linha_atual == 1)
  4994                           	bcf	status, 5	;RP0=0, select bank0
  4995  00C1  1283               	bcf	status, 6	;RP1=0, select bank0
  4996  00C2  1303               		decf	((_linha_atual)),w
  4997  00C3  0348               iorwf	((_linha_atual+1)),w
  4998  00C4  0449               	btfss	status,2
  4999  00C5  1D03               	goto	u701
  5000  00C6  28C8               	goto	u700
  5001  00C7  28C9               u701:
  5002  00C8                     	goto	l1492
  5003  00C8  28D2               u700:
  5004  00C9                     	line	49
  5005                           	
  5006                           l1488:	
  5007  00C9                     ;lcdtest.c: 48:     {;lcdtest.c: 49:         RD0 = 0;
  5008                           	bcf	(64/8),(64)&7	;volatile
  5009  00C9  1008               	line	50
  5010                           ;lcdtest.c: 50:         RD1 = 1;
  5011                           	bsf	(65/8),(65)&7	;volatile
  5012  00CA  1488               	line	51
  5013                           ;lcdtest.c: 51:         RD2 = 0;
  5014                           	bcf	(66/8),(66)&7	;volatile
  5015  00CB  1108               	line	52
  5016                           ;lcdtest.c: 52:         RD3 = 0;
  5017                           	bcf	(67/8),(67)&7	;volatile
  5018  00CC  1188               	line	53
  5019                           	
  5020                           l1490:	
  5021  00CD                     ;lcdtest.c: 53:         linha_atual = 2;
  5022                           	movlw	02h
  5023  00CD  3002               	movwf	(_linha_atual)
  5024  00CE  00C8               	movlw	0
  5025  00CF  3000               	movwf	((_linha_atual))+1
  5026  00D0  00C9               	line	54
  5027                           ;lcdtest.c: 54:     } else if(linha_atual == 2)
  5028                           	goto	l57
  5029  00D1  28FD               	
  5030                           l51:	
  5031  00D2                     	
  5032                           l1492:	
  5033  00D2                     		movlw	2
  5034  00D2  3002               	xorwf	((_linha_atual)),w
  5035  00D3  0648               iorwf	((_linha_atual+1)),w
  5036  00D4  0449               	btfss	status,2
  5037  00D5  1D03               	goto	u711
  5038  00D6  28D8               	goto	u710
  5039  00D7  28D9               u711:
  5040  00D8                     	goto	l1498
  5041  00D8  28E2               u710:
  5042  00D9                     	line	56
  5043                           	
  5044                           l1494:	
  5045  00D9                     ;lcdtest.c: 55:     {;lcdtest.c: 56:         RD0 = 0;
  5046                           	bcf	(64/8),(64)&7	;volatile
  5047  00D9  1008               	line	57
  5048                           ;lcdtest.c: 57:         RD1 = 0;
  5049                           	bcf	(65/8),(65)&7	;volatile
  5050  00DA  1088               	line	58
  5051                           ;lcdtest.c: 58:         RD2 = 1;
  5052                           	bsf	(66/8),(66)&7	;volatile
  5053  00DB  1508               	line	59
  5054                           ;lcdtest.c: 59:         RD3 = 0;
  5055                           	bcf	(67/8),(67)&7	;volatile
  5056  00DC  1188               	line	60
  5057                           	
  5058                           l1496:	
  5059  00DD                     ;lcdtest.c: 60:         linha_atual = 3;
  5060                           	movlw	03h
  5061  00DD  3003               	movwf	(_linha_atual)
  5062  00DE  00C8               	movlw	0
  5063  00DF  3000               	movwf	((_linha_atual))+1
  5064  00E0  00C9               	line	61
  5065                           ;lcdtest.c: 61:     } else if(linha_atual == 3)
  5066                           	goto	l57
  5067  00E1  28FD               	
  5068                           l53:	
  5069  00E2                     	
  5070                           l1498:	
  5071  00E2                     		movlw	3
  5072  00E2  3003               	xorwf	((_linha_atual)),w
  5073  00E3  0648               iorwf	((_linha_atual+1)),w
  5074  00E4  0449               	btfss	status,2
  5075  00E5  1D03               	goto	u721
  5076  00E6  28E8               	goto	u720
  5077  00E7  28E9               u721:
  5078  00E8                     	goto	l55
  5079  00E8  28F2               u720:
  5080  00E9                     	line	63
  5081                           	
  5082                           l1500:	
  5083  00E9                     ;lcdtest.c: 62:     {;lcdtest.c: 63:         RD0 = 0;
  5084                           	bcf	(64/8),(64)&7	;volatile
  5085  00E9  1008               	line	64
  5086                           ;lcdtest.c: 64:         RD1 = 0;
  5087                           	bcf	(65/8),(65)&7	;volatile
  5088  00EA  1088               	line	65
  5089                           ;lcdtest.c: 65:         RD2 = 0;
  5090                           	bcf	(66/8),(66)&7	;volatile
  5091  00EB  1108               	line	66
  5092                           ;lcdtest.c: 66:         RD3 = 1;
  5093                           	bsf	(67/8),(67)&7	;volatile
  5094  00EC  1588               	line	67
  5095                           	
  5096                           l1502:	
  5097  00ED                     ;lcdtest.c: 67:         linha_atual = 4;
  5098                           	movlw	04h
  5099  00ED  3004               	movwf	(_linha_atual)
  5100  00EE  00C8               	movlw	0
  5101  00EF  3000               	movwf	((_linha_atual))+1
  5102  00F0  00C9               	line	68
  5103                           ;lcdtest.c: 68:     } else
  5104                           	goto	l57
  5105  00F1  28FD               	
  5106                           l55:	
  5107  00F2                     	line	70
  5108                           ;lcdtest.c: 69:     {;lcdtest.c: 70:         RD0 = 1;
  5109                           	bsf	(64/8),(64)&7	;volatile
  5110  00F2  1408               	line	71
  5111                           ;lcdtest.c: 71:         RD1 = 0;
  5112                           	bcf	(65/8),(65)&7	;volatile
  5113  00F3  1088               	line	72
  5114                           ;lcdtest.c: 72:         RD2 = 0;
  5115                           	bcf	(66/8),(66)&7	;volatile
  5116  00F4  1108               	line	73
  5117                           ;lcdtest.c: 73:         RD3 = 0;
  5118                           	bcf	(67/8),(67)&7	;volatile
  5119  00F5  1188               	line	74
  5120                           	
  5121                           l1504:	
  5122  00F6                     ;lcdtest.c: 74:         linha_atual = 1;
  5123                           	movlw	01h
  5124  00F6  3001               	movwf	(_linha_atual)
  5125  00F7  00C8               	movlw	0
  5126  00F8  3000               	movwf	((_linha_atual))+1
  5127  00F9  00C9               	goto	l57
  5128  00FA  28FD               	line	75
  5129                           ;lcdtest.c: 75:     }
  5130                           	
  5131                           l56:	
  5132  00FB                     	goto	l57
  5133  00FB  28FD               	
  5134                           l54:	
  5135  00FC                     	goto	l57
  5136  00FC  28FD               	
  5137                           l52:	
  5138  00FD                     	line	76
  5139                           	
  5140                           l57:	
  5141  00FD                     	return
  5142  00FD  0008               	opt stack 0
  5143                           GLOBAL	__end_of__muda_linha
  5144                           	__end_of__muda_linha:
  5145  00FE                     	signat	__muda_linha,89
  5146                           	global	___wmul
  5147                           
  5148 ;; *************** function ___wmul *****************
  5149 ;; Defined at:
  5150 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  multiplier      2    0[COMMON] unsigned int 
  5153 ;;  multiplicand    2    2[COMMON] unsigned int 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  product         2    4[COMMON] unsigned int 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  2    0[COMMON] unsigned int 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5165 ;;      Params:         4       0       0       0       0
  5166 ;;      Locals:         2       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0
  5168 ;;      Totals:         6       0       0       0       0
  5169 ;;Total ram usage:        6 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_main
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  5178                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5179                           	line	15
  5180                           global __ptext14
  5181                           __ptext14:	;psect for function ___wmul
  5182  0FD8                     psect	text14
  5183                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5184                           	line	15
  5185                           	global	__size_of___wmul
  5186                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  5187  0028                     	
  5188                           ___wmul:	
  5189  0FD8                     ;incstack = 0
  5190                           	opt	stack 7
  5191                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5192                           	line	43
  5193                           	
  5194                           l1794:	
  5195  0FD8                     	clrf	(___wmul@product)
  5196  0FD8  01F4               	clrf	(___wmul@product+1)
  5197  0FD9  01F5               	goto	l1796
  5198  0FDA  2FDB               	line	44
  5199                           	
  5200                           l324:	
  5201  0FDB                     	line	45
  5202                           	
  5203                           l1796:	
  5204  0FDB                     	btfss	(___wmul@multiplier),(0)&7
  5205  0FDB  1C70               	goto	u1061
  5206  0FDC  2FDE               	goto	u1060
  5207  0FDD  2FDF               u1061:
  5208  0FDE                     	goto	l325
  5209  0FDE  2FE5               u1060:
  5210  0FDF                     	line	46
  5211                           	
  5212                           l1798:	
  5213  0FDF                     	movf	(___wmul@multiplicand),w
  5214  0FDF  0872               	addwf	(___wmul@product),f
  5215  0FE0  07F4               	skipnc
  5216  0FE1  1803               	incf	(___wmul@product+1),f
  5217  0FE2  0AF5               	movf	(___wmul@multiplicand+1),w
  5218  0FE3  0873               	addwf	(___wmul@product+1),f
  5219  0FE4  07F5               	
  5220                           l325:	
  5221  0FE5                     	line	47
  5222                           	movlw	01h
  5223  0FE5  3001               	
  5224                           u1075:
  5225  0FE6                     	clrc
  5226  0FE6  1003               	rlf	(___wmul@multiplicand),f
  5227  0FE7  0DF2               	rlf	(___wmul@multiplicand+1),f
  5228  0FE8  0DF3               	addlw	-1
  5229  0FE9  3EFF               	skipz
  5230  0FEA  1D03               	goto	u1075
  5231  0FEB  2FE6               	line	48
  5232                           	
  5233                           l1800:	
  5234  0FEC                     	movlw	01h
  5235  0FEC  3001               	
  5236                           u1085:
  5237  0FED                     	clrc
  5238  0FED  1003               	rrf	(___wmul@multiplier+1),f
  5239  0FEE  0CF1               	rrf	(___wmul@multiplier),f
  5240  0FEF  0CF0               	addlw	-1
  5241  0FF0  3EFF               	skipz
  5242  0FF1  1D03               	goto	u1085
  5243  0FF2  2FED               	line	49
  5244                           	
  5245                           l1802:	
  5246  0FF3                     	movf	((___wmul@multiplier)),w
  5247  0FF3  0870               iorwf	((___wmul@multiplier+1)),w
  5248  0FF4  0471               	btfss	status,2
  5249  0FF5  1D03               	goto	u1091
  5250  0FF6  2FF8               	goto	u1090
  5251  0FF7  2FF9               u1091:
  5252  0FF8                     	goto	l1796
  5253  0FF8  2FDB               u1090:
  5254  0FF9                     	goto	l1804
  5255  0FF9  2FFA               	
  5256                           l326:	
  5257  0FFA                     	line	52
  5258                           	
  5259                           l1804:	
  5260  0FFA                     	movf	(___wmul@product+1),w
  5261  0FFA  0875               	movwf	(?___wmul+1)
  5262  0FFB  00F1               	movf	(___wmul@product),w
  5263  0FFC  0874               	movwf	(?___wmul)
  5264  0FFD  00F0               	goto	l327
  5265  0FFE  2FFF               	
  5266                           l1806:	
  5267  0FFF                     	line	53
  5268                           	
  5269                           l327:	
  5270  0FFF                     	return
  5271  0FFF  0008               	opt stack 0
  5272                           GLOBAL	__end_of___wmul
  5273                           	__end_of___wmul:
  5274  1000                     	signat	___wmul,8314
  5275                           	global	___awdiv
  5276                           
  5277 ;; *************** function ___awdiv *****************
  5278 ;; Defined at:
  5279 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  divisor         2    0[COMMON] int 
  5282 ;;  dividend        2    2[COMMON] int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  quotient        2    7[COMMON] int 
  5285 ;;  sign            1    6[COMMON] unsigned char 
  5286 ;;  counter         1    5[COMMON] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  2    0[COMMON] int 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5296 ;;      Params:         4       0       0       0       0
  5297 ;;      Locals:         4       0       0       0       0
  5298 ;;      Temps:          1       0       0       0       0
  5299 ;;      Totals:         9       0       0       0       0
  5300 ;;Total ram usage:        9 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_main
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  5309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5310                           	line	5
  5311                           global __ptext15
  5312                           __ptext15:	;psect for function ___awdiv
  5313  0226                     psect	text15
  5314                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5315                           	line	5
  5316                           	global	__size_of___awdiv
  5317                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5318  0071                     	
  5319                           ___awdiv:	
  5320  0226                     ;incstack = 0
  5321                           	opt	stack 7
  5322                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5323                           	line	13
  5324                           	
  5325                           l1808:	
  5326  0226                     	clrf	(___awdiv@sign)
  5327  0226  01F6               	line	14
  5328                           	
  5329                           l1810:	
  5330  0227                     	btfss	(___awdiv@divisor+1),7
  5331  0227  1FF1               	goto	u1101
  5332  0228  2A2A               	goto	u1100
  5333  0229  2A2B               u1101:
  5334  022A                     	goto	l1816
  5335  022A  2A33               u1100:
  5336  022B                     	line	15
  5337                           	
  5338                           l1812:	
  5339  022B                     	comf	(___awdiv@divisor),f
  5340  022B  09F0               	comf	(___awdiv@divisor+1),f
  5341  022C  09F1               	incf	(___awdiv@divisor),f
  5342  022D  0AF0               	skipnz
  5343  022E  1903               	incf	(___awdiv@divisor+1),f
  5344  022F  0AF1               	line	16
  5345                           	
  5346                           l1814:	
  5347  0230                     	clrf	(___awdiv@sign)
  5348  0230  01F6               	incf	(___awdiv@sign),f
  5349  0231  0AF6               	goto	l1816
  5350  0232  2A33               	line	17
  5351                           	
  5352                           l468:	
  5353  0233                     	line	18
  5354                           	
  5355                           l1816:	
  5356  0233                     	btfss	(___awdiv@dividend+1),7
  5357  0233  1FF3               	goto	u1111
  5358  0234  2A36               	goto	u1110
  5359  0235  2A37               u1111:
  5360  0236                     	goto	l1822
  5361  0236  2A41               u1110:
  5362  0237                     	line	19
  5363                           	
  5364                           l1818:	
  5365  0237                     	comf	(___awdiv@dividend),f
  5366  0237  09F2               	comf	(___awdiv@dividend+1),f
  5367  0238  09F3               	incf	(___awdiv@dividend),f
  5368  0239  0AF2               	skipnz
  5369  023A  1903               	incf	(___awdiv@dividend+1),f
  5370  023B  0AF3               	line	20
  5371                           	
  5372                           l1820:	
  5373  023C                     	movlw	low(01h)
  5374  023C  3001               	movwf	(??___awdiv+0)+0
  5375  023D  00F4               	movf	(??___awdiv+0)+0,w
  5376  023E  0874               	xorwf	(___awdiv@sign),f
  5377  023F  06F6               	goto	l1822
  5378  0240  2A41               	line	21
  5379                           	
  5380                           l469:	
  5381  0241                     	line	22
  5382                           	
  5383                           l1822:	
  5384  0241                     	clrf	(___awdiv@quotient)
  5385  0241  01F7               	clrf	(___awdiv@quotient+1)
  5386  0242  01F8               	line	23
  5387                           	
  5388                           l1824:	
  5389  0243                     	movf	((___awdiv@divisor)),w
  5390  0243  0870               iorwf	((___awdiv@divisor+1)),w
  5391  0244  0471               	btfsc	status,2
  5392  0245  1903               	goto	u1121
  5393  0246  2A48               	goto	u1120
  5394  0247  2A49               u1121:
  5395  0248                     	goto	l1844
  5396  0248  2A86               u1120:
  5397  0249                     	line	24
  5398                           	
  5399                           l1826:	
  5400  0249                     	clrf	(___awdiv@counter)
  5401  0249  01F5               	incf	(___awdiv@counter),f
  5402  024A  0AF5               	line	25
  5403                           	goto	l1832
  5404  024B  2A58               	
  5405                           l472:	
  5406  024C                     	line	26
  5407                           	
  5408                           l1828:	
  5409  024C                     	movlw	01h
  5410  024C  3001               	
  5411                           u1135:
  5412  024D                     	clrc
  5413  024D  1003               	rlf	(___awdiv@divisor),f
  5414  024E  0DF0               	rlf	(___awdiv@divisor+1),f
  5415  024F  0DF1               	addlw	-1
  5416  0250  3EFF               	skipz
  5417  0251  1D03               	goto	u1135
  5418  0252  2A4D               	line	27
  5419                           	
  5420                           l1830:	
  5421  0253                     	movlw	low(01h)
  5422  0253  3001               	movwf	(??___awdiv+0)+0
  5423  0254  00F4               	movf	(??___awdiv+0)+0,w
  5424  0255  0874               	addwf	(___awdiv@counter),f
  5425  0256  07F5               	goto	l1832
  5426  0257  2A58               	line	28
  5427                           	
  5428                           l471:	
  5429  0258                     	line	25
  5430                           	
  5431                           l1832:	
  5432  0258                     	btfss	(___awdiv@divisor+1),(15)&7
  5433  0258  1FF1               	goto	u1141
  5434  0259  2A5B               	goto	u1140
  5435  025A  2A5C               u1141:
  5436  025B                     	goto	l1828
  5437  025B  2A4C               u1140:
  5438  025C                     	goto	l1834
  5439  025C  2A5E               	
  5440                           l473:	
  5441  025D                     	goto	l1834
  5442  025D  2A5E               	line	29
  5443                           	
  5444                           l474:	
  5445  025E                     	line	30
  5446                           	
  5447                           l1834:	
  5448  025E                     	movlw	01h
  5449  025E  3001               	
  5450                           u1155:
  5451  025F                     	clrc
  5452  025F  1003               	rlf	(___awdiv@quotient),f
  5453  0260  0DF7               	rlf	(___awdiv@quotient+1),f
  5454  0261  0DF8               	addlw	-1
  5455  0262  3EFF               	skipz
  5456  0263  1D03               	goto	u1155
  5457  0264  2A5F               	line	31
  5458                           	movf	(___awdiv@divisor+1),w
  5459  0265  0871               	subwf	(___awdiv@dividend+1),w
  5460  0266  0273               	skipz
  5461  0267  1D03               	goto	u1165
  5462  0268  2A6B               	movf	(___awdiv@divisor),w
  5463  0269  0870               	subwf	(___awdiv@dividend),w
  5464  026A  0272               u1165:
  5465  026B                     	skipc
  5466  026B  1C03               	goto	u1161
  5467  026C  2A6E               	goto	u1160
  5468  026D  2A6F               u1161:
  5469  026E                     	goto	l1840
  5470  026E  2A77               u1160:
  5471  026F                     	line	32
  5472                           	
  5473                           l1836:	
  5474  026F                     	movf	(___awdiv@divisor),w
  5475  026F  0870               	subwf	(___awdiv@dividend),f
  5476  0270  02F2               	movf	(___awdiv@divisor+1),w
  5477  0271  0871               	skipc
  5478  0272  1C03               	decf	(___awdiv@dividend+1),f
  5479  0273  03F3               	subwf	(___awdiv@dividend+1),f
  5480  0274  02F3               	line	33
  5481                           	
  5482                           l1838:	
  5483  0275                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5484  0275  1477               	goto	l1840
  5485  0276  2A77               	line	34
  5486                           	
  5487                           l475:	
  5488  0277                     	line	35
  5489                           	
  5490                           l1840:	
  5491  0277                     	movlw	01h
  5492  0277  3001               	
  5493                           u1175:
  5494  0278                     	clrc
  5495  0278  1003               	rrf	(___awdiv@divisor+1),f
  5496  0279  0CF1               	rrf	(___awdiv@divisor),f
  5497  027A  0CF0               	addlw	-1
  5498  027B  3EFF               	skipz
  5499  027C  1D03               	goto	u1175
  5500  027D  2A78               	line	36
  5501                           	
  5502                           l1842:	
  5503  027E                     	movlw	01h
  5504  027E  3001               	subwf	(___awdiv@counter),f
  5505  027F  02F5               	btfss	status,2
  5506  0280  1D03               	goto	u1181
  5507  0281  2A83               	goto	u1180
  5508  0282  2A84               u1181:
  5509  0283                     	goto	l1834
  5510  0283  2A5E               u1180:
  5511  0284                     	goto	l1844
  5512  0284  2A86               	
  5513                           l476:	
  5514  0285                     	goto	l1844
  5515  0285  2A86               	line	37
  5516                           	
  5517                           l470:	
  5518  0286                     	line	38
  5519                           	
  5520                           l1844:	
  5521  0286                     	movf	((___awdiv@sign)),w
  5522  0286  0876               	btfsc	status,2
  5523  0287  1903               	goto	u1191
  5524  0288  2A8A               	goto	u1190
  5525  0289  2A8B               u1191:
  5526  028A                     	goto	l1848
  5527  028A  2A91               u1190:
  5528  028B                     	line	39
  5529                           	
  5530                           l1846:	
  5531  028B                     	comf	(___awdiv@quotient),f
  5532  028B  09F7               	comf	(___awdiv@quotient+1),f
  5533  028C  09F8               	incf	(___awdiv@quotient),f
  5534  028D  0AF7               	skipnz
  5535  028E  1903               	incf	(___awdiv@quotient+1),f
  5536  028F  0AF8               	goto	l1848
  5537  0290  2A91               	
  5538                           l477:	
  5539  0291                     	line	40
  5540                           	
  5541                           l1848:	
  5542  0291                     	movf	(___awdiv@quotient+1),w
  5543  0291  0878               	movwf	(?___awdiv+1)
  5544  0292  00F1               	movf	(___awdiv@quotient),w
  5545  0293  0877               	movwf	(?___awdiv)
  5546  0294  00F0               	goto	l478
  5547  0295  2A96               	
  5548                           l1850:	
  5549  0296                     	line	41
  5550                           	
  5551                           l478:	
  5552  0296                     	return
  5553  0296  0008               	opt stack 0
  5554                           GLOBAL	__end_of___awdiv
  5555                           	__end_of___awdiv:
  5556  0297                     	signat	___awdiv,8314
  5557                           global	___latbits
  5558                           ___latbits	equ	2
  5559  0002                     	global	btemp
  5560                           	btemp set 07Eh
  5561  007E                     
  5562                           	DABS	1,126,2	;btemp
  5563                           	global	wtemp0
  5564                           	wtemp0 set btemp+0
  5565  007E                     	end


Data Sizes:
    Strings     9
    Constant    10
    Data        13
    BSS         88
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      60
    BANK1            80      0      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 75
		 -> buffer(BANK1[75]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    escreve@str	PTR unsigned char  size(2) Largest target is 75
		 -> buffer(BANK1[75]), STR_1(CODE[6]), 

    lcd_init@lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd_init@lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd_init@lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd_init@lcd_pins	PTR struct . size(1) Largest target is 12
		 -> lcd_pins(BANK0[12]), 

    port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTC(SFR0[1]), 

    port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTC(SFR0[1]), 

    port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTC(SFR0[1]), 

    muda_pin@_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTC(SFR0[1]), 

    S36$port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S36$port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S36$port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_escreve
    _main->_lcd_init
    _main->_limpa
    _main->_usa_caractere
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_nibble
    _byte->_nibble
    _nibble->_muda_pin
    _enable->_muda_pin

Critical Paths under _main in BANK0

    _main->_sprintf
    _usa_caractere->_byte
    _limpa->_byte
    _lcd_init->_byte
    _escreve->_byte

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   38705
                                             13 BANK0      3     3      0
                            ___awdiv
                             ___wmul
                        __le_teclado
                            _escreve
                           _lcd_init
                              _limpa
                            _sprintf
                      _usa_caractere
 ---------------------------------------------------------------------------------
 (1) _usa_caractere                                        4     2      2    9236
                                             12 COMMON     2     0      2
                                              6 BANK0      2     2      0
                               _byte
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _limpa                                                2     2      0    7628
                                             12 COMMON     2     2      0
                               _byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0   11587
                                             12 COMMON     2     2      0
                                              6 BANK0      1     1      0
                               _byte
                             _enable
                             _nibble
 ---------------------------------------------------------------------------------
 (1) _escreve                                              5     2      3    8043
                                             12 COMMON     2     2      0
                                              6 BANK0      3     0      3
                               _byte
 ---------------------------------------------------------------------------------
 (2) _byte                                                 6     3      3    7628
                                              0 BANK0      6     3      3
                             _enable
                           _muda_pin
                             _nibble
 ---------------------------------------------------------------------------------
 (3) _nibble                                               4     2      2    2022
                                              8 COMMON     4     2      2
                           _muda_pin
 ---------------------------------------------------------------------------------
 (3) _enable                                               2     2      0    1706
                                              8 COMMON     2     2      0
                           _muda_pin
 ---------------------------------------------------------------------------------
 (4) _muda_pin                                             8     2      6    1706
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) __le_teclado                                          2     2      0       0
                                              0 COMMON     2     2      0
                        __muda_linha
 ---------------------------------------------------------------------------------
 (2) __muda_linha                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
   __le_teclado
     __muda_linha
   _escreve
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin
   _lcd_init
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin
     _enable
       _muda_pin
     _nibble
       _muda_pin
   _limpa
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _usa_caractere
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      95      12        0.0%
ABS                  0      0      95       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon May 08 15:49:27 2023

                       pc 0002                        _D4 002C                        _D5 002A  
                      _D6 0028                        _D7 0026                        l51 00D2  
                      l52 00FD                        l60 03FB                        l53 00E2  
                      l61 03CF                        l54 00FC                        l70 03E3  
                      l62 03CF                        l55 00F2                        l71 03FA  
                      l63 03D6                        l56 00FB                        l72 04AC  
                      l80 0417                        l64 03E7                        l57 00FD  
                      l81 041A                        l73 0435                        l65 03D7  
                      l90 044B                        l82 041D                        l74 0409  
                      l66 04AE                        l91 044E                        l83 0434  
                      l75 0409                        l67 03DA                        l84 04AB  
                      l92 0451                        l76 0410                        l68 03DD  
                      _EN 002E                        l93 0454                        l85 046F  
                      l77 0421                        l69 03E0                        l94 0457  
                      l86 0443                        l78 0411                        l95 046E  
                      l87 0443                        l79 0414                        l96 04AA  
                      l88 044A                        l97 04A9                        l89 045B  
                      l98 047D                        l99 047D                        _RS 0030  
            ___awdiv@sign 0076                        fsr 0004       ___wmul@multiplicand 0072  
                     l100 0484                       l101 0495                       l102 0485  
                     l103 0488                       l104 048B                       l105 048E  
                     l106 0491                       l210 00B1                       l130 06D0  
                     l107 04A8                       l211 00C0                       l131 06EF  
                     l140 07D9                       l132 07C2                       l124 05EE  
                     l141 07DA                       l133 078A                       l125 0673  
                     l302 0595                       l310 04ED                       l142 07DB  
                     l134 06F7                       l126 063E                       l311 04CE  
                     l303 04B7                       l143 07DB                       l135 079D  
                     l127 0672                       l320 05A8                       l312 0507  
                     l304 04C9                       l136 0714                       l128 0692  
                     l321 05AE                       l313 0511                       l305 04D0  
                     l209 00A2                       l137 0738                       l129 06B1  
                     l314 0539                       l306 04CB                       l138 0760  
                     l171 008B                       l307 05A9                       l315 052E  
                     l139 0788                       l324 0FDB                       l180 03B9  
                     l316 054B                       l308 04CC                       l325 0FE5  
                     l317 058A                       l309 04CD                       l326 0FFA  
                     l166 0042                       l174 0309                       l190 0225  
                     l318 0550                       l327 0FFF                       l167 0056  
                     l191 0225                       l183 0FD7                       l319 0594  
                     l168 0056                       l600 0139                       l177 0183  
                     l601 0113                       l186 01E5                       l602 0107  
                     l187 01F5                       l603 0118                       l188 0214  
                     l604 0119                       l189 01F6                       l605 012A  
                     l470 0286                       l606 0138                       l471 0258  
                     l607 013E                       l472 024C                       l473 025D  
                     l474 025E                       l475 0277                       l476 0285  
                     l468 0233                       l477 0291                       l469 0241  
                     l478 0296                       l590 01C9                       l591 019B  
                     l592 018F                       l593 01A0                       l594 01A1  
                     l595 01BA                       l596 01C8                       l597 01CE  
                     _RD0 0040                       _RD1 0041                       _RD2 0042  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u700 00C9  
                     u701 00C8                       u710 00D9                       u711 00D8  
                     u720 00E9                       u800 01C7                       u721 00E8  
                     u801 01C6                       u810 0104                       u811 0103  
                     u900 040F                       u740 018C                       u901 040E  
                     u741 018B                       u910 0439                       u670 002F  
                     u830 0117                       u911 0438                       u671 002E  
                     u735 0159                       u831 0116                       u920 0449  
                     u760 019F                       u840 0123                       u921 0448  
                     u761 019E                       u841 0122                       u825 0108  
                     u930 0473                       u931 0472                       u755 0190  
                     u940 0483                       u684 0035                       u780 01B2  
                     u860 0137                       u941 0482                       u685 0033  
                     u781 01B1                       u861 0136                       u845 011F  
                     u870 03C5                       u694 0048                       u950 01D5  
                     u871 03C4                       u695 0046                       u951 01D4  
                     u775 01A2                       u855 012B                       u880 03D5  
                     u960 0224                       u881 03D4                       u961 0223  
                     u785 01AE                       u890 03FF                       u970 0094  
                     u891 03FE                       u795 01BB                       u971 0093  
                     u980 04BD                       u981 04BC                       u990 04FD  
                     u991 04FC                       fsr0 0004                       indf 0000  
          ?_usa_caractere 007C                      l1500 00E9                      l1502 00ED  
                    l1510 0186                      l1504 00F6                      l1600 041A  
                    l1520 01A1                      l1512 018C                      l1602 041C  
                    l1610 0421                      l1506 013F                      l1522 01B2  
                    l1514 018F                      l1530 01C9                      l1620 0450  
                    l1612 0439                      l1604 041D                      l1700 037B  
                    l1532 01CE                      l1524 01B8                      l1516 0196  
                    l1508 0184                      l1540 010E                      l2180 078F  
                    l2190 049A                      l1630 0457                      l1622 0451  
                    l1614 044B                      l1606 041F                      l1710 01D0  
                    l1702 0389                      l1526 01BA                      l1518 019B  
                    l1550 0131                      l1542 0113                      l1534 00FE  
                    l2182 04E2                      l1800 0FEC                      l1640 0485  
                    l1632 0459                      l1624 0453                      l1616 044D  
                    l1608 0420                      l2184 03EC                      l1560 03C5  
                    l1472 0029                      l1480 006A                      l1720 0214  
                    l1712 01D5                      l1704 0397                      l1528 01C1  
                    l1544 0119                      l1536 0104                      l1552 0139  
                    l1810 0227                      l1802 0FF3                      l1490 00CD  
                    l1650 048D                      l1642 0487                      l1634 045A  
                    l1626 0454                      l1618 044E                      l2186 0426  
                    l1570 03DD                      l1562 03D7                      l1474 002F  
                    l1482 0072                      l1714 01E5                      l1706 03A5  
                    l1722 0FC3                      l1554 013E                      l1546 0123  
                    l1538 0107                      l1730 00A2                      l1820 023C  
                    l1812 022B                      l1804 0FFA                      l1492 00D2  
                    l1660 0494                      l1652 048E                      l1644 0488  
                    l2188 0460                      l1628 0456                      l1636 045B  
                    l1580 03E5                      l1572 03DF                      l1564 03D9  
                    l1556 03BA                      l1476 0042                      l1484 0297  
                    l1716 01F6                      l1708 03B1                      l1724 0FCF  
                    l1548 012A                      l1740 04C9                      l1732 04B2  
                    l1900 0692                      l1830 0253                      l1822 0241  
                    l1814 0230                      l1806 0FFF                      l1494 00D9  
                    l1486 00C1                      l1654 0490                      l1646 048A  
                    l1662 0495                      l1638 0473                      l1590 0413  
                    l1582 03E6                      l1574 03E0                      l1566 03DA  
                    l1558 03BF                      l1478 0057                      l1718 020D  
                    l1750 04F9                      l1742 04CF                      l1734 04B7  
                    l1726 008F                      l1910 06B7                      l1902 0698  
                    l1840 0277                      l1832 0258                      l1824 0243  
                    l1816 0233                      l1808 0226                      l1496 00DD  
                    l1488 00C9                      l1656 0491                      l1648 048B  
                    l1592 0414                      l1664 04AC                      l1576 03E2  
                    l1568 03DC                      l1584 03E7                      l1760 0510  
                    l1752 04FD                      l1744 04D0                      l1736 04BD  
                    l1728 0094                      l1920 06DA                      l1912 06BB  
                    l1904 069C                      l1850 0296                      l1842 027E  
                    l1834 025E                      l1826 0249                      l1818 0237  
                    l1498 00E2                      l1666 04AE                      l1658 0493  
                    l1594 0416                      l1586 03FF                      l1578 03E3  
                    l1770 053F                      l1762 0511                      l1754 0501  
                    l1746 04ED                      l1738 04C4                      l1930 06FF  
                    l1922 06E8                      l1914 06C9                      l1906 06AA  
                    l1836 026F                      l1828 024C                      l1844 0286  
                    l1596 0417                      l1588 0411                      l1692 030D  
                    l1780 0585                      l1772 0546                      l1764 052D  
                    l1756 0507                      l1748 04F5                      l1940 0738  
                    l1932 070D                      l1924 06EF                      l1916 06D0  
                    l1908 06B1                      l1860 05BF                      l1852 05AF  
                    l1846 028B                      l1838 0275                      l1598 0419  
                    l1694 0364                      l1782 058A                      l1774 054B  
                    l1766 052E                      l1758 0509                      l1950 0781  
                    l1942 074B                      l1934 0714                      l1926 06F6  
                    l1918 06D6                      l1870 05EA                      l1862 05C0  
                    l1854 05B5                      l1848 0291                      l1696 036D  
                    l1776 0550                      l1768 0539                      l1784 0595  
                    l1952 0789                      l1944 0759                      l1936 0723  
                    l1928 06F7                      l1960 07C2                      l1880 060A  
                    l1872 05EE                      l1864 05C6                      l1856 05B9  
                    l1794 0FD8                      l1698 0376                      l1778 057E  
                    l1786 05A9                      l1970 07D4                      l1962 07C8  
                    l1946 0760                      l1938 0731                      l1954 078A  
                    l1890 066B                      l1882 0629                      l1874 05F8  
                    l1866 05D6                      l1858 05BC                      l1796 0FDB  
                    l1788 05AE                      l1972 07D6                      l1964 07CD  
                    l1948 0773                      l1956 079D                      l1884 0637  
                    l1876 05FE                      l1892 0673                      l1868 05E5  
                    l1798 0FDF                      l1966 07D0                      l1958 07BB  
                    l1894 0679                      l1886 063E                      l1878 0604  
                    l1968 07D2                      l1896 067D                      l1888 065D  
                    l1898 068B                      STR_1 001D                      STR_2 0023  
                    u1000 050F                      u1001 050E                      u1010 052C  
                    u1011 052B                      u1100 022B                      u1020 0538  
                    u1101 022A                      u1021 0537                      u1110 0237  
                    u1030 053F                      u1111 0236                      u1031 053E  
                    u1015 0528                      u1120 0249                      u1040 0593  
                    u1200 05FE                      u1121 0248                      u1041 0592  
                    u1201 05FD                      u1050 05A7                      u1210 0604  
                    u1051 05A6                      u1211 0603                      u1140 025C  
                    u1060 0FDF                      u1220 060A                      u1141 025B  
                    u1061 0FDE                      u1221 0609                      u1230 0679  
                    u1135 024D                      u1231 0678                      u1160 026F  
                    u1240 0698                      u1161 026E                      u1241 0697  
                    u1090 0FF9                      u1250 06B7                      u1155 025F  
                    u1091 0FF8                      u1075 0FE6                      u1251 06B6  
                    u1180 0284                      u1260 06D6                      u1181 0283  
                    u1165 026B                      u1085 0FED                      u1261 06D5  
                    u1190 028B                      u1270 06F5                      u1191 028A  
                    u1175 0278                      u1407 0403                      u1271 06F4  
                    u1280 07C8                      u1417 043D                      u1281 07C7  
                    u1337 05DE                      u1427 0477                      u1347 0FD3  
                    u1357 0368                      u1367 03B5                      u1377 006E  
                    u1387 0086                      u1397 03C9                      _main 05AF  
                    _byte 013F                      btemp 007E                      start 0000  
    __size_of__le_teclado 00F5                     ?_main 0070                     ?_byte 0032  
         __end_of___awdiv 0297             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
         ___awdiv@divisor 0070           __end_of___lwdiv 01CF           __end_of___lwmod 013F  
         ___awdiv@counter 0075                     _PORTC 0007                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088           __end_of_escreve 0226  
         __end_of_dpowers 001D                     _limpa 0FC3                     _tecla 004F  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 05AF               byte@escreve 0032           __initialization 07DE  
            __end_of_main 07DE      __size_of__muda_linha 003D              __end_of_byte 0184  
                  ??_main 003F                    ??_byte 0035           ??_usa_caractere 0038  
                  ?_limpa 0070          ___awdiv@dividend 0072                    _ANSELH 0189  
        __end_of_lcd_init 03BA                    ___wmul 0FD8                 ??___awdiv 0074  
                  _enable 0057                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _buffer 00A0                    _nibble 0297          ___awdiv@quotient 0077  
        __end_of_muda_pin 0057                 ??_escreve 007C                 ??_sprintf 0035  
 __end_of__initialization 07FC            __pcstackCOMMON 0070              __pidataBANK0 0FA3  
           __end_of_limpa 0FD8                   ??_limpa 007C                __pbssBANK0 0042  
              __pbssBANK1 00A0    usa_caractere@caractere 007D                __pmaintext 05AF  
                 ?___wmul 0070                   ?_enable 0070                   ?_nibble 0078  
               ?_lcd_init 0070                __stringtab 0003             ??__le_teclado 0070  
               ?_muda_pin 0070                   ___awdiv 0226           __size_of___wmul 0028  
                 ___lwdiv 0184                   ___lwmod 00FE           __size_of_enable 0035  
         __size_of_nibble 0073             muda_pin@_port 0070                   __ptext1 008C  
                 __ptext2 04AF                   __ptext3 00FE                   __ptext4 0184  
                 __ptext5 0FC3                   __ptext6 030A                   __ptext7 01CF  
                 __ptext8 013F                   __ptext9 0297                   _escreve 01CF  
                 _dpowers 0013                   _port_en 0022                   _port_rs 0024  
                 _sprintf 04AF                   clrloop0 0F9C                ??_lcd_init 007C  
    end_of_initialization 07FC             ??__muda_linha 0070                ??_muda_pin 0076  
     __end_of__le_teclado 04AF     __end_of_usa_caractere 00C1              _coluna_atual 004A  
     __end_of__muda_linha 00FE            __end_of___wmul 1000            __end_of_enable 008C  
          __end_of_nibble 030A                escreve@col 0038                escreve@lin 007D  
              escreve@str 0039       start_initialization 07DE                nibble@dado 0078  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __le_teclado 03BA                  ??___wmul 0074  
              init_fetch0 0FB0                  ??_enable 0078               __pdataBANK0 004F  
                ??_nibble 007A                 ___latbits 0002             __pcstackBANK0 0032  
       __size_of_lcd_init 00B0               sprintf@flag 0039               sprintf@prec 003A  
               __pnvBANK0 0020               __muda_linha 00C1          ___lwdiv@dividend 0072  
       __size_of_muda_pin 002E                  ?___awdiv 0070                  ?___lwdiv 0070  
                ?___lwmod 0078                 __pstrings 0003                  ?_escreve 0038  
        ___lwdiv@quotient 0075                  ?_sprintf 0032              muda_pin@_pin 0072  
            muda_pin@_val 0074            __size_of_limpa 0015            ___wmul@product 0074  
               clear_ram0 0F9B                 _sequencia 0046                 _port_data 0020  
             __stringbase 0012         ___wmul@multiplier 0070          usa_caractere@col 007C  
        usa_caractere@lin 0039          __size_of___awdiv 0071          __size_of___lwdiv 004B  
        __size_of___lwmod 0041        __end_of__stringtab 0013                sprintf@val 003B  
             _linha_atual 0048          __size_of_escreve 0057           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 0057                  __ptext11 0029  
                __ptext12 03BA                  __ptext13 00C1                  __ptext14 0FD8  
                __ptext15 0226                  _lcd_init 030A                  _lcd_pins 0050  
        __size_of_sprintf 0100             __size_of_main 022F             __size_of_byte 0045  
                _muda_pin 0029              ?__le_teclado 0070                  _operacao 0042  
                _numero_a 004D                  _numero_b 004B                  _numero_c 0044  
  __size_of_usa_caractere 0035          lcd_init@lcd_pins 0038                  byte@dado 0034  
                init_ram0 0FB4                 sprintf@ap 0038                 sprintf@sp 003D  
        ___lwmod@dividend 007A              ?__muda_linha 0070                 stringcode 000D  
                sprintf@c 003E                  sprintf@f 0032           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
           _usa_caractere 008C  
